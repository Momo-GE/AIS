<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="All-in Signing Service" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" id="c872a927-466a-4560-9cbe-7d46fe64b379" xmlns:con="http://eviware.com/soapui/config"><con:description>Swisscom All-in Signing Service</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Benchmark"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="25 OnDemand +TSA +OCSP"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Users\TAARAEV1\dev\ais\tmp"/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Benchmark"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\SoapUI-5.2.1\bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="13 Static 1T1000"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Print Report Statistics" value="true"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="13 Static +TSA +OCSP"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="Z:\Temp\loadtest"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AisServiceSoapBinding" type="wsdl" bindingName="{http://service.ais.swisscom.com/}AisServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="../services/wsdl/aisService.wsdl" id="c84a3ddf-1728-45c7-b50b-a33f5e969657" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/Z:/Projects/Stellvertretung%20Eva/AIS_SAS/workspace/AIS/services/wsdl/aisService.wsdl"><con:part><con:url>file:/Z:/Projects/Stellvertretung%20Eva/AIS_SAS/workspace/AIS/services/wsdl/aisService.wsdl</con:url><con:content><![CDATA[<!--Description="Swisscom All-in Signing Service Interface 'Compact' WSDL" Version="1.1"-->
<!--The 'compact' version is one file version matching exactly the AIS service features.-->
<!--It is itself not OASIS DSS Core compliant, but will produce valid OASIS DSS requests.-->
<wsdl:definitions targetNamespace="http://service.ais.swisscom.com/" name="AisService" xmlns:ais="http://service.ais.swisscom.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <!--################-->
  <!--Type Definitions-->
  <!--################-->
  <wsdl:types>
    <!--#############-->
    <!--XML Namespace-->
    <!--#############-->
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:attribute name="lang" type="xs:language"/>
    </xs:schema>
    <!--########-->
    <!--XML DSig-->
    <!--########-->
    <xs:schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="DigestMethod" type="ds:DigestMethodType"/>
      <xs:complexType name="DigestMethodType" mixed="true">
        <xs:sequence>
          <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Algorithm" type="xs:anyURI" use="required"/>
      </xs:complexType>
      <xs:element name="DigestValue" type="ds:DigestValueType"/>
      <xs:simpleType name="DigestValueType">
        <xs:restriction base="xs:base64Binary"/>
      </xs:simpleType>
    </xs:schema>
    <!--#######################-->
    <!--OASIS DSS Profile Async-->
    <!--#######################-->
    <xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
      <!--Additional requests required for asynch protocol-->
      <xs:element name="PendingRequest">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dss:RequestBaseType"/>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="ResponseIDType">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:element name="ResponseID" type="async:ResponseIDType"/>
    </xs:schema>
    <!--################-->
    <!--Swisscom Profile-->
    <!--################-->
    <xs:schema targetNamespace="http://ais.swisscom.ch/1.0/schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
      <xs:import namespace="http://www.w3.org/2000/09/xmldsig#"/>
      <!--mimic dss:SignatureObject as a type-->
      <xs:complexType name="SignatureObjectType">
        <xs:sequence>
          <xs:choice>
            <xs:element ref="dss:Timestamp"/>
            <xs:element ref="dss:Base64Signature"/>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ExtendedSignatureObjectType">
        <xs:complexContent>
          <xs:extension base="sc:SignatureObjectType">
            <xs:attribute name="WhichDocument" type="xs:ID" use="optional"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="SignatureObjectsType">
        <xs:sequence>
          <xs:element name="ExtendedSignatureObject" type="sc:ExtendedSignatureObjectType" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SignatureObjects" type="sc:SignatureObjectsType"/>
      <!--Certificate Request with Mobile ID auth-->
      <xs:complexType name="CertificateRequestType">
        <xs:sequence>
          <xs:element name="DistinguishedName" type="xs:string"/>
          <xs:element name="StepUpAuthorisation" type="sc:StepUpAuthorisationType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CertificateRequest" type="sc:CertificateRequestType"/>
      <xs:complexType name="StepUpAuthorisationType">
        <xs:choice minOccurs="0">
          <xs:element name="MobileID" type="sc:MobileIDType"/>
          <xs:element name="Phone" type="sc:PhoneType"/>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="MobileIDType">
        <xs:sequence>
          <xs:element name="MSISDN" type="xs:string"/>
          <xs:element name="Message" type="sc:MobileIDMessage"/>
          <xs:element name="Language" type="xs:string"/>
          <xs:element name="SerialNumber" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="Type" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:simpleType name="MobileIDMessage">
        <xs:restriction base="xs:string">
          <xs:maxLength value="120"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="PhoneType">
        <xs:sequence>
          <xs:element name="MSISDN" type="xs:string"/>
          <xs:element name="Message" type="sc:PhoneMessage"/>
          <xs:element name="Language" type="xs:string"/>
          <xs:element name="SerialNumber" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="PhoneMessage">
        <xs:restriction base="xs:string">
          <xs:maxLength value="120"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="StepUpAuthorisationInfo" type="sc:StepUpAuthorisationInfoType"/>
      <xs:complexType name="StepUpAuthorisationInfoType">
        <xs:sequence>
          <xs:element name="Result" type="sc:StepUpAuthorisationResultType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="StepUpAuthorisationResultType">
        <xs:sequence>
          <xs:element ref="sc:ConsentURL" minOccurs="0"/>
          <xs:element ref="sc:MobileIDFault" minOccurs="0"/>
          <xs:element ref="sc:SerialNumber" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ConsentURL" type="xs:anyURI"/>
      <xs:element name="APTransID" type="xs:string"/>
      <xs:element name="SerialNumber" type="xs:string"/>
      <!--Mobile ID optional outputs-->
      <xs:element name="MobileIDAPTransID" type="xs:string"/>
      <xs:element name="MobileIDSerialNumber" type="xs:string"/>
      <xs:element name="MobileIDFault" type="sc:MobileIDFaultType"/>
      <xs:complexType name="MobileIDFaultType" final="extension">
        <xs:sequence>
          <xs:element name="Subcode" type="xs:QName"/>
          <xs:element name="Reason" type="xs:string"/>
          <xs:element name="Detail" type="sc:detail" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="detail">
        <xs:sequence>
          <xs:element name="detail" type="xs:string" minOccurs="0"/>
          <xs:element name="UserAssistance" type="sc:UserAssistanceType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UserAssistanceType">
        <xs:sequence>
          <xs:element name="PortalUrl" type="xs:anyURI" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
      <!--Add RevocationInformation-->
      <xs:complexType name="AddRevocationInformationType">
        <xs:attribute name="Type" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:element name="AddRevocationInformation" type="sc:AddRevocationInformationType"/>
      <xs:complexType name="RevocationInformationType">
        <xs:sequence>
          <xs:element name="CRLs" type="sc:CRLList" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OCSPs" type="sc:OCSPList" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="RevocationInformation" type="sc:RevocationInformationType"/>
      <xs:complexType name="CRLList">
        <xs:sequence>
          <xs:element name="CRL" type="xs:base64Binary" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OCSPList">
        <xs:sequence>
          <xs:element name="OCSP" type="xs:base64Binary" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <!--##############-->
    <!--OASIS DSS Core-->
    <!--##############-->
    <xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
      <xs:import namespace="http://www.w3.org/2000/09/xmldsig#"/>
      <xs:import namespace="http://ais.swisscom.ch/1.0/schema"/>
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"/>
      <xs:element name="InputDocuments">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="dss:DocumentHash" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DocumentBaseType" abstract="true">
        <xs:attribute name="ID" type="xs:ID" use="optional"/>
      </xs:complexType>
      <xs:element name="DocumentHash">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dss:DocumentBaseType">
              <xs:sequence>
                <xs:element ref="ds:DigestMethod" minOccurs="0"/>
                <xs:element ref="ds:DigestValue"/>
              </xs:sequence>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="SignatureObject">
        <xs:complexType>
          <xs:sequence>
            <xs:choice>
              <xs:element ref="dss:Timestamp"/>
              <xs:element ref="dss:Base64Signature"/>
              <xs:element name="Other" type="dss:SignatureObjectOtherType"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SignatureObjectOtherType">
        <xs:sequence>
          <xs:element ref="sc:SignatureObjects"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Base64Signature">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:base64Binary">
              <xs:attribute name="Type" type="xs:anyURI"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Result">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ResultMajor" type="xs:anyURI"/>
            <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
            <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="InternationalStringType">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute ref="xml:lang" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:element name="OptionalInputs">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="dss:ClaimedIdentity" minOccurs="0"/>
            <xs:element ref="dss:AdditionalProfile" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="dss:SignatureType" minOccurs="0"/>
            <xs:element ref="dss:AddTimestamp" minOccurs="0"/>
            <xs:element ref="sc:CertificateRequest" minOccurs="0"/>
            <xs:element ref="sc:AddRevocationInformation" minOccurs="0"/>
            <xs:element ref="async:ResponseID" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="OptionalOutputs">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="sc:APTransID" minOccurs="0"/>
            <xs:element ref="sc:MobileIDAPTransID" minOccurs="0"/>
            <xs:element ref="sc:MobileIDSerialNumber" minOccurs="0"/>
            <xs:element ref="sc:RevocationInformation" minOccurs="0"/>
            <xs:element ref="sc:MobileIDFault" minOccurs="0"/>
            <xs:element ref="sc:StepUpAuthorisationInfo" minOccurs="0"/>
            <xs:element ref="async:ResponseID" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ClaimedIdentity">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdditionalProfile" type="xs:anyURI"/>
      <xs:element name="SignatureType" type="xs:anyURI"/>
      <xs:complexType name="AddTimestampType">
        <xs:attribute name="Type" type="xs:anyURI" default="urn:ietf:rfc:3161"/>
      </xs:complexType>
      <xs:element name="AddTimestamp" type="dss:AddTimestampType"/>
      <xs:complexType name="RequestBaseType">
        <xs:sequence>
          <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
          <xs:element ref="dss:InputDocuments" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="RequestID" type="xs:string" use="optional"/>
        <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
      </xs:complexType>
      <xs:complexType name="ResponseBaseType">
        <xs:sequence>
          <xs:element ref="dss:Result"/>
          <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="RequestID" type="xs:string" use="optional"/>
        <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
      </xs:complexType>
      <xs:element name="Response" type="dss:SignResponseType"/>
      <xs:element name="SignRequest">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="dss:RequestBaseType"/>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SignResponseType">
        <xs:complexContent>
          <xs:extension base="dss:ResponseBaseType">
            <xs:sequence>
              <xs:element ref="dss:SignatureObject" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="SignResponse" type="dss:SignResponseType"/>
      <xs:element name="Timestamp">
        <xs:complexType>
          <xs:choice>
            <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <!--##################-->
    <!--SOAP Message Types-->
    <!--##################-->
    <xs:schema targetNamespace="http://service.ais.swisscom.com/" elementFormDefault="qualified" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema"/>
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"/>
      <xs:import namespace="http://ais.swisscom.ch/1.0/schema"/>
      <xs:element name="pending" type="ais:pending"/>
      <xs:element name="pendingResponse" type="ais:pendingResponse"/>
      <xs:element name="sign" type="ais:sign"/>
      <xs:element name="signResponse" type="ais:signResponse"/>
      <xs:complexType name="pending">
        <xs:sequence>
          <xs:element minOccurs="0" ref="async:PendingRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pendingResponse">
        <xsd:choice minOccurs="0">
          <xs:element ref="dss:Response"/>
          <xs:element ref="dss:SignResponse"/>
        </xsd:choice>
      </xs:complexType>
      <xs:complexType name="sign">
        <xs:sequence>
          <xs:element minOccurs="0" ref="dss:SignRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signResponse">
        <xs:sequence>
          <xs:element minOccurs="0" ref="dss:SignResponse"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <!--#############-->
  <!--SOAP Messages-->
  <!--#############-->
  <wsdl:message name="sign">
    <wsdl:part element="ais:sign" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="signResponse">
    <wsdl:part element="ais:signResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingResponse">
    <wsdl:part element="ais:pendingResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pending">
    <wsdl:part element="ais:pending" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="AisServiceInterface">
    <wsdl:operation name="pending">
      <wsdl:input message="ais:pending" name="pending"/>
      <wsdl:output message="ais:pendingResponse" name="pendingResponse"/>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <wsdl:input message="ais:sign" name="sign"/>
      <wsdl:output message="ais:signResponse" name="signResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AisServiceSoapBinding" type="ais:AisServiceInterface">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="pending">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="pending">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sign">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="signResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AisService">
    <wsdl:port binding="ais:AisServiceSoapBinding" name="AisServicePort">
      <soap:address location="https://ais.swisscom.com/AIS-Server/ws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#ENDPOINT_PATH}</con:endpoint><con:endpoint>https://ais.swisscom.com/AIS-Server/ws</con:endpoint><con:endpoint>https://ais.swisscom.com/AIS-Server/ws</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="pending" bindingOperationName="pending" type="Request-Response" outputName="pendingResponse" inputName="pending" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="283111a9-74ef-4e8e-8123-f53f867ec4af"><con:settings/><con:call id="15a63d9b-95a8-4f9d-9c1e-1bc2e55e342f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#ENDPOINT_PATH}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.ais.swisscom.com/" xmlns:urn="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:urn1="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sch="http://ais.swisscom.ch/1.0/schema" xmlns:xd="http://www.w3.org/2000/09/xmldsig#">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ser:pending>\r
         <!--Optional:-->\r
         <urn:PendingRequest RequestID="?" Profile="?">\r
            <!--Optional:-->\r
            <urn1:OptionalInputs>\r
               <!--Optional:-->\r
               <urn1:ClaimedIdentity>\r
                  <urn1:Name>?</urn1:Name>\r
               </urn1:ClaimedIdentity>\r
               <!--Zero or more repetitions:-->\r
               <urn1:AdditionalProfile>?</urn1:AdditionalProfile>\r
               <!--Optional:-->\r
               <urn1:SignatureType>?</urn1:SignatureType>\r
               <!--Optional:-->\r
               <urn1:AddTimestamp Type="urn:ietf:rfc:3161"/>\r
               <!--Optional:-->\r
               <sch:CertificateRequest>\r
                  <sch:DistinguishedName>?</sch:DistinguishedName>\r
                  <!--Optional:-->\r
                  <sch:StepUpAuthorisation>\r
                     <!--You have a CHOICE of the next 2 items at this level-->\r
                     <sch:MobileID Type="?">\r
                        <sch:MSISDN>?</sch:MSISDN>\r
                        <sch:Message>?</sch:Message>\r
                        <sch:Language>?</sch:Language>\r
                        <!--Optional:-->\r
                        <sch:SerialNumber>?</sch:SerialNumber>\r
                     </sch:MobileID>\r
                     <sch:Phone>\r
                        <sch:MSISDN>?</sch:MSISDN>\r
                        <sch:Message>?</sch:Message>\r
                        <sch:Language>?</sch:Language>\r
                        <!--Optional:-->\r
                        <sch:SerialNumber>?</sch:SerialNumber>\r
                     </sch:Phone>\r
                  </sch:StepUpAuthorisation>\r
               </sch:CertificateRequest>\r
               <!--Optional:-->\r
               <sch:AddRevocationInformation Type="?"/>\r
               <!--Optional:-->\r
               <urn:ResponseID>?</urn:ResponseID>\r
            </urn1:OptionalInputs>\r
            <!--Optional:-->\r
            <urn1:InputDocuments>\r
               <!--1 or more repetitions:-->\r
               <urn1:DocumentHash ID="?">\r
                  <!--Optional:-->\r
                  <xd:DigestMethod Algorithm="?">\r
                     e\r
                     <!--You may enter ANY elements at this point-->\r
                     gero\r
                  </xd:DigestMethod>\r
                  <xd:DigestValue>cid:1296070807098</xd:DigestValue>\r
               </urn1:DocumentHash>\r
            </urn1:InputDocuments>\r
         </urn:PendingRequest>\r
      </ser:pending>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ais.swisscom.com/AisServiceInterface/pending"/></con:call></con:operation><con:operation isOneWay="false" action="" name="sign" bindingOperationName="sign" type="Request-Response" outputName="signResponse" inputName="sign" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1ab139ea-efd7-4ded-aa63-c1789801a091"><con:settings/><con:call id="0db3ad49-acad-42f1-993f-d11865f8c801" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#ENDPOINT_PATH}</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.ais.swisscom.com/" xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sch="http://ais.swisscom.ch/1.0/schema" xmlns:urn1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:xd="http://www.w3.org/2000/09/xmldsig#">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ser:sign>\r
         <!--Optional:-->\r
         <urn:SignRequest RequestID="?" Profile="?">\r
            <!--Optional:-->\r
            <urn:OptionalInputs>\r
               <!--Optional:-->\r
               <urn:ClaimedIdentity>\r
                  <urn:Name>?</urn:Name>\r
               </urn:ClaimedIdentity>\r
               <!--Zero or more repetitions:-->\r
               <urn:AdditionalProfile>?</urn:AdditionalProfile>\r
               <!--Optional:-->\r
               <urn:SignatureType>?</urn:SignatureType>\r
               <!--Optional:-->\r
               <urn:AddTimestamp Type="urn:ietf:rfc:3161"/>\r
               <!--Optional:-->\r
               <sch:CertificateRequest>\r
                  <sch:DistinguishedName>?</sch:DistinguishedName>\r
                  <!--Optional:-->\r
                  <sch:StepUpAuthorisation>\r
                     <!--You have a CHOICE of the next 2 items at this level-->\r
                     <sch:MobileID Type="?">\r
                        <sch:MSISDN>?</sch:MSISDN>\r
                        <sch:Message>?</sch:Message>\r
                        <sch:Language>?</sch:Language>\r
                        <!--Optional:-->\r
                        <sch:SerialNumber>?</sch:SerialNumber>\r
                     </sch:MobileID>\r
                     <sch:Phone>\r
                        <sch:MSISDN>?</sch:MSISDN>\r
                        <sch:Message>?</sch:Message>\r
                        <sch:Language>?</sch:Language>\r
                        <!--Optional:-->\r
                        <sch:SerialNumber>?</sch:SerialNumber>\r
                     </sch:Phone>\r
                  </sch:StepUpAuthorisation>\r
               </sch:CertificateRequest>\r
               <!--Optional:-->\r
               <sch:AddRevocationInformation Type="?"/>\r
               <!--Optional:-->\r
               <urn1:ResponseID>?</urn1:ResponseID>\r
            </urn:OptionalInputs>\r
            <!--Optional:-->\r
            <urn:InputDocuments>\r
               <!--1 or more repetitions:-->\r
               <urn:DocumentHash ID="?">\r
                  <!--Optional:-->\r
                  <xd:DigestMethod Algorithm="?">\r
                     e\r
                     <!--You may enter ANY elements at this point-->\r
                     gero\r
                  </xd:DigestMethod>\r
                  <xd:DigestValue>cid:446851950394</xd:DigestValue>\r
               </urn:DocumentHash>\r
            </urn:InputDocuments>\r
         </urn:SignRequest>\r
      </ser:sign>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://service.ais.swisscom.com/AisServiceInterface/sign"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AIS RESTful" type="rest" basePath="${#TestSuite#PATH_REST}" definitionUrl="..\services\wadl\aisService.wadl" id="f07525f5-66e2-400b-8cb9-66b311fcba06" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.rest.actions.service.Wadl2JavaAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Java Args" value=""/>
  <con:entry key="Output Directory" value=""/>
  <con:entry key="Package" value=""/>
  <con:entry key="JAXB Customization File(s)" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Automatic Package Names" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:endpoint>https://ais.swisscom.com</con:endpoint><con:endpoint>https://ais.swisscom.com</con:endpoint></con:endpoints><con:resource name="/sign" path="sign" id="e74263c5-04fb-404d-81ab-9f4fec2e19e6"><con:settings/><con:parameters/><con:method name="POST" method="POST" id="a0afa39f-78d5-4028-93b5-64a8f143203b"><con:settings/><con:parameters/></con:method></con:resource><con:resource name="/pending" path="pending" id="f9a2434d-25f7-4745-9849-459b0a3dedbc"><con:settings/><con:parameters/><con:method name="POST" method="POST" id="0e415cc2-b285-4cae-bec4-4fb07119be50"><con:settings/><con:parameters/></con:method></con:resource></con:interface><con:testSuite name="Regression Test Suite (Profile 1.0)" id="96c08852-b055-4885-9fbc-0a1415855ac2"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 SOAP Timestamps" searchProperties="true" id="aed39093-604a-494a-bb0e-75ed51d729ab" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="TS Sha256 AddOcsp (deprecated) [syn]" id="000e0abe-6484-4d3d-a27e-daf6c3906656"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddOcsp (deprecated) [syn]" sslKeystore="" id="11e0b008-91a9-4467-9814-d3fcb4229e2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a6a360af-810f-4d1c-ab42-e9f783dca61f"/><con:assertion type="XPath Match" name="XPath Match" id="54dd231a-feb4-411d-94e6-b03fbb37fceb"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="00d93ba4-3903-4f97-9c74-31ce74dd7488"><con:configuration><definition>..\services\wsdl\aisService.wsdl</definition></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha1 AddRevocationBoth [syn]" id="f55160b4-938b-4eb8-9401-fb8e1e50db1d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha1 AddRevocationBoth [syn]" sslKeystore="" id="dffe7705-2cf1-4163-9e97-1d5ce7f37e3e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8b744765-17f0-4e22-8410-0a1513f5388c"/><con:assertion type="XPath Match" name="XPath Match" id="08842a0e-8df1-4696-8dbb-7318070921a3"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="6210cf72-f33c-43e6-a22e-4e0444f430dd"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationBoth [syn]" id="63de8045-1286-4d4d-9c42-dc57b6d151a0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationBoth [syn]" sslKeystore="" id="2b2d7a5c-238c-4bc7-892d-46c44da9baee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="13888958-d74d-42db-8c6e-a6ec166b6d77"/><con:assertion type="XPath Match" name="XPath Match" id="7c260952-5874-49b0-9907-e71eac5053b8"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ccf22d22-6bb7-45bd-8e2d-588f5eceeffe"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationCADES [syn]" id="b73c67ee-21ac-44fc-9e26-5502181f1d35"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationCADES [syn]" sslKeystore="" id="34f5f2ad-4516-453f-a76b-39392f960b9f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="CADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9c236f8d-17b8-48cc-b13f-439015fd05c9"/><con:assertion type="XPath Match" name="XPath Match" id="51cf1969-cc2b-4756-91ee-b6681257f58a"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ddc60be0-1256-4ffd-ab38-b6e53dc7a078"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationCaDeS [syn]" id="c3bbff6a-6687-4d9b-ac2c-fbd20e206b13"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationCaDeS [syn]" sslKeystore="" id="ac83f919-7b6f-4bc6-9126-52be6ab62f83"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="CaDeS"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0681587d-b16e-498c-a261-36fea5db8801"/><con:assertion type="XPath Match" name="XPath Match" id="e1c4efa6-beee-4816-b8ed-b8b2c96c011f"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="312e9fe6-d851-4eb6-ae33-29642ff7b1f8"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationPADES [syn]" id="a6c05d60-e6c7-4e76-b035-381f4fe26aeb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationPADES [syn]" sslKeystore="" id="ac1f4f36-7240-4098-8514-adf8ca9429ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="PADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eae0e349-fd34-4c24-a294-5326c26eaa31"/><con:assertion type="XPath Match" name="XPath Match" id="a0bbc78b-9456-4448-95ca-78523b90e476"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="c0c053cd-8591-44b0-a8f0-543ae1ab6931"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationPaDeS [syn]" id="0238c27d-36b9-4717-8ca8-dc80e7028328"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationPaDeS [syn]" sslKeystore="" id="d41db87a-1eee-44c8-a13d-8b03ce4348dd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="PaDeS"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="14c8281a-2640-41e9-b876-1e9d4d8e7aa6"/><con:assertion type="XPath Match" name="XPath Match" id="2cc113c2-c31d-4600-9098-56d0669e2a60"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="552db7b0-7603-4d34-83b5-2617ca24db90"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 NoRI [syn]" id="2d2432a0-b6d2-4d47-bd7a-19695cbb7942"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 NoRI [syn]" sslKeystore="" id="03304b58-41fa-42b0-a886-29f7e2d13e40"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2d715f1-3672-4c8f-a633-3d54ecff5c7e"/><con:assertion type="XPath Match" name="XPath Match" id="85ce3e96-f5de-44e4-8cab-7b7b417b1097"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="010c23ab-3dae-4963-bcf7-eb2d2ea911da"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 1" id="e32f1173-6909-45ac-9a86-0b60223a3a05"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Sha256 NoRI [syn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Sha256 NoRI [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [syn]" id="040871ee-74d3-4841-95a1-9de6166b9afa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [syn]" id="1c48972c-5ce5-40e1-aab0-ab8bbc72c889"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="id-256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="800b30f1-0cdb-4f00-8574-6866fc32ad2c"/><con:assertion type="XPath Match" name="XPath Match" id="cd223870-270e-428a-89f9-7957f6395740"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="id-256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="09f2a558-695e-4203-9d17-f5cbad437472"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 2" id="cc62a877-5ab1-4c1d-a964-c11c5d3d9dbc"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [syn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [asyn]" id="4d543e71-6d51-449e-94e2-254e99608247"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [asyn]" id="99a70ff4-6d71-487f-aa0d-9599255ca749"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce935520-301d-42f6-b0f3-f68ba0e8b60b"/><con:assertion type="XPath Match" name="XPath Match" id="bd0eab0d-ae1c-4af4-94af-0ffe282b2fe6"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="6e97f2c6-2e81-4a6e-93ff-5925fdda4da9"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 3" id="7db658c6-fe4f-471d-98f4-122de6d48cf0"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="07491194-15f9-482b-8343-f6f414ccde6b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" useXQuery="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="47e1e1a7-84bb-4f7e-a916-67cb0cf1084e"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="04d1b646-bdcf-48c6-8fa8-cd3d6b4dc0da"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="fafadd26-5de7-46fd-8656-765c4609849f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>2a6ca30b-fe68-4e63-a4d5-7f525a265774</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="59db2473-71a1-4d86-81ab-1cae98e6031e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7e4a2cae-d7c4-42b2-9656-ad3d380e9ce1" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 4" id="d6167f8f-0e81-4360-810c-de9be235ba17"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request (initial Batch Request)
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response (Poll Response)
holder = groovyUtils.getXmlHolder( "Poll RequestID (Pending)#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:Response/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="b7d3ba89-c4c6-4b71-ae5a-d2d28778f522"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="cdbb192e-7c38-4a81-adbc-a56d6cda51f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="984187a3-e860-4406-a3ce-2e150f5bc038"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>2a6ca30b-fe68-4e63-a4d5-7f525a265774</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e13e089b-5d6a-42f7-8458-8ef0a4bd3a9f"/><con:assertion type="XPath Match" name="XPath Match" id="3f426805-6419-463c-aab2-c61e7ef59127"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response  xsi:type="SignResponse" RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="256">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="384">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_1">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_2">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_3">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_4">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_5">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_6">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_7">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_8">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="34b64694-47ca-467f-88db-cfe09fa160bf" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="02 Timestamps [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b86fb256-cd64-4676-b408-7d04a84c5703"><con:settings/><con:testStep type="request" name="TS WrongRevocationType [syn]" id="e54b48e5-4100-4195-9794-dd6348e17197"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongRevocationType [syn]" sslKeystore="" id="3dc13c21-753c-4bbd-8a62-304cccb5e833"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="xxx"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="87af6c49-445d-4ccd-87eb-391f42413415"/><con:assertion type="XPath Match" name="XPath Match" id="d6d356cb-291a-49b4-99c7-f6f93d2d55c9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">Unknown AddRevocationInformation type 'xxx'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongCust [syn]" id="6f9fa792-f66e-4043-9cc8-bd940b64483c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongCust [syn]" id="20e019c4-28cb-428e-b12f-4c18cdbbcf5a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="130eb49b-a203-41cc-99fb-9716a7cf8f76"/><con:assertion type="XPath Match" name="XPath Match" id="fa5658cd-f453-414b-90c5-12a383a84668"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAlgo [syn]" id="e592d844-8ee2-4cb5-8374-252a59ef6592"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAlgo [syn]" id="dade587f-74c2-45b7-8b85-d4ccac28fe63"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ee082059-e694-4639-a927-97975dcd3060"/><con:assertion type="XPath Match" name="XPath Match" id="eece0bb4-2284-43d2-80b7-23f2e7e30aa7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedDigestAlgorithm</ResultMinor>
  <ResultMessage xml:lang="en">Unknown DigestMethod Algorithm 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongDigest [syn]" id="0786469d-48fa-4a92-815e-532639718379"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongDigest [syn]" id="d8950aa6-a9c6-4cfd-b687-08cc6c67f0cb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5d37b07e-80c5-4b71-b61f-d2d99d00ac41"/><con:assertion type="XPath Match" name="XPath Match" id="676ae83c-a29c-4463-92e5-fff81ae88489"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Wrong Digest length</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongProfile [syn]" id="4020ded1-0406-45c1-9020-5d72f3aacca5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongProfile [syn]" sslKeystore="" id="b1dcb98b-b756-4460-8418-811acf77ba96"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
                      Profile="http://ais.swisscom.ch/0.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ad1bea2b-dc26-4948-9fea-f5b840659d1f"/><con:assertion type="XPath Match" name="XPath Match" id="8192453b-96d3-4fbe-8543-3bc35cead47b"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedProfile</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Profile 'http://ais.swisscom.ch/0.0'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MissingAddProfile [syn]" id="f04c4dc0-a49d-4bdb-83f6-feddb1b22db4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MissingAddProfile [syn]" id="030b87ab-92fc-4aa4-8d0a-cad90a50a55e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <!--<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>-->
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ed243f05-ab21-4b67-8a65-5f9c13114f56"/><con:assertion type="XPath Match" name="XPath Match" id="585d086a-9986-4b42-b9fd-328081637e02"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AdditionalProfiles> is missing. It is mandatory for Timestamp SignRequest to define the Profile.</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 1 [syn]" id="5bba31a8-0f61-4ca1-a08d-6ab4aedb953b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 1 [syn]" id="998ccf1c-1239-4b29-9f61-da5c07767d48"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eedfb779-849f-4030-a924-7365609147d2"/><con:assertion type="XPath Match" name="XPath Match" id="ba3d3c20-7eb3-44b7-9ecb-6f6a1e1dcd99"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 2 [syn]" id="0e2392c1-bfa6-4aca-92ca-e9e04e596e6f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 2 [syn]" id="f39bf586-ff94-4bfb-9c28-476b2818903c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="174cf950-5f1c-43ca-ace8-282ed8ce9df2"/><con:assertion type="XPath Match" name="XPath Match" id="2dea447d-439b-451a-8809-6382616c9a06"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongSigType [syn]" id="9c09a339-f35c-4939-aae9-8abe665fabff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongSigType [syn]" id="a6fe2dc2-2473-4229-ac2a-cdf1b56b4daa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:0000</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d46f930f-ab37-4fb0-87d2-0df62634f338"/><con:assertion type="XPath Match" name="XPath Match" id="dc1f3feb-a5f1-4eef-a9a7-eea8d55fe48d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown SignatureType 'urn:ietf:rfc:0000'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButMissingProfile [syn]" id="c5ab104d-26f7-4acb-a136-b87618c84feb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButMissingProfile [syn]" id="55939aed-c85e-4d59-a8ed-1eb94b714a4c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="64a2dc99-537a-4e14-86ec-2637e2553feb"/><con:assertion type="XPath Match" name="XPath Match" id="c969f306-5087-4c7e-ad8d-7c2ec1f68b1c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one DocumentHash requires presence of Batchprocessing Profile</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButMissingDocId [syn]" id="ce2bf50b-8a48-4bf5-b994-46703525180a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButMissingDocId [syn]" id="1881af3f-f3fa-46ac-95b8-ae528361752d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e89d456e-ba91-48eb-be12-f818293670cd"/><con:assertion type="XPath Match" name="XPath Match" id="53e80550-abd9-45dd-9aa6-cb66e7b85da2"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButSameDocId [syn]" id="4a08cf64-63f0-4188-b439-fff4239e522a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButSameDocId [syn]" id="94977855-3db1-485d-8bbc-6060d38cedc4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="xxx">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="xxx">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="939290d6-67c9-413d-a840-742406ef970a"/><con:assertion type="XPath Match" name="XPath Match" id="76ee22c1-103b-41a7-acef-2cc533316cde"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleSigType [syn]" id="6ff1b9d5-4f37-40ab-b861-a41c44d84f8d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleSigType [syn]" id="a709d2f5-cb80-4aa6-8df8-edadd39bfaa2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2c4da704-eda2-433a-a447-f9ae95de5755"/><con:assertion type="XPath Match" name="XPath Match" id="363ed751-93f0-4a5b-8cba-2659dfe8804c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;SignatureType> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleName [syn]" id="eb1d00a3-dd5c-4c1c-8f19-61378001ac52"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleName [syn]" id="d6406c7c-37bb-4574-821a-91c9df399e1a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <ClaimedIdentity>
                  <Name>xxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9e70f162-4c8d-4dc1-a1d3-e2431b7a2e73"/><con:assertion type="XPath Match" name="XPath Match" id="50d0b020-59f2-4629-b953-f052cee06659"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;ClaimedIdentity> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleClaimedIdentity [syn]" id="1123c975-1581-4813-b816-fe84daf2d019"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleClaimedIdentity [syn]" id="e18a034d-385f-46ce-88a2-d7e7fb42ecdb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
                  <Name>xxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8b238287-1d9c-48a3-8f16-d05d019a9812"/><con:assertion type="XPath Match" name="XPath Match" id="f39c3506-b55c-419e-ba8a-c523bf22d5ab"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleAddTimestamp [syn]" id="f0b14964-bf61-482e-82ca-ba03ba084a30"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleAddTimestamp [syn]" id="b9f93748-dc00-442b-872b-c38873147528"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="200708d1-0397-40bb-a24f-512083989c0e"/><con:assertion type="XPath Match" name="XPath Match" id="40ca2fed-3e53-42a1-830b-0d6d8ad06c7c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddTimestamp> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS KeyEntity defined [syn]" id="004dfc99-4d98-450b-8d2f-39b0ee959acd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS KeyEntity defined [syn]" sslKeystore="" id="e3d0d4e7-a211-4e56-aa8d-483a2f261d58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2befba65-4b6a-453f-b1b6-01fa3f3f80aa"/><con:assertion type="XPath Match" name="XPath Match" id="5d3d8417-440c-4131-aafb-79048cd2e15e"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<Result>
               <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
               <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
               <ResultMessage xml:lang="en">Unknown Key ID in Element &lt;Name></ResultMessage>
            </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="03 RESTful Timestamps" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="33b2db68-ef98-46b2-b419-800bd63693b4"><con:settings/><con:testStep type="restrequest" name="JSON TS Sha512 [syn]" id="18896d0f-dfb0-459c-a425-c2bcb78cc48b"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Sha512 [syn]" mediaType="application/json" postQueryString="false" accept="" id="c88c98c5-77cf-405a-9a83-926c217c163d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA512}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f62dc00d-5ae4-4a16-b9dc-eb9d66161aff"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="580f1fd9-54d9-4a4d-a74a-59f557ff3151" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:Success"},"OptionalOutputs":{"sc.RevocationInformation":{"sc.CRLs":{"sc.CRL":"*"},"sc.OCSPs":{"sc.OCSP":"*"}}},"SignatureObject":{"Timestamp":{"RFC3161TimeStampToken":"*"}}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [syn]" id="dfd256b0-3857-4c64-b5e2-3550f4fe34e8"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [syn]" mediaType="application/xml" postQueryString="false" accept="" id="09642d6a-c472-40c3-a3d4-47520baed9fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="081a3af9-bc9d-4ee3-808f-b19cccecc19d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="edd4de36-1d08-4106-a088-efc7661b53fb"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [syn]" id="9e5a00cf-c58f-4f70-bf64-5be82543fadb"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [syn]" mediaType="application/json" postQueryString="false" accept="" id="141172b9-7ad7-46d6-873b-ad4a3d70cc55"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7a35dfd8-56bd-407d-893f-eeebe36b68f0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="610a8c43-9a66-4369-8e2f-ec0c32b6010a" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:Success"},"OptionalOutputs":{"sc.RevocationInformation":{"sc.CRLs":{"sc.CRL":"*"},"sc.OCSPs":{"sc.OCSP":"*"}}]}}}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [asyn]" id="8a247d81-e5b5-403c-a218-30077f14e37d"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="7d9b1bc7-b90b-4dcd-82a9-8687449a4d4b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0e33c7b0-bc98-42ee-8cd4-1dddc1fa3cfe"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2daa33b0-f2f0-4a5e-8ef8-b00cfac86a92"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="1cd0cfc7-289d-43d5-9dd3-459e448864a3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="33d826ec-7bd0-4d4c-90fc-b037dabec922"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="5d311fb3-8b3e-4f46-a347-bbc9bb96f440"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="38b2106d-b3e1-493d-8022-d1275339766c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>f02eaead-2e3e-4f98-abc0-b4d20b80afa0</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e5d73d6d-95fd-45e6-84fc-b6dbbcb6c02c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="5bbbd086-618c-4117-8aed-23ad7d5b29fe"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="d7b1d313-d81e-4336-bd4e-fa38b79a1c70"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="33236e5d-aafc-4b3d-b469-6b8314e6c615"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>f02eaead-2e3e-4f98-abc0-b4d20b80afa0</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="45f46928-72fe-4595-b993-bd25d13c3141"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="598cbb7d-f27d-4163-a94b-7f005b40dee6"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [asyn]" id="bcb6408b-7da6-4cfe-8d55-6282aeb3c759"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="4a0a5778-4c87-467c-a322-1d248f756668"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2b267cc4-5bad-4e5f-a4b4-35042a00d5cd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a0daf205-7522-46f4-8505-da42e35e84c6" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="146528c5-258f-4497-b394-894539a42887"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON TS Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="39a4861c-21fa-4e59-8228-ee09c215c09f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="77ddfe1d-b2ea-4c99-aa05-6853a1fe7f9f"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="684484e1-81b4-4d3a-8dc8-6a1bcbecfc2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="5e719ba7-52e8-4edb-8d69-1e082088644c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="70cf28ae-feca-4ad6-b852-aeafca6a77b6"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("JSON Poll RequestID (Final)")</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)" id="3cdcac46-9119-47fa-b7c1-2096d74ba83b"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept="" id="8df6f25c-f2f8-41d4-a6d5-2469307f00bb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f9a0131-4cfb-49b0-a084-5e476c22fdc4"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c9ea08ee-d90f-466b-8cc7-13072a347142" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:Success"},"OptionalOutputs":{"sc.RevocationInformation":{"sc.CRLs":{"sc.CRL":"*"}},{"@WhichDocument":"512_1","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_2","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_3","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_4","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_5","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_6","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_7","Timestamp":{"RFC3161TimeStampToken":"*"}},{"@WhichDocument":"512_8","Timestamp":{"RFC3161TimeStampToken":"*"}}]}}}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="04 SOAP Static" searchProperties="true" id="a6c6b5b7-ddeb-49d0-83cc-402213f514cb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Static AddRevocationBOTH NoTSA [syn]" id="513e4b51-f81b-4e2f-8c58-abf35d69a51a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH NoTSA [syn]" id="2903f4ee-17b1-48fc-9a11-438b8e8d7d43"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e09a2bc4-2025-43f1-b378-12b710e4ee69"/><con:assertion type="XPath Match" name="XPath Match" id="2908a966-60ad-4a7a-899b-42fd0add2f71"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="a8603785-38c9-49b7-aae4-0a1721287312"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationBOTH SHA1 [syn]" id="f60bece5-4c65-41c6-a9b8-1c7eb8467ae2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH SHA1 [syn]" id="17a8e37c-3560-404b-b440-7a92f2de13e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5ed25de9-555a-492d-9969-927b2522179c"/><con:assertion type="XPath Match" name="XPath Match" id="4ec0c962-3487-42e9-8e3f-280469d22dd8"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="70d062cc-ca2b-4e96-aec6-dcf6b8fab489"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationBOTH [syn]" id="24e25236-22a5-41c2-890a-82764c16f8ed"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH [syn]" id="91ba30f0-e1a6-4568-9930-f54a506c9d15"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26110cb2-11eb-4fba-9956-0ebfd7091d64"/><con:assertion type="XPath Match" name="XPath Match" id="7bb5b65e-6360-4993-bbf0-2e2abe0bc890"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="5bcce9ea-23b5-4cb4-85bc-4b68ae786a6d"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationCADES [syn]" id="d8980d42-e8cc-44d6-b399-f9ac59151730"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationCADES [syn]" id="08dc6afc-984c-4dfe-8a9f-27784f21425f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="CADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e0f6b95b-2fdf-4b9c-b2de-0ad016d3290a"/><con:assertion type="XPath Match" name="XPath Match" id="8270e21a-dfca-41c4-b157-d587e87076f2"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="f3de9b40-b986-4080-bf8b-2c0a32f993a7"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationPADES [syn]" id="82131180-db96-4945-a478-ffbfb6f52432"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationPADES [syn]" id="fffe85b1-e84e-4140-ad42-6d9255c82742"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="PADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0da79d18-3585-4fdf-8bb2-659837859376"/><con:assertion type="XPath Match" name="XPath Match" id="27cd8738-276f-4ec4-b049-aae09d4ce450"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="392d5177-b0bf-40b7-9149-4d83ac52e794"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static NoRI [syn]" id="7a6b5054-b583-4d3c-80b1-23e5c82ddcaa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static NoRI [syn]" id="dbbdf500-761d-46cd-aa33-934709028f67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2916171d-6669-49d1-9995-a93b2f3fe850"/><con:assertion type="XPath Match" name="XPath Match" id="f009087a-4cf7-47a9-a5f8-c7a875d39994"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="8bf48048-e025-49ac-ac50-de937666efc6"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [syn]" id="9c7bb6d8-af48-40bf-8659-f21f7578cb95"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [syn]" id="f467c7fb-2aca-4fe6-a4ef-3870b0279d90"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="id-256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="58b6499d-3bb1-4ada-a17c-87f56736dfd8"/><con:assertion type="XPath Match" name="XPath Match" id="966d30e1-23fd-4861-821e-1d6a530e567c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="id-256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="03232030-1c40-48fe-b28b-8932c71a45fe"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [asyn]" id="f32b7e5d-8597-4ace-9eab-8154af357057"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [asyn]" id="ff3bb616-7e8a-4b6b-8bab-a26a5d61f0a8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="866eeade-37dc-4c7a-9406-927f3bc221b6"/><con:assertion type="XPath Match" name="XPath Match" id="e3225fa4-d30f-4803-a393-9fb4e66b421d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="cb9841c3-5869-44c0-8317-1bac056cffbb"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="d2cb9dd8-bc27-4952-9025-f10b71f664a1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="569784ac-a2c2-47eb-8d4a-7818d681f23e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="a0ab9c90-7b62-4a6a-9999-d472bc201f07"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="c35c1bd3-697b-4002-b7b6-617d81a4df28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>539f5864-5f3e-434e-9638-d7aaba3fb461</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce86ab02-f268-4324-b35c-f05e1a30568d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9e1dfc3d-35c1-44c1-add2-e016b7032856" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="5501a242-b798-4fb3-8ded-4d1e3cc6902d"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="b199f0a7-bcfb-40eb-9c36-9c3ae72c584c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="cb881149-ee3d-417a-bc74-a10172eb9a5d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>539f5864-5f3e-434e-9638-d7aaba3fb461</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a5c4b907-0c01-407a-94b3-a2181d462487"/><con:assertion type="XPath Match" name="XPath Match" id="4867b7bd-8fad-405b-bf29-a716259aea92"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="c18c1717-eea7-4d96-821b-4e3e0a49226e"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="05 SOAP Static [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="67be2b3b-3d19-4545-bdbc-a40f0bb0c7d0"><con:settings/><con:testStep type="request" name="Static WrongCust [syn]" id="1751f1f9-0159-4b2e-998d-ab818cf003b8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongCust [syn]" id="43fabd87-0ada-4509-a45b-e7d3ca22cde1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a1b829cc-4063-41a4-8a5a-6f8722673f26"/><con:assertion type="XPath Match" name="XPath Match" id="a57b34d9-4637-49a2-95b4-b711a326f082"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="e7c7430f-a399-45f9-a4e1-3f30c62f3f9b" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongKeyId [syn]" id="dc669ff0-58d8-4b7f-baa7-e8bd33488634"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongKeyId [syn]" id="443d3bb6-82bf-4ccf-8274-9c57aedc9b4f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="04e8d471-bae9-44f1-9b48-3eebccd8b563"/><con:assertion type="XPath Match" name="XPath Match" id="570593f0-385c-4c3e-8a7b-78a10cb4c41f"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Key ID in Element &lt;Name></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="38dddd2d-d546-4018-9fb6-14d18424dc63" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongAlgo [syn]" id="e5ec63ad-1a76-420a-b4f5-e06665d29bb6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongAlgo [syn]" id="2c9633f4-baa0-49e7-9640-6b7a0bea8a58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="364e9dc8-e630-44ae-8212-a56a33954524"/><con:assertion type="XPath Match" name="XPath Match" id="8fee36bd-d7ec-42a7-8a94-2e7b520ff891"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedDigestAlgorithm</ResultMinor>
  <ResultMessage xml:lang="en">Unknown DigestMethod Algorithm 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="d7ddc079-d805-46e7-a9e0-2c9c34c9ee82" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongDigest [syn]" id="04151f70-4657-4664-a610-90a0cff3b12a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongDigest [syn]" id="a67dcbd0-9026-4f6f-b4b4-a2af75ac1daf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3f621d0b-314f-4c79-b3dc-25e40bb0ddd0"/><con:assertion type="XPath Match" name="XPath Match" id="24f73534-28f2-42bd-9726-d07a9f8f56db"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Wrong Digest length</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="821ef2db-da1a-4a6c-8cb1-1d6267d8536d" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongBatch [syn]" id="7a82bcd8-57c5-421c-baec-1c701abfed46"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongBatch [syn]" id="8b3833e2-7003-4f0f-b5c4-c35f95b402d5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="06a77b1e-2585-4fb4-b4ab-be0e2744ab30"/><con:assertion type="XPath Match" name="XPath Match" id="f28db1bc-f91f-4d58-9a57-26fc7343eec6"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one DocumentHash requires presence of Batchprocessing Profile</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="da68acb5-2408-4527-ae12-2414e4ba9e4c" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static BatchButSameDocId [syn]" id="a41ae32a-7b5b-4cc8-8f63-777767ce356f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static BatchButSameDocId [syn]" id="d3cc8aa9-27be-433e-8dff-a5bade19598e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b8e2f48d-ecac-4187-8771-984c08586117"/><con:assertion type="XPath Match" name="XPath Match" id="17dd73c6-b546-4696-b38b-06fd06c2b5a9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="9a413c2b-4b69-4764-9a47-a03c2013e37c" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleAddOcsp [syn]" id="0b8a4457-41e9-4f30-8f2b-5d036261f3ee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleAddOcsp [syn]" id="7850a6f5-21fb-442f-b88a-bd09234fd2ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7b903d50-3627-4342-b82a-59f6dbf61bd2"/><con:assertion type="XPath Match" name="XPath Match" id="410957e0-8c81-474b-9da6-0b66f48a3677"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddOcspResponse> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="15e3b6cd-1912-48b5-b2c1-7a40dbea1a08" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleRevocationInfo [syn]" id="bfbb7342-42ea-47a1-914b-628b80f6d597"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleRevocationInfo [syn]" id="6fd5a3f5-9b92-4c19-be3a-53c67f52a997"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8a1d35d6-f407-40bb-9ac7-37bb0d1ed166"/><con:assertion type="XPath Match" name="XPath Match" id="2e731a00-39ce-4770-b1a5-0ed9e0aea425"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddRevocationInformation> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="03f52537-2be7-49ca-92d3-16bb160ebd01" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleAddTimestamp [syn]" id="86528590-4f73-464c-b868-c61d1c596720"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleAddTimestamp [syn]" id="d2fb12f8-d7a1-45f1-aebf-e8a0b318a859"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b12e135e-7e3e-4b03-b14a-e8b48068f084"/><con:assertion type="XPath Match" name="XPath Match" id="de41d3b0-e8a8-4ac1-8e56-e3627a15d370"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddTimestamp> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="5a65136d-76dd-44f7-9972-6359c09b3c68" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Poll WrongRequestID" id="46450831-4b81-41c5-acc2-c1ab2d90d4b4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll WrongRequestID" id="8269621b-14a9-4c7f-bd97-cdd0517da0ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>xxxxxx</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c8587c6e-fca1-49fc-9833-f8406cc8ecfd"/><con:assertion type="XPath Match" name="XPath Match" id="29cbe75a-6899-44c6-96b2-4b54cffd04ce"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:Response/xmlns:Result</path><content><![CDATA[<Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown ResponseID 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="eb137876-706c-4eff-8678-32844590c92b" name="Schema Compliance" disabled="true"><con:configuration><definition>..\services\wsdl\aisService.wsdl</definition></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="06 RESTful Static" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1ab26418-fd04-4854-a10f-cf352ee8c8a5"><con:settings/><con:testStep type="restrequest" name="XML Static SHA1 [syn]" id="94923a38-8386-42cc-ad62-c39a2d3fd64a"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static SHA1 [syn]" mediaType="application/xml" postQueryString="false" accept="" id="9ba46770-c12f-46f3-bf22-c24b90db09fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f7e86462-b2bb-4af8-b5ec-ab87105a195e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="51ed0edc-7c24-4e3e-96eb-9b89339c7f1c"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML Static [syn]" id="5b0e6265-22df-4176-aa2f-a8b92fd21109"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static [syn]" mediaType="application/xml" postQueryString="false" accept="" id="9cc8e161-7dcb-4f6f-acc6-d668a32d77d7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="afb82d2c-aa36-4f21-acc3-8c0ba64e38be"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="799deddb-9439-4f63-8a35-da2346fb09a1"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static SHA1 [syn]" id="e266bb00-ba63-44aa-ad8b-53d3d41862b3"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static SHA1 [syn]" mediaType="application/json" postQueryString="false" accept="" id="9c63d7a0-bbaa-45c3-b625-d5561b04ed36"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA1}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_1}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3a1ab6e0-c9af-4ca5-8ea2-7ea935f15819"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static [syn]" id="223fad43-d2a4-4b46-bfd4-b31b04d73af6"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static [syn]" mediaType="application/json" postQueryString="false" accept="" id="9fb199e5-08a0-4ef7-b455-dbad6a53b217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3513dbf7-7035-484c-945a-9e9e8571d9f2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="a0f31775-ff38-4e42-b969-275e761888ab"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Static [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML Static Batch [asyn]" id="06cbda03-8c9d-45c7-b4b1-a3dac4af4269"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="008cf739-110e-4c57-aa99-776b89723759"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a73987c9-7eb2-4910-ab95-f52462969119"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="197ce675-eb48-43d9-aa29-47d942bb0361"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="4788d1c0-e531-45cb-a54e-050c55847ce1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="e7fcb3e5-5200-4995-bb6c-aaf577ff2a2f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="200fd08e-fc2a-49e8-9d31-55dac47ce5e0"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d5006f36-aed5-48c6-826a-6a7502cb10d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>034a03ae-3cbd-4116-a2cc-b4f5b0d7f481</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f2b519f0-5b30-48f4-8d37-00cbfe698c2e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="30007f13-61ab-479a-a564-e5d8b0890527"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="447d8413-d023-42e7-9d87-54a9c2caaf5e"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="efb2c5e8-aa5f-41fb-84db-0189dc4b1c89"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>034a03ae-3cbd-4116-a2cc-b4f5b0d7f481</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="18a3a157-3293-449f-bd6a-aa1383ed15a2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1de0b6f6-7c06-42b9-87b1-f9f0efff5f67"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static Batch [asyn]" id="db6e47f2-04e8-494b-bf81-d97866218395"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c96a1f8a-cb47-4e53-8586-dae3accd861f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"},
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="30f94fbb-ae11-4076-a667-ccdc3a107de2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd4b4278-100a-4946-bf53-85f3d5f2a58a" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="13ff7387-3bf1-4664-bb83-d17cf4ec1dbd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON Static Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="6ce9ea12-eca1-4788-a915-b00646d9e92a"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="20798d95-07ef-4681-8d00-245a0d6778e4"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="e3f9bc6d-c707-42c1-a447-509db3fc800b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe9f5390-affb-47f2-9af3-6781173fb166"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="35eefcd7-7346-4770-a145-08a30f7f69e5"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("Validate JSON Response 2")</script></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="216a017a-acb0-4d39-8ab8-84da2e6bde6f"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="07 SOAP OnDemand" searchProperties="true" id="49af4756-b8a6-4266-8352-081638c22cdb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand ADV SHA1 [syn]" id="4bd9187a-56f1-492e-9254-09076627485d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV SHA1 [syn]" id="c59b98b0-3697-4952-bd18-dfa39dfb2652"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f37d7c24-f52f-4655-b579-d46296a69631"/><con:assertion type="XPath Match" name="XPath Match" id="49c34bb3-5431-4968-be36-3c6866920d41"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="1c4da229-3700-4cec-86c1-64a22f1275e4"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV [syn]" id="752cea58-7be4-4d09-b8ca-c16d87fed56b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV [syn]" id="6a776ff1-d613-4204-86dc-5ec36165947c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f5a0990-7a31-49c4-8579-ec62bc473584"/><con:assertion type="XPath Match" name="XPath Match" id="d58c5218-e900-4b9a-8ffc-ff33e44506ba"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ae68dc05-8bf0-4bf7-b589-82635847d074"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [syn]" id="f06cc4c5-c782-418a-abb5-2804f20bfa8f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [syn]" id="be3210bf-844e-4b59-ac0e-8167ce1b9cb4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2c00b5ec-f01e-4a31-b45c-2ce9994b078f"/><con:assertion type="XPath Match" name="XPath Match" id="96090e95-84a9-49f1-b6c1-c35601454bbf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="4c671810-8f49-40d9-80e2-baf439139aec" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [asyn]" id="f6c88a13-68a9-47dc-b1d6-73eb595d5425"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [asyn]" id="d2c8a179-ccd9-442c-885d-0ce323748bbd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9d1ab4a4-85a1-40f1-ad77-7a2bc9c2d50d"/><con:assertion type="XPath Match" name="XPath Match" id="fdac1ee2-cf26-4207-a390-f5806bf12ebf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="4a6f64e2-c464-421a-ba23-339a05e49c2a"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="85629bb0-2f15-45a1-a2ac-e13773dc2920"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="926a8cba-a4ab-4033-a23a-6e173fffceaa"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="1fe13422-a7f7-42f8-9e5c-24387437591b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="399d3567-6424-4e38-9553-2ff3f05eb048"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>60d0b012-7f70-4eee-be78-ab40a8093859</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4b31209-9338-46f3-af4b-e133ea0bbe9f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="be64ab8c-4c6b-45bd-9f1f-4bca9b87fb0b" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="3ed2e749-3e48-4e38-bbfd-935e1b19d782"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="10f292da-ab2d-44c9-a423-40dc7d54143b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="18c5097e-96f3-44a0-9c3a-46dc2f7efeda"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>60d0b012-7f70-4eee-be78-ab40a8093859</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd75482c-f09c-4ff2-aee1-ce9f68fba634"/><con:assertion type="XPath Match" name="XPath Match" id="4e2afc9f-73f7-4219-bac4-3de16cbdfac4"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="e19877bf-b058-40f0-878c-77c43c899fb4"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV DN-Special-Chars [syn]" id="9739760a-31d8-4ef9-b814-ffbb6f8a5b4d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV DN-Special-Chars [syn]" id="82b3dcb9-7565-4272-a62d-a186c5b44665"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ôèùçæ, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77f6654b-c26c-4783-a3fa-547cbeafa4dc"/><con:assertion type="XPath Match" name="XPath Match" id="bad7279f-f179-4708-ba6e-fd85b2bc1a0c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="06ae628b-0912-426d-8781-ff9ec065a68e"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="08 SOAP OnDemand [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8d47d59d-4173-4037-ab83-0bbc6ea6adb0"><con:settings/><con:testStep type="request" name="OnDemand QUA noMID [syn]" id="8b6aaf07-cd51-461b-8e19-885611d11b89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA noMID [syn]" id="16785f20-bc45-4ef4-8c27-6b291d60b9a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c69df9b6-9195-469f-9dc0-7d606f6bf5f6"/><con:assertion type="XPath Match" name="XPath Match" id="8d9cd33d-0826-47a8-b867-61dbfb113ba3"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result/xmlns:ResultMajor</path><content>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongCust [syn]" id="58efc72b-be73-49d4-be1b-6b82cf3eb343"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongCust [syn]" id="d4802b9c-0aca-46c5-9d79-daa430448bcf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="adf67549-402e-4ad2-a630-f1384ffa0772"/><con:assertion type="XPath Match" name="XPath Match" id="21cde60c-a55c-40b3-8bca-704d9a0f97b5"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongStaticId [syn]" id="c034325a-932d-4eef-b36b-2a1fa7a04693"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongStaticId [syn]" id="252d86f6-d609-430b-8d25-7124877d1f2d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="62d451f1-558b-4612-bf80-f05464915ec5"/><con:assertion type="XPath Match" name="XPath Match" id="b0194047-d054-40a6-a606-511e55e089c7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Service Name in element &lt;Name></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA WrongDN 1 [syn]" id="815cea19-88e8-462b-bbaf-cb0676369ef3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA WrongDN 1 [syn]" id="3a3aac53-d5cf-4473-8eea-f11b3fc0f4b4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>xxxxxx</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5a212d9c-027b-4e0e-a0a8-73b841c31afa"/><con:assertion type="XPath Match" name="XPath Match" id="b46cf76e-98d5-4f4e-9065-4e7bb54287a7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA WrongDN 2 [syn]" id="ea6ba43c-2e7c-457e-a427-a003906ab875"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA WrongDN 2 [syn]" id="81338ffd-afe5-4a81-8024-33aec23d4bd4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=,o=,c=</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cba1ae16-5115-4036-b8ef-0972fb7fa1a8"/><con:assertion type="XPath Match" name="XPath Match" id="9ae2454d-ce24-4896-b779-a4d02eb6e64d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA OnlyCountryDN [syn]" id="f82e3b69-f718-49bd-b805-e7df3cb3f20a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA OnlyCountryDN [syn]" id="79991322-d713-4723-99c8-815b07613c18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8cffe813-ce7c-4750-a12d-4e738d50019c"/><con:assertion type="XPath Match" name="XPath Match" id="1ebb5b10-9524-43b9-b7ed-defd35ab4a37"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongOCSP [syn]" id="a33d8413-5c75-4092-9c81-242498161105"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongOCSP [syn]" id="62af5149-47dc-4c53-81a7-69da0813fed7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:xxxx"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="35456da7-214f-4561-8583-d23d06d8026c"/><con:assertion type="XPath Match" name="XPath Match" id="9c8fe64e-00e8-45ba-b493-592d64088f68"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown OCSPResponse type 'urn:ietf:rfc:xxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongTimestamp [syn]" id="8cd97a72-8803-490c-a55d-7545ad789c6c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongTimestamp [syn]" id="dbd7e6a8-9216-41a3-bba9-73e9b222ad1c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="xxx"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="40d74a7f-742d-43c7-818c-b9b31f70d385"/><con:assertion type="XPath Match" name="XPath Match" id="e8ecdc18-03d0-484e-93b2-3505974fb756"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown timestamp type 'xxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleEmailAddress [syn]" id="727a9e9e-c307-4bc5-9012-91869434d7a4" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleEmailAddress [syn]" id="1ed88f8f-d92d-47ba-a7c6-3034f2a608dd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, emailAddress=test1@test.ch, emailAddress=test2@test.ch</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="feb329d0-8cb5-41ab-ad98-db5703759b6c"/><con:assertion type="XPath Match" name="XPath Match" id="5953400f-b2c7-4177-b915-3924b265bd37"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, emailAddress=test1@test.ch, emailAddress=test2@test.ch' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="5d1ac851-fa44-4264-9d0c-7e5b924f0bb0" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleGivenName [syn]" id="d5f2ad70-b3ee-47b3-9b65-82d0cc80915b" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleGivenName [syn]" id="28ca8a38-354e-4409-9471-936268b6ef59"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, givenName=test1, givenName=test2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dfc536a0-dbf6-44e7-9930-b0272aa18208"/><con:assertion type="XPath Match" name="XPath Match" id="92567b4d-f3b7-4bbc-94fa-7123197b8c4a"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, givenName=test1, givenName=test2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleSN [syn]" id="23f5ab52-ca1d-4b57-8288-540227cf140c" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleSN [syn]" id="48766b48-4816-4200-acb0-89b678f27aed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, sn=test1, sn=test2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5de88a76-52df-4966-a364-52b32a9356b0"/><con:assertion type="XPath Match" name="XPath Match" id="4cc0acac-c5df-4471-8883-0ad422f9ab74"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, sn=test1, sn=test2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleL [syn]" id="26e6a976-c314-43a5-b2a2-eb14a1d7ac59" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleL [syn]" id="076224c9-a74e-4be7-8293-9e77188ea527"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, l=loc1, l=loc2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b49e58-97b7-4c84-9395-44cd66f74e8a"/><con:assertion type="XPath Match" name="XPath Match" id="3111fcc0-3130-4ec1-a796-ee97d5001704"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, l=loc1, l=loc2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleO [syn]" id="0f933801-d350-44cb-86a5-a8127efa0a57" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleO [syn]" id="8db61c25-e6b0-488d-9eac-c65f14fa44c9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, o=org1, o=org2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7da3c3c7-efa8-4ebb-a474-9fe97684c18a"/><con:assertion type="XPath Match" name="XPath Match" id="2c4f08de-7cdc-4a56-9913-8f0332d012b0"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, o=org1, o=org2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleSerialNumber [syn]" id="736bb9c2-3d08-4525-8603-4becabd0562a" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleSerialNumber [syn]" id="96e63c64-f844-4ae3-b009-64609fd7da6b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, serialNumber=111, serialNumber=222</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f3b5ffaf-c01b-4bb8-b060-3a1aaa4a6573"/><con:assertion type="XPath Match" name="XPath Match" id="4ceb0fee-1e40-45ae-8970-c74c66f9a43b"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, serialNumber=111, serialNumber=222' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleST [syn]" id="0e33d9a6-3ff7-43fa-bff1-e3e9588edad5" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleST [syn]" id="11e68371-1d70-40d3-94a1-4a8d6270ced0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, st=st1, st=st2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="329bab69-2bce-40aa-abb6-3b9bdde93103"/><con:assertion type="XPath Match" name="XPath Match" id="c151491d-8cc6-414a-aef8-69a1badf1320"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only, st=st1, st=st2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="09 RESTful OnDemand" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ae016ab1-67ae-46ac-bd28-5677c778d62d"><con:settings/><con:testStep type="restrequest" name="XML OnDemand ADV [syn]" id="42d9412a-6bc8-45f6-8302-6ad5c75fd1fc"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV [syn]" mediaType="application/xml" postQueryString="false" accept="" id="7c91724d-9125-4d5e-a657-ee910f86db37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7ad040e8-9f90-4c55-815c-f51275b7b742"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f93b2b05-c4c9-4c03-a38c-5b814ddb683d"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV [syn]" id="0459dfcd-ceaf-4185-9c3e-265942bf67ba"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV [syn]" mediaType="application/json" postQueryString="false" accept="" id="f2badd41-5cda-448c-88cc-b7d04f5c16a2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0538d61f-6fa5-4dcc-b52f-029c50c3654f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="b8641a89-a997-4444-8b63-e05aa0553ec5"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON OnDemand ADV [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV Batch [asyn]" id="29ed659e-19fe-4c62-a63a-caafa9c74b25"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="9e3c8408-0033-40d5-a148-69451838a7e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2ae4b9bf-76f0-42e6-8ae8-892301ba7352"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d5c507d4-3431-4967-b1f8-9343ca2624a2"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="3fe788c3-bbf8-4736-af5e-ac12787ae881"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="4f9c5724-226d-4ba7-a9c7-2c442097373d"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="d8a4e44a-da77-41e2-af50-44a59ba43e21"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="21e3e929-a126-4d42-8666-655b102c5b6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>1217d947-ea06-4870-b70e-b8efd3fb5e89</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0af3d6c6-c7ec-4f64-bba4-0442d9ae831c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="e6d7c5e8-e1e2-42fb-bbde-48ff9843745b"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="406060f1-6784-467e-ac23-63ef7dacc034"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="576fd72a-07cc-4f5d-b98d-5bee1c68267b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>1217d947-ea06-4870-b70e-b8efd3fb5e89</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="96eb5cd3-5224-40c4-9250-b75b399bc9f3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="aa44cb6f-2fee-4482-8711-8b0b56d7ea00"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV Batch [asyn]" id="ed256554-c513-45b7-8a6c-e5ed41a95e0c"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="923d951c-137f-4891-82fd-d833a2805768"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8c832f1f-076a-4e9b-ac20-71026b27ff6a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f2064bd8-791b-4fa7-91f4-c1b1fbb6f192" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="acc1a672-8356-4a11-bdb4-f1a68d401c6d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="319c6d98-32fc-43e0-951e-d076af56ccf3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="bcfa782a-195b-40e9-aeaf-dbfd830ef45a"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="58afd9ea-9cb9-4e73-b6c6-ca5fcc377f2e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2d6cbe77-ed7b-4b53-b136-0fb0ea5daac9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="f38a5426-c12a-4eca-8169-7f0db7b352f6"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("Validate JSON Response 2")</script></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="06f201e6-fd57-4ff8-9ee3-503205546bbd"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="10 SOAP OnDemand MID" searchProperties="true" id="48772586-0c45-42fb-aa09-2b1b82f1525e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="43d8eeda-3643-4b34-8453-54b98acd13b6"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID [syn]" id="16f3de10-0179-43c9-aaa5-88f36fe92b8b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID [syn]" id="bd6eeabf-68ee-4f8f-8a10-c27b4d3db234"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
   xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
   xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
   xmlns:ais="http://service.ais.swisscom.com/" 
   xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
   xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
                      Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>10: OnDemand ADV MID [syn]</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Depth="ALL" Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f5c16596-0627-4521-8dac-d8a784ba53f4"/><con:assertion type="XPath Match" name="XPath Match" id="ce220031-6d6e-49c1-96bc-f4f9e7d97000"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>*</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="81d65f2b-d758-4d44-afee-3de01095ad01"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Get MIDSerialNumber" id="6d4b515f-842c-40e9-82f5-539266daa1c1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>MIDSerialNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV MID [syn]</con:sourceStep><con:sourcePath>declare namespace sc='http://ais.swisscom.ch/1.0/schema';
//sc:MobileIDSerialNumber</con:sourcePath><con:targetType>_tmp_MIDSerialNumber</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2" id="3e998084-6a41-4466-8d61-b87a21f29989"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID [syn]" id="7d885489-6e6d-47e9-89ee-747bcaf07139"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID [syn]" id="a715bfe7-8644-4f9b-bce2-eb90a495c3ed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>10: OnDemand QUA MID [syn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="517d34a0-46c8-4a08-9802-012df810ffa9"/><con:assertion type="XPath Match" name="XPath Match" id="3153a083-920b-4411-995a-0977e1ed8ce9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="a6ac2a1c-aa33-4e4d-89b7-bee589438a2c"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 3" id="b1daa502-4628-46de-a32e-237d58797af3"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID ADV Batch [syn]" id="29a75419-0c15-4a79-9882-b2688407d858"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID ADV Batch [syn]" id="7f715ad1-3f0b-4ea2-8350-16048c24a444"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, emailAddress=test@test.com,givenName=Test1,surname=Test2,localityName=Hauptgebäude,serialNumber=123456,stateOrProvinceName=ZH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>10: OnDemand MID ADV Batch [syn]</sc:Message>
                        <sc:Language>En</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="id-256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ad4c8523-9b96-48e3-80af-8a4083f5a428"/><con:assertion type="XPath Match" name="XPath Match" id="d75bc8a1-136c-4e83-ab41-80837c1b9824"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="id-256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="2f23b114-e1b7-43c1-9700-0083f3153481"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 4" id="3d3cf9d9-1fe6-4b75-bbfc-c140d94363af"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID ADV Batch [asyn]" id="9fcafb92-efb9-446e-9417-0a038112c16c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID ADV Batch [asyn]" id="a18175f7-fc62-4283-9f51-ce88d78211e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>10: OnDemand MID ADV Batch [asyn]</sc:Message>
                        <sc:Language>En</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2a60f7d5-2ebb-4960-915f-2332d3b9bbdd"/><con:assertion type="XPath Match" name="XPath Match" id="5bd9aa38-6711-4b33-b9bd-9f6ef04f9441"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="a10deaf1-218b-4bba-b6b2-8001d6d50890"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID" id="e1ec6580-2455-4563-b2c7-b615d01cbfbb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="c9e0512e-895d-4a85-a665-35ac1e546b37"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="174fee89-717c-44d7-be6c-8e168dcd102f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="4ed40d7d-d443-4ca5-9a34-6ab66666288c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>9ea76749-8e87-4c1c-818a-3b6b8663a9d0</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0a927d35-c6d3-4539-80eb-8c40630df751"/><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="eea66104-fe63-420d-a3b1-546b69758cdf"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="7ef30d7b-bbb4-4132-b76a-a027a41eb972"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="e3a8155c-fb17-467a-b0d5-378606997169"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="fc1cea71-4b8f-449c-b0e2-33413dcf4cac"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>9ea76749-8e87-4c1c-818a-3b6b8663a9d0</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8a449b98-219c-4ab8-9244-50431d2f2586"/><con:assertion type="XPath Match" name="XPath Match" id="e0222fc0-0683-4a2b-9fa3-6acdbaac6cf6"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <OptionalOutputs>
      <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
      <sc:MobileIDSerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
    </OptionalOutputs>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="256">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="384">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_1">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_2">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_3">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_4">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_5">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_6">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_7">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_8">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="605a20af-b601-4818-8cec-153d8946fc5f"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 5" id="019b8039-13eb-4241-9f25-c4eeba3817b7"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID SerialNumber" id="c3470139-8d89-421d-aec3-727ae7ee3663"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID SerialNumber" id="dc1b5ba2-4b58-4bd1-8413-170db3f85096"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
   xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
   xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
   xmlns:ais="http://service.ais.swisscom.com/" 
   xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
   xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
                      Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>10: OnDemand ADV MID SerialNumber</sc:Message>
                        <sc:Language>eN</sc:Language>
                        <sc:SerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:SerialNumber>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Depth="ALL" Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d81cc51f-ee95-4237-9b6e-d82a74a7a8f2"/><con:assertion type="XPath Match" name="XPath Match" id="577fc50b-6845-4a65-970f-fd5a32731b28"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>*</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="5a9a4e69-41a9-47aa-a397-ad24ce129a47"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="11 SOAP OnDemand MID [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="245cd2c1-2c10-48a0-8bbc-353d865d23d8"><con:settings/><con:testStep type="request" name="OnDemand ADV MID 41000092101 WRONG_PARAM [syn]" id="88d74831-0e3d-42fc-9eb1-2d71fadfd0c0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092101 WRONG_PARAM [syn]" id="f0c3e912-dda8-47c3-9c43-0c60a14a31c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092101</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2cfa033e-17ee-4103-9976-dc1257c8bf9a"/><con:assertion type="XPath Match" name="XPath Match" id="e8181f4a-913a-4945-ab87-dd11117edef9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_101</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_101</sc:Subcode>
      <sc:Reason>WRONG_PARAM</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">Error among the arguments of the request</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092102 MISSING_PARAM [syn]" id="bdbe82bf-3399-42df-a271-b24927b05beb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092102 MISSING_PARAM [syn]" id="b8e5e115-0350-4914-9e45-76fb041b967c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092102</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5e1c8671-31d1-49c7-bc21-6382ea61d7f8"/><con:assertion type="XPath Match" name="XPath Match" id="419a1645-922f-4fa8-b454-fc8ff1b139ae"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_102</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_102</sc:Subcode>
      <sc:Reason>MISSING_PARAM</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">An argument in the request is missing</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092103 WRONG_DATA_LENGTH [syn]" id="13575890-0c16-4009-929d-24c71a384b62"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092103 WRONG_DATA_LENGTH [syn]" id="5924b04b-980c-4211-ae2a-b5ac707c9991"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092103</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bac681ba-1c3d-4b70-be6f-52306cbf2cbf"/><con:assertion type="XPath Match" name="XPath Match" id="2f46b037-1534-4e9a-bb58-0edcc858aaf1"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_103</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_103</sc:Subcode>
      <sc:Reason>WRONG_DATA_LENGTH</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">The DataToBeSigned are too large. Limitations are due to the Mobile Signature technology implemented by the MSSP.</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092105 UNKNOWN_CLIENT" id="550b46d9-1a98-4e21-8336-d2cb6cb2a901"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092105 UNKNOWN_CLIENT" id="ddb4029e-1b1f-4333-8f3e-01335e024490"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092105</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dcddd0e1-0483-4553-817e-e3e24aee9369"/><con:assertion type="XPath Match" name="XPath Match" id="a056299d-77d0-4729-88bd-e14b4ada6160"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_105</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_105</sc:Subcode>
      <sc:Reason>UNKNOWN_CLIENT</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">MSISDN is unknown</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092402 PIN_NR_BLOCKED" id="f1a7b03d-03a4-4369-92d8-b19e9a01b7c9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092402 PIN_NR_BLOCKED" id="edcb871c-dd05-4c44-8338-a7f44f999b7f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092402</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7e7ac06f-6d4a-43c9-8536-59477dfcd94b"/><con:assertion type="XPath Match" name="XPath Match" id="1a1af242-4cbc-475f-a0f1-105a4dfb23f4"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_402</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_402</sc:Subcode>
      <sc:Reason>PIN_NR_BLOCKED</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">PIN of the mobile user is blocked</ns1:detail>
        <ns2:UserAssistance xmlns:ns2="http://www.swisscom.ch/TS102204/ext/v1.0.0">
          <ns2:PortalUrl xmlns="http://www.swisscom.ch/TS102204/ext/v1.0.0">https://www1.swisscom.ch/registration/online/app/MobileId?resetPin=true&amp;msisdn=41000092402</ns2:PortalUrl>
        </ns2:UserAssistance>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092403 CARD_BLOCKED" id="53bd3444-3470-4a54-8bf4-278111a39243"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092403 CARD_BLOCKED" id="f8d94eb3-c5ee-4d7e-b408-d584fc00416e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092403</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="91261c6c-4f6d-41ef-80d6-3906fc9e5bc5"/><con:assertion type="XPath Match" name="XPath Match" id="0606f8d1-9e21-46d3-bd9b-cf68408990d2"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_403</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_403</sc:Subcode>
      <sc:Reason>CARD_BLOCKED</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">Mobile user account has state INACTIVE or no SIM assigned</ns1:detail>
       </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092404 NO_KEY_FOUND" id="c787cd5f-5010-4003-920a-58d857f6e96b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092404 NO_KEY_FOUND" id="b29cba9a-0dde-484d-9b9f-32fb77d646e7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092404</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="aa2de9e6-08cb-40da-b494-8ed2c51e7962"/><con:assertion type="XPath Match" name="XPath Match" id="2de54ff9-8a8b-4089-9cd5-09f43f8736eb"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_404</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_404</sc:Subcode>
      <sc:Reason>NO_KEY_FOUND</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">Mobile user account needs to be activated</ns1:detail>
        <ns2:UserAssistance xmlns:ns2="http://www.swisscom.ch/TS102204/ext/v1.0.0">
          <ns2:PortalUrl xmlns="http://www.swisscom.ch/TS102204/ext/v1.0.0">https://www1.swisscom.ch/registration/online/app/MobileId?reactivateMobileId=true&amp;msisdn=41000092404</ns2:PortalUrl>
        </ns2:UserAssistance>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092422 NO_KEY_FOUND" id="d3be51ea-31c8-4fa9-bb2b-eabb1d77df13"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092422 NO_KEY_FOUND" id="e7dd3b6d-19b5-4e5a-a3c3-6d6153be3b98"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>41000092422</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d9ed5448-dae2-43e5-a7c2-a94ab8d2282c"/><con:assertion type="XPath Match" name="XPath Match" id="65ff90ea-a497-4aab-9ea3-71b6776d584a"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_422</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_422</sc:Subcode>
      <sc:Reason>NO_CERT_FOUND</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">Certificate is expired, revoked or with an invalid certification path</ns1:detail>
        <ns2:UserAssistance xmlns:ns2="http://www.swisscom.ch/TS102204/ext/v1.0.0">
          <ns2:PortalUrl xmlns="http://www.swisscom.ch/TS102204/ext/v1.0.0">https://www1.swisscom.ch/registration/online/app/MobileId?reactivateMobileId=true&amp;msisdn=41000092422</ns2:PortalUrl>
        </ns2:UserAssistance>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID WrongTypeAttr [syn]" id="5964ecaf-892f-4896-8bae-cc8feb34ccaa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID WrongTypeAttr [syn]" id="9e6cbcc8-4cfa-409b-8123-17ee143f90fd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:swisscom:auth:mobileid:v1.x">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2b485f8f-46c2-4a28-abf5-e7a4f0eebf86"/><con:assertion type="XPath Match" name="XPath Match" id="641beaec-ad79-45d8-a2bf-003dfa16b4f9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown &lt;MobileID> type 'urn:swisscom:auth:mobileid:v1.x'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID MissingTypeAttr [syn]" id="c3b47a06-7ba6-4d54-aeec-3ce578639838"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID MissingTypeAttr [syn]" id="1adda844-ed32-4e44-b316-432d42e847c7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="1d70e41e-359c-416e-a292-b41bf9b7678c"/><con:assertion type="XPath Match" name="XPath Match" id="4d2c78fa-7f45-4011-ac10-63cc99d4c8b8"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">&lt;MobileID> type is missing</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID MissingLangElement [syn]" id="976899c8-939d-481d-9bf8-3fa144ca16ec"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID MissingLangElement [syn]" id="2cb6f21c-e0a3-4f6b-97f0-aafa0d511a6c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <!--<sc:Language>EN</sc:Language>-->
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d0f5ac83-c289-4fd9-aac5-958304a39a8c"/><con:assertion type="XPath Match" name="XPath Match" id="c1a5026a-252b-434b-bccb-b67189c5859e"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/InsufficientData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;Language> is missing</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID MissingDN [syn]" id="cf952028-0c86-4e9d-86ee-96acf2cf1fba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID MissingDN [syn]" id="8e374814-e06f-444e-b453-93f444aaf6a0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <!--<sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>-->
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7fddd302-0fff-4787-84e4-01b91d8296a6"/><con:assertion type="XPath Match" name="XPath Match" id="ff4d2f6f-4fe4-47fc-a608-fb84a46b780c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/InsufficientData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;DistinguishedName> is missing</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID MissingC [syn]" id="59c7f5ad-aa4f-4a30-ba7f-fbede41c7a7d" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID MissingC [syn]" id="93924fa4-4e31-42c3-9073-55abc3629615"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="aa8c2520-76d0-4d0f-9fc4-3a2ad80774ea"/><con:assertion type="XPath Match" name="XPath Match" id="e0aa1fb6-8ea5-4904-b26b-56abb3852c60"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name is missing required RDN 'countryname' or 'C'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID MissingCN [syn]" id="4c2fe7a8-f147-4625-981b-b71f8505a887" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID MissingCN [syn]" id="e1e248b5-105e-4e77-b8dd-8392976d87ed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c52a71b7-4be6-4d29-aa0d-b68068d3a453"/><con:assertion type="XPath Match" name="XPath Match" id="c5700ba6-a2f7-437c-a48c-c42e41d1bd4d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name is missing required RDN 'commonName' or 'CN'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID InvalidC [syn]" id="5d32f287-a584-4724-a670-7b44a0e59a00" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID InvalidC [syn]" id="8559e597-f920-42c1-93e2-690f6a9a1b89"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=xxx, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="602e907f-764d-4068-8775-5c05639cfcea"/><con:assertion type="XPath Match" name="XPath Match" id="75a4a1c6-b88c-43f9-b672-4bfba8f1aa1c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name RDN 'C' value must be exactly two characters long</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID WrongC [syn]" id="5db3ca17-fedd-41ab-bb34-95abca526790" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID WrongC [syn]" id="7eb79b34-fd1a-4c57-8613-b646f5b9e3ea"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, c=$$, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77735a4d-61ff-40df-a10e-62cab94faf95"/><con:assertion type="XPath Match" name="XPath Match" id="17ee558d-423d-4399-ad62-93d9f44d9071"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name could not be parsed</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert CANCEL Mobile ID 1" id="d76f13ca-a278-4c64-8295-544c38444883"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN\nPLEASE >>> CANCEL &lt;&lt;&lt; THE REQUEST ON YOUR MOBILE")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID Cancelled [syn]" id="b3e15e32-d5e3-4829-af64-cca5c858fd39"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID Cancelled [syn]" id="4064ac8c-1892-4949-bc46-b7e9620073d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>11: OnDemand ADV MID Cancelled [syn] - Please CANCEL this message!</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cdf10b2d-f33a-4dcc-ae09-6fdc64c73cd0"/><con:assertion type="XPath Match" name="XPath Match" id="cf9190b5-6eb9-4cf6-ae06-10db69e566c5"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_401</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_401</sc:Subcode>
      <sc:Reason>USER_CANCEL</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">User cancelled the request</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert TIMEOUT Mobile ID 1" id="c0837e57-59a7-4a65-a5bc-04488d0e5aa6"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN\nPLEASE >>> IGNORE &lt;&lt;&lt; THE REQUEST ON YOUR MOBILE FOR AT LEAST 60 SECONDS")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID STKTIMEOUT 60s [syn]" id="9a2d02b0-9d49-41ba-9fa4-ad279f1b5f35"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID STKTIMEOUT 60s [syn]" id="fbebe887-3376-4488-a2a9-e91ac469a17b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>11: OnDemand ADV MID STKTIMEOUT 60s [syn] - Please IGNORE this message for at least 60 seconds</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2b370db7-4307-448a-a538-2180ee8ab588"/><con:assertion type="XPath Match" name="XPath Match" id="25c8d50f-65b6-4314-941e-3bbd67d14df1"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_208</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_208</sc:Subcode>
      <sc:Reason>EXPIRED_TRANSACTION</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">Timed out while waiting for user response</ns1:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert AIRPLANE=ON Mobile ID" id="5194c970-8f44-402f-aae2-ec1ec7169296"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please >>> ENABLE AIRPLANE &lt;&lt;&lt; mode and click OK to continue..")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID Transaction-Timeout 180s (RESET) [syn]" id="a7bf22f0-c2f5-4994-aa9c-d02bb383dae0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID Transaction-Timeout 180s (RESET) [syn]" id="13d79a5f-45a2-44b6-8750-f35c026e65e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>11: OnDemand ADV MID Transaction-Timeout 180s (RESET) [syn] - Please IGNORE this message</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a07ef528-42fd-4d0f-a810-b2ecccc95360"/><con:assertion type="XPath Match" name="XPath Match" id="a6161583-6293-4d3a-a50d-0164fca8a9a4"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:ais="http://service.ais.swisscom.com/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_208</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_208</sc:Subcode>
      <sc:Reason>EXPIRED_TRANSACTION</sc:Reason>
      <sc:Detail>
        <kiuru:FaultMsg xmlns:kiuru="http://www.methics.fi/kiuru">Original request timed out.</kiuru:FaultMsg>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert AIRPLANE=OFF Mobile ID" id="d24723ec-74c3-42a7-858a-e143813b99b7"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Done! Please >>> DISABLE AIRPLANE &lt;&lt;&lt; mode and WAIT 2 MINUTES TO CANCEL ANY INCOMING MID REQUESTS. THen click OK to continue..")
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="6fb8ca5b-acd7-497b-99ac-bb01f5fb1872"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID WrongSerialNumber" id="38810409-5dfd-42dc-a843-94e546de2544"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID WrongSerialNumber" id="9e1ca241-acd6-4b1f-873f-5e23430da0a9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
   xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
   xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
   xmlns:ais="http://service.ais.swisscom.com/" 
   xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
   xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
                      Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>11: OnDemand ADV MID WrongSerialNumber</sc:Message>
                        <sc:Language>eN</sc:Language>
                        <sc:SerialNumber>MIDCHE0D9GAI7999</sc:SerialNumber>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Depth="ALL" Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e992e658-f937-449b-b7c1-5a3d646e48e6"/><con:assertion type="XPath Match" name="XPath Match" id="91ce6378-e533-428f-86de-67cec0bf8855"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/subsystem/MobileID/SerialNumberMismatch</ResultMinor>
    <ResultMessage xml:lang="en">SerialNumber mismatch. We strongly advise to go through the Pre-Signing Process in order to retrieve the actual Mobile ID SerialNumber</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="12 RESTful OnDemand MID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8a5afbd2-4e16-43b3-bcae-f8c846fad752"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="76528f76-0b7d-4444-8418-24d96d2d062f"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV MID [syn]" id="453b7966-83ec-4b8d-bb40-2c0187580ac4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV MID [syn]" mediaType="application/xml" postQueryString="false" accept="" id="0f69f5df-cebb-466d-b3c2-c4196bc0d73c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>12: XML OnDemand ADV MID [syn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:MobileID>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="402e7715-1c2e-48c9-b456-60df84919793"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="960ce7f4-2600-4620-8784-c407daaaf9d5"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>*</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2" id="8cbcb522-aac3-4296-b7e8-3c39ecee2b3f"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV MID [syn]" id="b4c6dffe-561c-489e-a5d7-8e77ea427edd"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV MID [syn]" mediaType="application/json" postQueryString="false" accept="" id="633ee0e1-7183-4150-a6be-acd329d999bc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}",
        "sc.StepUpAuthorisation": {
          "sc.MobileID": {
            "@Type": "http://ais.swisscom.ch/1.0/auth/mobileid/1.0",
            "sc.MSISDN": "${#TestSuite#MSISDN}",
            "sc.Message": "12: JSON OnDemand ADV MID [syn]",
            "sc.Language": "DE"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e37f30c1-bca9-4325-8d35-6691bdc7ace5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="324c9edf-96f3-4418-8d61-e68ad15a0d7c"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON OnDemand ADV MID [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 3" id="37e5e801-9be4-44f5-831e-d4ec0df4c2fd"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV MID Batch [asyn]" id="1c45a1ee-6e89-45de-a51e-dbc64c409cb7"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV MID Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="512e9179-c1df-4857-b661-a02cd3f783dc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:MobileID Type="http://ais.swisscom.ch/1.0/auth/mobileid/1.0">
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>12: XML OnDemand ADV MID Batch [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:MobileID>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f82e8c25-a098-49d4-acfc-423a55610321"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="27a86f48-211e-4e77-bc96-93aa09d25e7a"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="8695df35-d094-4db9-af9d-59a17bed3d7f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="45759619-c634-414c-af34-fa29792b4c44"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="851552b9-5b9a-425d-a89d-e60d6b37ed4e"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="22767254-8d7c-41b1-a9a1-36ae594e9745"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>4095046b-46a5-46af-ad40-3040c14747d1</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="61f2ed80-729c-4bdc-8aa9-b12c6f37f5a8"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="567ca234-36c6-4397-b3f4-fcdb0f1c68db"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="8aacc24d-e88e-465f-9178-c74cae747c7b"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="77cb4e58-3ad4-423e-ad0a-0b96dcee1907"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>4095046b-46a5-46af-ad40-3040c14747d1</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="52f0f973-eeab-46b1-8fce-854d84d5fdf5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="8c80a9fe-6211-467a-97b3-0a26917f045d"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    <sc:MobileIDSerialNumber>*</sc:MobileIDSerialNumber>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 4" id="93f5125b-3981-495b-8b84-9bf7dcc50c41"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV MID Batch [asyn]" id="7ddd2339-2f1c-4101-b4ca-2a293bf62075"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV MID Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="b1fd0f75-4f5b-43bf-abaf-137a562151f5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}", 
        "sc.StepUpAuthorisation": {
          "sc.MobileID": {
            "@Type": "http://ais.swisscom.ch/1.0/auth/mobileid/1.0",
            "sc.MSISDN": "${#TestSuite#MSISDN}",
            "sc.Message": "12: JSON OnDemand ADV MID Batch [asyn]",
            "sc.Language": "DE"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6e648f37-9b87-4f17-ade0-d5ca986f8b96"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="993087a3-0826-4b0f-8a6a-e259cbf4bab3" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.0","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="01b176a8-7a12-405f-870a-4dd465a317a9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="c1768543-dd28-4fc4-bd6d-d87daa074815"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="6172a598-bb22-4c2a-8c3a-d6480e9a0cd9"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="05d05da4-3ff5-45da-9745-83e93f589973"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d390a48e-e8fe-4c8f-b2a0-4929484255e7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="50f62684-700d-423c-b457-f95ab1f1d606"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("Validate JSON Response 2")</script></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="eaddbcca-f90f-4ab5-9a29-146dc48703bb"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>BASEURL</con:name><con:value>https://ais.swisscom.com</con:value></con:property><con:property><con:name>PATH_SOAP</con:name><con:value>/AIS-Server/ws</con:value></con:property><con:property><con:name>PATH_REST</con:name><con:value>/AIS-Server/rs/v1.0</con:value></con:property><con:property><con:name>AP_ID</con:name><con:value>IAM-Test</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp1-iam-signer</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>41797973649</con:value></con:property><con:property><con:name>OnDemand_CN</con:name><con:value>Eva Ramon</con:value></con:property><con:property><con:name>OnDemand_O</con:name><con:value>Swisscom (Schweiz) AG</con:value></con:property><con:property><con:name>OnDemand_C</con:name><con:value>CH</con:value></con:property><con:property><con:name>USER_ALERT</con:name><con:value>true</con:value></con:property><con:property><con:name>SHA1</con:name><con:value>http://www.w3.org/2000/09/xmldsig#sha1</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_1</con:name><con:value>C+7Hteo/D9vJXQ3UfzxbwnXaijM=</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>_tmp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8d173aba-2d8b-40d8-8492-dd38736c3112</con:value></con:property><con:property><con:name>_tmp_MIDSerialNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MIDCHEMY30VJMB08</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Regression Test Suite (Profile 1.1)" id="2608bcaa-25c1-431e-9b02-4c30f1476378"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 SOAP Timestamps" searchProperties="true" id="3f2e68ae-7ad9-44f7-8273-e687270dffbe" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="TS Sha256 AddOcsp (deprecated) [syn]" id="dfcf83ab-7d93-4d95-be49-3df89a8fad08"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddOcsp (deprecated) [syn]" sslKeystore="" id="11e0b008-91a9-4467-9814-d3fcb4229e2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a6a360af-810f-4d1c-ab42-e9f783dca61f"/><con:assertion type="XPath Match" name="XPath Match" id="54dd231a-feb4-411d-94e6-b03fbb37fceb"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse  RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="00d93ba4-3903-4f97-9c74-31ce74dd7488"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha1 AddRevocationBoth [syn]" id="eb70bdff-3e8d-4995-8a7d-14bc691a6aff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha1 AddRevocationBoth [syn]" sslKeystore="" id="dffe7705-2cf1-4163-9e97-1d5ce7f37e3e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8b744765-17f0-4e22-8410-0a1513f5388c"/><con:assertion type="XPath Match" name="XPath Match" id="08842a0e-8df1-4696-8dbb-7318070921a3"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="6210cf72-f33c-43e6-a22e-4e0444f430dd"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationBoth [syn]" id="cbaaf874-b58b-44ff-878b-a10d7f801556"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationBoth [syn]" sslKeystore="" id="2b2d7a5c-238c-4bc7-892d-46c44da9baee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="13888958-d74d-42db-8c6e-a6ec166b6d77"/><con:assertion type="XPath Match" name="XPath Match" id="7c260952-5874-49b0-9907-e71eac5053b8"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ccf22d22-6bb7-45bd-8e2d-588f5eceeffe"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationCADES [syn]" id="b37ae3ff-9ec2-470c-9c2d-6d17a388312e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationCADES [syn]" sslKeystore="" id="34f5f2ad-4516-453f-a76b-39392f960b9f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="CADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9c236f8d-17b8-48cc-b13f-439015fd05c9"/><con:assertion type="XPath Match" name="XPath Match" id="51cf1969-cc2b-4756-91ee-b6681257f58a"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ddc60be0-1256-4ffd-ab38-b6e53dc7a078"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationCaDeS [syn]" id="f543f278-a426-4372-934b-9f43f6d4e275"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationCaDeS [syn]" sslKeystore="" id="ac83f919-7b6f-4bc6-9126-52be6ab62f83"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="CaDeS"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0681587d-b16e-498c-a261-36fea5db8801"/><con:assertion type="XPath Match" name="XPath Match" id="e1c4efa6-beee-4816-b8ed-b8b2c96c011f"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="312e9fe6-d851-4eb6-ae33-29642ff7b1f8"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationPADES [syn]" id="9c615ab8-20d8-467b-a218-770a1b5d9bbf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationPADES [syn]" sslKeystore="" id="ac1f4f36-7240-4098-8514-adf8ca9429ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="PADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eae0e349-fd34-4c24-a294-5326c26eaa31"/><con:assertion type="XPath Match" name="XPath Match" id="a0bbc78b-9456-4448-95ca-78523b90e476"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="c0c053cd-8591-44b0-a8f0-543ae1ab6931"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 AddRevocationPaDeS [syn]" id="3c1526d4-db3b-4d7e-a552-54421d0faad3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 AddRevocationPaDeS [syn]" sslKeystore="" id="d41db87a-1eee-44c8-a13d-8b03ce4348dd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="PaDeS"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="14c8281a-2640-41e9-b876-1e9d4d8e7aa6"/><con:assertion type="XPath Match" name="XPath Match" id="2cc113c2-c31d-4600-9098-56d0669e2a60"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="552db7b0-7603-4d34-83b5-2617ca24db90"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Sha256 NoRI [syn]" id="f50d7572-2a71-4358-947a-1df98a6afed5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 NoRI [syn]" sslKeystore="" id="03304b58-41fa-42b0-a886-29f7e2d13e40"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c2d715f1-3672-4c8f-a633-3d54ecff5c7e"/><con:assertion type="XPath Match" name="XPath Match" id="85ce3e96-f5de-44e4-8cab-7b7b417b1097"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="010c23ab-3dae-4963-bcf7-eb2d2ea911da"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 1" id="15c0d16e-831d-4416-90c8-e72d01d4e904"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Sha256 NoRI [syn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Sha256 NoRI [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [syn]" id="7b7a41c2-4abf-46bb-ba4d-9209fc83f5e8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [syn]" id="1c48972c-5ce5-40e1-aab0-ab8bbc72c889"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="id-256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="800b30f1-0cdb-4f00-8574-6866fc32ad2c"/><con:assertion type="XPath Match" name="XPath Match" id="cd223870-270e-428a-89f9-7957f6395740"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="id-256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="09f2a558-695e-4203-9d17-f5cbad437472"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 2" id="1610cfe6-e64d-4e3d-9320-0ff64b6dd191"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [syn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [asyn]" id="a7206b28-affe-46d5-b5e3-f2e3788646af"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [asyn]" id="99a70ff4-6d71-487f-aa0d-9599255ca749"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce935520-301d-42f6-b0f3-f68ba0e8b60b"/><con:assertion type="XPath Match" name="XPath Match" id="bd0eab0d-ae1c-4af4-94af-0ffe282b2fe6"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="6e97f2c6-2e81-4a6e-93ff-5925fdda4da9"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 3" id="c42a9740-3bc5-4cde-a933-cbb7115757a2"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="92c7a6a8-053d-4ce7-8ef5-24179fe926ae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" useXQuery="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="462c94d6-837e-4665-bc37-a39fe32d46eb"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="2e976cb4-1b12-422f-969f-f24ecb717688"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="fafadd26-5de7-46fd-8656-765c4609849f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>83738350-165f-47b1-bbec-2767fa150332</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="59db2473-71a1-4d86-81ab-1cae98e6031e"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="7e4a2cae-d7c4-42b2-9656-ad3d380e9ce1" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 4" id="ba4a6ae5-7120-4adf-a3fb-45474f8f1efd"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request (initial Batch Request)
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response (Poll Response)
holder = groovyUtils.getXmlHolder( "Poll RequestID (Pending)#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='http://ais.swisscom.ch/1.0/schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="407510e6-82b4-4031-9239-fa7657012c04"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="aaa82a4d-6a70-420c-ba23-06b3852f2c89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="984187a3-e860-4406-a3ce-2e150f5bc038"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>83738350-165f-47b1-bbec-2767fa150332</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e13e089b-5d6a-42f7-8458-8ef0a4bd3a9f"/><con:assertion type="XPath Match" name="XPath Match" id="3f426805-6419-463c-aab2-c61e7ef59127"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="256">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="384">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_1">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_2">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_3">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_4">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_5">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_6">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_7">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_8">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </SignResponse>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="34b64694-47ca-467f-88db-cfe09fa160bf" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="02 Timestamps [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ce6ffc57-ae09-4171-b494-a3a6a631c86a"><con:settings/><con:testStep type="request" name="TS WrongRevocationType [syn]" id="892805da-c0b8-42bb-a655-f2790f17dcc6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongRevocationType [syn]" sslKeystore="" id="3dc13c21-753c-4bbd-8a62-304cccb5e833"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="xxx"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="87af6c49-445d-4ccd-87eb-391f42413415"/><con:assertion type="XPath Match" name="XPath Match" id="d6d356cb-291a-49b4-99c7-f6f93d2d55c9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">Unknown AddRevocationInformation type 'xxx'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongCust [syn]" id="03e2a0f4-236d-48f3-8bd6-1e70143ec48a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongCust [syn]" id="20e019c4-28cb-428e-b12f-4c18cdbbcf5a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="130eb49b-a203-41cc-99fb-9716a7cf8f76"/><con:assertion type="XPath Match" name="XPath Match" id="fa5658cd-f453-414b-90c5-12a383a84668"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAlgo [syn]" id="eef2e275-3ce1-474d-9585-e2a3ec5787ea"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAlgo [syn]" id="dade587f-74c2-45b7-8b85-d4ccac28fe63"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ee082059-e694-4639-a927-97975dcd3060"/><con:assertion type="XPath Match" name="XPath Match" id="eece0bb4-2284-43d2-80b7-23f2e7e30aa7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedDigestAlgorithm</ResultMinor>
  <ResultMessage xml:lang="en">Unknown DigestMethod Algorithm 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongDigest [syn]" id="1a0554ef-fbff-46a3-9545-12b2a47db9a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongDigest [syn]" id="d8950aa6-a9c6-4cfd-b687-08cc6c67f0cb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5d37b07e-80c5-4b71-b61f-d2d99d00ac41"/><con:assertion type="XPath Match" name="XPath Match" id="676ae83c-a29c-4463-92e5-fff81ae88489"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Wrong Digest length</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongProfile [syn]" id="0168540b-c746-4b9f-aa87-ce5dfd1435c7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongProfile [syn]" sslKeystore="" id="b1dcb98b-b756-4460-8418-811acf77ba96"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
                      Profile="http://ais.swisscom.ch/0.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ad1bea2b-dc26-4948-9fea-f5b840659d1f"/><con:assertion type="XPath Match" name="XPath Match" id="8192453b-96d3-4fbe-8543-3bc35cead47b"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedProfile</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Profile 'http://ais.swisscom.ch/0.0'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MissingAddProfile [syn]" id="236165ed-1e7e-42e1-8c07-11e4242c1893"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MissingAddProfile [syn]" id="030b87ab-92fc-4aa4-8d0a-cad90a50a55e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <!--<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>-->
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ed243f05-ab21-4b67-8a65-5f9c13114f56"/><con:assertion type="XPath Match" name="XPath Match" id="585d086a-9986-4b42-b9fd-328081637e02"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AdditionalProfiles> is missing. It is mandatory for Timestamp SignRequest to define the Profile.</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 1 [syn]" id="83967fb9-3cee-4deb-a107-02e13e6ee117"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 1 [syn]" id="998ccf1c-1239-4b29-9f61-da5c07767d48"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="eedfb779-849f-4030-a924-7365609147d2"/><con:assertion type="XPath Match" name="XPath Match" id="ba3d3c20-7eb3-44b7-9ecb-6f6a1e1dcd99"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 2 [syn]" id="cb678259-7ecd-45e3-bcb5-fe668959c9c4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 2 [syn]" id="f39bf586-ff94-4bfb-9c28-476b2818903c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="174cf950-5f1c-43ca-ace8-282ed8ce9df2"/><con:assertion type="XPath Match" name="XPath Match" id="2dea447d-439b-451a-8809-6382616c9a06"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongSigType [syn]" id="92029173-45ea-4953-bd9a-b14825fdda0e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS WrongSigType [syn]" id="a6fe2dc2-2473-4229-ac2a-cdf1b56b4daa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:0000</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d46f930f-ab37-4fb0-87d2-0df62634f338"/><con:assertion type="XPath Match" name="XPath Match" id="dc1f3feb-a5f1-4eef-a9a7-eea8d55fe48d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown SignatureType 'urn:ietf:rfc:0000'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButMissingProfile [syn]" id="6c1d8701-effd-423b-b4ed-34a815b9d91d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButMissingProfile [syn]" id="55939aed-c85e-4d59-a8ed-1eb94b714a4c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="64a2dc99-537a-4e14-86ec-2637e2553feb"/><con:assertion type="XPath Match" name="XPath Match" id="c969f306-5087-4c7e-ad8d-7c2ec1f68b1c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one DocumentHash requires presence of Batchprocessing Profile</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButMissingDocId [syn]" id="a2cfbe16-143b-46cc-8312-911baf3be35b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButMissingDocId [syn]" id="1881af3f-f3fa-46ac-95b8-ae528361752d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e89d456e-ba91-48eb-be12-f818293670cd"/><con:assertion type="XPath Match" name="XPath Match" id="53e80550-abd9-45dd-9aa6-cb66e7b85da2"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButSameDocId [syn]" id="6b3d6653-aadc-4796-bf9b-01dac04aa9b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButSameDocId [syn]" id="94977855-3db1-485d-8bbc-6060d38cedc4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="xxx">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="xxx">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="939290d6-67c9-413d-a840-742406ef970a"/><con:assertion type="XPath Match" name="XPath Match" id="76ee22c1-103b-41a7-acef-2cc533316cde"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleSigType [syn]" id="c048ca22-c159-4a46-a097-2a1a39164c99"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleSigType [syn]" id="a709d2f5-cb80-4aa6-8df8-edadd39bfaa2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2c4da704-eda2-433a-a447-f9ae95de5755"/><con:assertion type="XPath Match" name="XPath Match" id="363ed751-93f0-4a5b-8cba-2659dfe8804c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;SignatureType> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleName [syn]" id="55291c41-1736-4810-8815-b03b3471b1be"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleName [syn]" id="d6406c7c-37bb-4574-821a-91c9df399e1a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <ClaimedIdentity>
                  <Name>xxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9e70f162-4c8d-4dc1-a1d3-e2431b7a2e73"/><con:assertion type="XPath Match" name="XPath Match" id="50d0b020-59f2-4629-b953-f052cee06659"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;ClaimedIdentity> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleClaimedIdentity [syn]" id="50287263-86ca-4fdb-9bbe-1aa28bca66ff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleClaimedIdentity [syn]" id="e18a034d-385f-46ce-88a2-d7e7fb42ecdb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
                  <Name>xxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>          
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8b238287-1d9c-48a3-8f16-d05d019a9812"/><con:assertion type="XPath Match" name="XPath Match" id="f39c3506-b55c-419e-ba8a-c523bf22d5ab"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MultipleAddTimestamp [syn]" id="782447ac-5f4f-4954-94e5-f674ffdc0e99"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS MultipleAddTimestamp [syn]" id="b9f93748-dc00-442b-872b-c38873147528"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="200708d1-0397-40bb-a24f-512083989c0e"/><con:assertion type="XPath Match" name="XPath Match" id="40ca2fed-3e53-42a1-830b-0d6d8ad06c7c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddTimestamp> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS KeyEntity defined [syn]" id="298ee193-297d-4db5-9561-b4cdf67d6c99"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="TS KeyEntity defined [syn]" sslKeystore="" id="e3d0d4e7-a211-4e56-aa8d-483a2f261d58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
xmlns:ais="http://service.ais.swisscom.com/" 
xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2befba65-4b6a-453f-b1b6-01fa3f3f80aa"/><con:assertion type="XPath Match" name="XPath Match" id="5d3d8417-440c-4131-aafb-79048cd2e15e"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<Result>
               <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
               <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
               <ResultMessage xml:lang="en">Unknown Key ID in Element &lt;Name></ResultMessage>
            </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="03 RESTful Timestamps" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2fedf10d-b956-43de-ac6c-8132480500ac"><con:settings/><con:testStep type="restrequest" name="JSON TS Sha512 [syn]" id="cf581708-4096-4f24-acab-6900f43df6ce"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Sha512 [syn]" mediaType="application/json" postQueryString="false" accept="" id="c88c98c5-77cf-405a-9a83-926c217c163d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA512}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f62dc00d-5ae4-4a16-b9dc-eb9d66161aff"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ef8e565f-00e6-4265-97d0-59fa89f8923a" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:Success"},"OptionalOutputs":{"sc.RevocationInformation":{"sc.CRLs":{"sc.CRL":"*"},"sc.OCSPs":{"sc.OCSP":"*"}}},"SignatureObject":{"Timestamp":{"RFC3161TimeStampToken":"*"}}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [syn]" id="04c4552b-ce57-4d74-a324-6dfd1ede7e18"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [syn]" mediaType="application/xml" postQueryString="false" accept="" id="09642d6a-c472-40c3-a3d4-47520baed9fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="081a3af9-bc9d-4ee3-808f-b19cccecc19d"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="edd4de36-1d08-4106-a088-efc7661b53fb"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [syn]" id="92c1afeb-0622-4e36-a819-0268d4e7e557"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [syn]" mediaType="application/json" postQueryString="false" accept="" id="141172b9-7ad7-46d6-873b-ad4a3d70cc55"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7a35dfd8-56bd-407d-893f-eeebe36b68f0"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [asyn]" id="ef59c169-4cab-40d0-8d00-f80c2e4b2a9a"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="7d9b1bc7-b90b-4dcd-82a9-8687449a4d4b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0e33c7b0-bc98-42ee-8cd4-1dddc1fa3cfe"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2daa33b0-f2f0-4a5e-8ef8-b00cfac86a92"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="ee9d2e0a-c217-461a-b94c-ed94cf909983"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="451cbe39-d3f3-4edc-aa35-d6ca6b2d79dd"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="4e92c977-e173-4da2-b4c2-439868fe46d7"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="38b2106d-b3e1-493d-8022-d1275339766c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>00538177-6785-4746-9a2a-e83acc71f202</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="e5d73d6d-95fd-45e6-84fc-b6dbbcb6c02c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="5ca05cfb-825e-405a-ad16-88461fe0ad16"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="ba712f32-54e7-4ea8-bda8-c43df799d4a4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="33236e5d-aafc-4b3d-b469-6b8314e6c615"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>00538177-6785-4746-9a2a-e83acc71f202</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="45f46928-72fe-4595-b993-bd25d13c3141"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="598cbb7d-f27d-4163-a94b-7f005b40dee6"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [asyn]" id="4dbfa479-cc3d-4efe-80b3-4097364fc602"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="4a0a5778-4c87-467c-a322-1d248f756668"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2b267cc4-5bad-4e5f-a4b4-35042a00d5cd"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="86276894-0768-4d17-8dec-668fba07a108" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="b783d42b-3f82-49bd-a6fe-f2f00942c416"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>JSON TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign';
//xmlns:Response/xmlns:SignResponse/xmlns:OptionalOutputs/xmlns:async.ResponseID</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="4308b0d4-7953-4c88-bd81-07a63dff1d3f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="f32193ad-28ee-4657-9f1e-861774067590"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="684484e1-81b4-4d3a-8dc8-6a1bcbecfc2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="5e719ba7-52e8-4edb-8d69-1e082088644c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="8e47d76c-97b6-4407-84e0-5ff31efa2294"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)" id="b7b04c71-5bd8-4909-9f66-942d0961e6ed"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept="" id="8df6f25c-f2f8-41d4-a6d5-2469307f00bb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3f9a0131-4cfb-49b0-a084-5e476c22fdc4"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="13820eb5-e988-4aa3-84f3-2900e2ac6ff2" name="JsonPath Match"><con:configuration><path>$</path><content>{"Response":{"@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError","ResultMinor":"http://ais.swisscom.ch/1.0/resultminor/UnexpectedData","ResultMessage":{"@xml.lang":"en","$":"Unknown ResponseID ''"}}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="04 SOAP Static" searchProperties="true" id="450bff9a-1281-4086-9b36-3ea6c99af6fb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Static AddRevocationBOTH NoTSA [syn]" id="369801b5-d187-472b-aaa9-5889b1ebdc59"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH NoTSA [syn]" id="2903f4ee-17b1-48fc-9a11-438b8e8d7d43"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e09a2bc4-2025-43f1-b378-12b710e4ee69"/><con:assertion type="XPath Match" name="XPath Match" id="2908a966-60ad-4a7a-899b-42fd0add2f71"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="a8603785-38c9-49b7-aae4-0a1721287312"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationBOTH SHA1 [syn]" id="6c06a5d1-b4df-411f-83b5-0601ab1a261c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH SHA1 [syn]" id="17a8e37c-3560-404b-b440-7a92f2de13e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5ed25de9-555a-492d-9969-927b2522179c"/><con:assertion type="XPath Match" name="XPath Match" id="4ec0c962-3487-42e9-8e3f-280469d22dd8"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="70d062cc-ca2b-4e96-aec6-dcf6b8fab489"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationBOTH [syn]" id="b226bc61-ae99-4e0c-8d40-fa42c4d77e46"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationBOTH [syn]" id="91ba30f0-e1a6-4568-9930-f54a506c9d15"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="26110cb2-11eb-4fba-9956-0ebfd7091d64"/><con:assertion type="XPath Match" name="XPath Match" id="7bb5b65e-6360-4993-bbf0-2e2abe0bc890"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="5bcce9ea-23b5-4cb4-85bc-4b68ae786a6d"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationCADES [syn]" id="da8033fe-53aa-4e1f-b7c0-e3f687954686"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationCADES [syn]" id="08dc6afc-984c-4dfe-8a9f-27784f21425f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="CADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e0f6b95b-2fdf-4b9c-b2de-0ad016d3290a"/><con:assertion type="XPath Match" name="XPath Match" id="8270e21a-dfca-41c4-b157-d587e87076f2"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="f3de9b40-b986-4080-bf8b-2c0a32f993a7"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static AddRevocationPADES [syn]" id="208f1d9d-e132-43c6-860b-8748079325ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static AddRevocationPADES [syn]" id="fffe85b1-e84e-4140-ad42-6d9255c82742"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="PADES"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0da79d18-3585-4fdf-8bb2-659837859376"/><con:assertion type="XPath Match" name="XPath Match" id="27cd8738-276f-4ec4-b049-aae09d4ce450"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="392d5177-b0bf-40b7-9149-4d83ac52e794"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static NoRI [syn]" id="d51649c8-3d47-4bc5-8b6d-7a47fa7c3f65"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static NoRI [syn]" id="dbbdf500-761d-46cd-aa33-934709028f67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2916171d-6669-49d1-9995-a93b2f3fe850"/><con:assertion type="XPath Match" name="XPath Match" id="f009087a-4cf7-47a9-a5f8-c7a875d39994"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="8bf48048-e025-49ac-ac50-de937666efc6"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [syn]" id="ecdb2d83-6f93-4a27-a898-f0082ce87d96"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [syn]" id="f467c7fb-2aca-4fe6-a4ef-3870b0279d90"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="id-256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="id-512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="58b6499d-3bb1-4ada-a17c-87f56736dfd8"/><con:assertion type="XPath Match" name="XPath Match" id="966d30e1-23fd-4861-821e-1d6a530e567c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="id-256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="id-512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="03232030-1c40-48fe-b28b-8932c71a45fe"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [asyn]" id="0f639d9b-d664-41f6-8fe6-011975f7cf92"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [asyn]" id="ff3bb616-7e8a-4b6b-8bab-a26a5d61f0a8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="866eeade-37dc-4c7a-9406-927f3bc221b6"/><con:assertion type="XPath Match" name="XPath Match" id="e3225fa4-d30f-4803-a393-9fb4e66b421d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="cb9841c3-5869-44c0-8317-1bac056cffbb"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="94a61524-9034-4487-8a91-5d6d12feae6f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="6c3697c1-6f57-488b-b17e-fd80acefa75b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="7444efec-2255-438d-859e-3c3b99f42050"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="c35c1bd3-697b-4002-b7b6-617d81a4df28"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>689b9e47-d624-4165-9294-f19155edccb6</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ce86ab02-f268-4324-b35c-f05e1a30568d"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="9e1dfc3d-35c1-44c1-add2-e016b7032856" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="64615889-a922-4097-b7d3-c3dd353325f0"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="fa7ddd6d-df12-4c27-bc49-6e00ef57e162"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="cb881149-ee3d-417a-bc74-a10172eb9a5d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>689b9e47-d624-4165-9294-f19155edccb6</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a5c4b907-0c01-407a-94b3-a2181d462487"/><con:assertion type="XPath Match" name="XPath Match" id="4867b7bd-8fad-405b-bf29-a716259aea92"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </SignResponse>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="c18c1717-eea7-4d96-821b-4e3e0a49226e" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="05 SOAP Static [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6828b93a-e149-4d9f-873d-918159a69c08"><con:settings/><con:testStep type="request" name="Static WrongCust [syn]" id="f357db79-b06e-4084-a141-e3fd9fe3351a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongCust [syn]" id="43fabd87-0ada-4509-a45b-e7d3ca22cde1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a1b829cc-4063-41a4-8a5a-6f8722673f26"/><con:assertion type="XPath Match" name="XPath Match" id="a57b34d9-4637-49a2-95b4-b711a326f082"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="9d1ecd3e-b5e8-496a-b4e4-5e1f7f771f7e" name="Schema Compliance"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongKeyId [syn]" id="f7684a60-5be8-4404-875d-a38185d06148"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongKeyId [syn]" id="443d3bb6-82bf-4ccf-8274-9c57aedc9b4f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="04e8d471-bae9-44f1-9b48-3eebccd8b563"/><con:assertion type="XPath Match" name="XPath Match" id="570593f0-385c-4c3e-8a7b-78a10cb4c41f"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Key ID in Element &lt;Name></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongAlgo [syn]" id="5a22db31-e012-493d-95f9-c9b37b368ce8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongAlgo [syn]" id="2c9633f4-baa0-49e7-9640-6b7a0bea8a58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="364e9dc8-e630-44ae-8212-a56a33954524"/><con:assertion type="XPath Match" name="XPath Match" id="8fee36bd-d7ec-42a7-8a94-2e7b520ff891"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnsupportedDigestAlgorithm</ResultMinor>
  <ResultMessage xml:lang="en">Unknown DigestMethod Algorithm 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongDigest [syn]" id="27643748-5e88-43a6-8107-d9de59578890"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongDigest [syn]" id="a67dcbd0-9026-4f6f-b4b4-a2af75ac1daf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3f621d0b-314f-4c79-b3dc-25e40bb0ddd0"/><con:assertion type="XPath Match" name="XPath Match" id="24f73534-28f2-42bd-9726-d07a9f8f56db"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Wrong Digest length</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongBatch [syn]" id="e0058613-1ef1-4488-a8db-69b919dd287c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static WrongBatch [syn]" id="8b3833e2-7003-4f0f-b5c4-c35f95b402d5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="06a77b1e-2585-4fb4-b4ab-be0e2744ab30"/><con:assertion type="XPath Match" name="XPath Match" id="f28db1bc-f91f-4d58-9a57-26fc7343eec6"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one DocumentHash requires presence of Batchprocessing Profile</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static BatchButSameDocId [syn]" id="f45f7c05-3288-4eb4-9080-4721428058f1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static BatchButSameDocId [syn]" id="d3cc8aa9-27be-433e-8dff-a5bade19598e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b8e2f48d-ecac-4187-8771-984c08586117"/><con:assertion type="XPath Match" name="XPath Match" id="17dd73c6-b546-4696-b38b-06fd06c2b5a9"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">DocumentHash IDs must be unique</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleAddOcsp [syn]" id="f5eda8e6-2e7c-4775-8656-47e39b2333fd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleAddOcsp [syn]" id="7850a6f5-21fb-442f-b88a-bd09234fd2ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7b903d50-3627-4342-b82a-59f6dbf61bd2"/><con:assertion type="XPath Match" name="XPath Match" id="410957e0-8c81-474b-9da6-0b66f48a3677"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddOcspResponse> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleRevocationInfo [syn]" id="b225e228-37c2-4d33-a8e0-dc0823689ef0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleRevocationInfo [syn]" id="6fd5a3f5-9b92-4c19-be3a-53c67f52a997"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8a1d35d6-f407-40bb-9ac7-37bb0d1ed166"/><con:assertion type="XPath Match" name="XPath Match" id="2e731a00-39ce-4770-b1a5-0ed9e0aea425"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddRevocationInformation> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static MultipleAddTimestamp [syn]" id="bfe3af33-d23c-490e-9bef-43f19e50e8e7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Static MultipleAddTimestamp [syn]" id="d2fb12f8-d7a1-45f1-aebf-e8a0b318a859"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="b12e135e-7e3e-4b03-b14a-e8b48068f084"/><con:assertion type="XPath Match" name="XPath Match" id="de41d3b0-e8a8-4ac1-8e56-e3627a15d370"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Element &lt;AddTimestamp> found multiple times</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Poll WrongRequestID" id="34c0836d-1921-42a4-9976-6a935bd44581"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll WrongRequestID" id="8269621b-14a9-4c7f-bd97-cdd0517da0ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>xxxxxx</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c8587c6e-fca1-49fc-9833-f8406cc8ecfd"/><con:assertion type="XPath Match" name="XPath Match" id="29cbe75a-6899-44c6-96b2-4b54cffd04ce"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:Response/xmlns:Result</path><content><![CDATA[<Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown ResponseID 'xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="06 RESTful Static" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b33d140d-0c9f-4784-8699-fd108747e163"><con:settings/><con:testStep type="restrequest" name="XML Static SHA1 [syn]" id="1c17d5ec-01a0-4581-8b3c-ac5cd7d96990"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static SHA1 [syn]" mediaType="application/xml" postQueryString="false" accept="" id="9ba46770-c12f-46f3-bf22-c24b90db09fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f7e86462-b2bb-4af8-b5ec-ab87105a195e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="51ed0edc-7c24-4e3e-96eb-9b89339c7f1c"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML Static [syn]" id="fd46b49e-1d7c-466a-a8d2-eb06c5f6fbbf"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static [syn]" mediaType="application/xml" postQueryString="false" accept="" id="9cc8e161-7dcb-4f6f-acc6-d668a32d77d7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="afb82d2c-aa36-4f21-acc3-8c0ba64e38be"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="799deddb-9439-4f63-8a35-da2346fb09a1"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static SHA1 [syn]" id="a89bc321-f7ad-4870-af10-325dcc28e489"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static SHA1 [syn]" mediaType="application/json" postQueryString="false" accept="" id="9c63d7a0-bbaa-45c3-b625-d5561b04ed36"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA1}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_1}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3a1ab6e0-c9af-4ca5-8ea2-7ea935f15819"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static [syn]" id="394b40b1-5e73-4fd1-b912-d402b39177b6"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static [syn]" mediaType="application/json" postQueryString="false" accept="" id="9fb199e5-08a0-4ef7-b455-dbad6a53b217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3513dbf7-7035-484c-945a-9e9e8571d9f2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="019a944f-562b-4423-8cf2-7c9b0ffe5fe5"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Static [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML Static Batch [asyn]" id="450dcb53-144c-4237-a0e4-1363315f7f5d"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="008cf739-110e-4c57-aa99-776b89723759"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a73987c9-7eb2-4910-ab95-f52462969119"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="197ce675-eb48-43d9-aa29-47d942bb0361"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="589be74e-9ee9-4d30-8ca3-c865e330d35b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="14e6115f-40e5-429f-a974-78e52a4a856f"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="9ccd7296-9170-445f-b4d0-def8c75efc0d"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d5006f36-aed5-48c6-826a-6a7502cb10d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>b2802208-1f2e-410e-92c9-f226cba330fa</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f2b519f0-5b30-48f4-8d37-00cbfe698c2e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="1d0b1ad2-842d-42ae-925d-5f63646aebb1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="322fd82d-1bb3-49a3-9d0c-5da80b3ba783"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="efb2c5e8-aa5f-41fb-84db-0189dc4b1c89"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>b2802208-1f2e-410e-92c9-f226cba330fa</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="18a3a157-3293-449f-bd6a-aa1383ed15a2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1de0b6f6-7c06-42b9-87b1-f9f0efff5f67"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static Batch [asyn]" id="645a5cb9-59f8-47c1-9578-a4818d56751f"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c96a1f8a-cb47-4e53-8586-dae3accd861f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"},
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="30f94fbb-ae11-4076-a667-ccdc3a107de2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4d09be21-85d4-4df1-889e-5a73ec733c57" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="8fc09f64-ddc7-4fcd-ba2e-ea225369c3cc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON Static Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="8d435067-1248-46bb-88bf-1f14b44780a7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="8c224b87-421e-42ff-97f1-fdda62ae90e1"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="e3f9bc6d-c707-42c1-a447-509db3fc800b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe9f5390-affb-47f2-9af3-6781173fb166"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="7f1c3ae5-acde-4ba2-b367-71e8abda9b68"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="5f433970-2f9f-4954-a468-3de5de2d842f"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="07 SOAP OnDemand" searchProperties="true" id="3261889a-de2f-405f-a064-48a4d1e4a701" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand ADV SHA1 [syn]" id="6a59876e-0630-4d06-86c0-68921f53f6ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV SHA1 [syn]" id="c59b98b0-3697-4952-bd18-dfa39dfb2652"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f37d7c24-f52f-4655-b579-d46296a69631"/><con:assertion type="XPath Match" name="XPath Match" id="49c34bb3-5431-4968-be36-3c6866920d41"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="1c4da229-3700-4cec-86c1-64a22f1275e4"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV [syn]" id="08ebbc3f-ad41-4c47-8c4e-7cf705fdb4f0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV [syn]" id="6a776ff1-d613-4204-86dc-5ec36165947c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f5a0990-7a31-49c4-8579-ec62bc473584"/><con:assertion type="XPath Match" name="XPath Match" id="d58c5218-e900-4b9a-8ffc-ff33e44506ba"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ae68dc05-8bf0-4bf7-b589-82635847d074"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [syn]" id="e441710f-ed41-4fda-af7d-1cbdc2c2e784"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [syn]" id="be3210bf-844e-4b59-ac0e-8167ce1b9cb4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2c00b5ec-f01e-4a31-b45c-2ce9994b078f"/><con:assertion type="XPath Match" name="XPath Match" id="96090e95-84a9-49f1-b6c1-c35601454bbf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="4c671810-8f49-40d9-80e2-baf439139aec" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [asyn]" id="a4f134cb-0c9b-485a-abbf-8311b18d6bac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [asyn]" id="d2c8a179-ccd9-442c-885d-0ce323748bbd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9d1ab4a4-85a1-40f1-ad77-7a2bc9c2d50d"/><con:assertion type="XPath Match" name="XPath Match" id="fdac1ee2-cf26-4207-a390-f5806bf12ebf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="4a6f64e2-c464-421a-ba23-339a05e49c2a"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="671974a3-b826-406a-b9a2-af46c30342fc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="c4facdc9-5e50-40c5-8581-9c86a73e061c"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="bedd21c3-2580-47c8-8046-dba41de1c930"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="399d3567-6424-4e38-9553-2ff3f05eb048"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>2064fc65-b46f-43b3-88d7-462496ff64ac</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4b31209-9338-46f3-af4b-e133ea0bbe9f"/><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="be64ab8c-4c6b-45bd-9f1f-4bca9b87fb0b"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="0caed73a-935b-4d85-9cf4-6964b97e85e7"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="396f732f-eced-44ca-9c4d-a90d90115c5a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="18c5097e-96f3-44a0-9c3a-46dc2f7efeda"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>2064fc65-b46f-43b3-88d7-462496ff64ac</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd75482c-f09c-4ff2-aee1-ce9f68fba634"/><con:assertion type="XPath Match" name="XPath Match" id="4e2afc9f-73f7-4219-bac4-3de16cbdfac4"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </SignResponse>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="e19877bf-b058-40f0-878c-77c43c899fb4" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV DN-Special-Chars [syn]" id="29b9f13b-a42b-4ac2-9dc1-9a29a8ac2d1a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV DN-Special-Chars [syn]" id="82b3dcb9-7565-4272-a62d-a186c5b44665"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ôèùçæ, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77f6654b-c26c-4783-a3fa-547cbeafa4dc"/><con:assertion type="XPath Match" name="XPath Match" id="bad7279f-f179-4708-ba6e-fd85b2bc1a0c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="06ae628b-0912-426d-8781-ff9ec065a68e"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="08 SOAP OnDemand [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9f346f50-76d5-4e9f-a8ea-864e1030b571"><con:settings/><con:testStep type="request" name="OnDemand QUA noMID [syn]" id="e1a7e94c-e0f4-4038-9f93-38080669e84c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA noMID [syn]" id="16785f20-bc45-4ef4-8c27-6b291d60b9a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c69df9b6-9195-469f-9dc0-7d606f6bf5f6"/><con:assertion type="XPath Match" name="XPath Match" id="8d9cd33d-0826-47a8-b867-61dbfb113ba3"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result/xmlns:ResultMajor</path><content>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongCust [syn]" id="c474a22d-0116-45d5-a2de-32e90f79b333"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongCust [syn]" id="d4802b9c-0aca-46c5-9d79-daa430448bcf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="adf67549-402e-4ad2-a630-f1384ffa0772"/><con:assertion type="XPath Match" name="XPath Match" id="21cde60c-a55c-40b3-8bca-704d9a0f97b5"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/AuthenticationFailed</ResultMinor>
  <ResultMessage xml:lang="en">Either ClaimedIdentity or SSL certificate check failed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongStaticId [syn]" id="1c821352-4a08-441c-a5db-955a5c949083"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongStaticId [syn]" id="252d86f6-d609-430b-8d25-7124877d1f2d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="62d451f1-558b-4612-bf80-f05464915ec5"/><con:assertion type="XPath Match" name="XPath Match" id="b0194047-d054-40a6-a606-511e55e089c7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnknownServiceEntity</ResultMinor>
  <ResultMessage xml:lang="en">Unknown Service Name in element &lt;Name></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA WrongDN 1 [syn]" id="959532ca-9718-469c-88ac-0f281eca7c4c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA WrongDN 1 [syn]" id="3a3aac53-d5cf-4473-8eea-f11b3fc0f4b4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>xxxxxx</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5a212d9c-027b-4e0e-a0a8-73b841c31afa"/><con:assertion type="XPath Match" name="XPath Match" id="b46cf76e-98d5-4f4e-9065-4e7bb54287a7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA WrongDN 2 [syn]" id="a5716c87-0dbd-4b77-b545-d5ff608b362d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA WrongDN 2 [syn]" id="81338ffd-afe5-4a81-8024-33aec23d4bd4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=,o=,c=</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="cba1ae16-5115-4036-b8ef-0972fb7fa1a8"/><con:assertion type="XPath Match" name="XPath Match" id="9ae2454d-ce24-4896-b779-a4d02eb6e64d"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA OnlyCountryDN [syn]" id="eb83b5e8-d821-4d45-ab7e-115725c41d32"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA OnlyCountryDN [syn]" id="79991322-d713-4723-99c8-815b07613c18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8cffe813-ce7c-4750-a12d-4e738d50019c"/><con:assertion type="XPath Match" name="XPath Match" id="1ebb5b10-9524-43b9-b7ed-defd35ab4a37"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongOCSP [syn]" id="6778537e-dc6f-4e8d-911b-e65a2a1a7f42"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongOCSP [syn]" id="62af5149-47dc-4c53-81a7-69da0813fed7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:xxxx"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="35456da7-214f-4561-8583-d23d06d8026c"/><con:assertion type="XPath Match" name="XPath Match" id="9c8fe64e-00e8-45ba-b493-592d64088f68"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown OCSPResponse type 'urn:ietf:rfc:xxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongTimestamp [syn]" id="0576d1bf-f534-4509-9393-6e12f74b19ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongTimestamp [syn]" id="dbd7e6a8-9216-41a3-bba9-73e9b222ad1c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="xxx"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="40d74a7f-742d-43c7-818c-b9b31f70d385"/><con:assertion type="XPath Match" name="XPath Match" id="e8ecdc18-03d0-484e-93b2-3505974fb756"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Unknown timestamp type 'xxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleEmailAddress [syn]" id="112ffebd-1870-4fbb-9aa9-f659e92d7768"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleEmailAddress [syn]" id="1ed88f8f-d92d-47ba-a7c6-3034f2a608dd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, emailAddress=test1@test.ch, emailAddress=test2@test.ch</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="feb329d0-8cb5-41ab-ad98-db5703759b6c"/><con:assertion type="XPath Match" name="XPath Match" id="5953400f-b2c7-4177-b915-3924b265bd37"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, emailAddress=test1@test.ch, emailAddress=test2@test.ch' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleGivenName [syn]" id="d7965d70-b8eb-417c-95bf-0bb1579a72bc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleGivenName [syn]" id="28ca8a38-354e-4409-9471-936268b6ef59"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, givenName=test1, givenName=test2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="dfc536a0-dbf6-44e7-9930-b0272aa18208"/><con:assertion type="XPath Match" name="XPath Match" id="92567b4d-f3b7-4bbc-94fa-7123197b8c4a"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, givenName=test1, givenName=test2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleSN [syn]" id="e72cb2e3-4e96-4df6-a299-8bc9306a5660"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleSN [syn]" id="48766b48-4816-4200-acb0-89b678f27aed"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, sn=test1, sn=test2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5de88a76-52df-4966-a364-52b32a9356b0"/><con:assertion type="XPath Match" name="XPath Match" id="4cc0acac-c5df-4471-8883-0ad422f9ab74"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, sn=test1, sn=test2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleL [syn]" id="caa57b25-9b41-4e48-b199-557cfce061f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleL [syn]" id="076224c9-a74e-4be7-8293-9e77188ea527"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=${#TestSuite#OnDemand_C}, l=loc1, l=loc2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3b49e58-97b7-4c84-9395-44cd66f74e8a"/><con:assertion type="XPath Match" name="XPath Match" id="3111fcc0-3130-4ec1-a796-ee97d5001704"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleO [syn]" id="5a4799fe-109f-4434-a7b8-d589295e4b80"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleO [syn]" id="8db61c25-e6b0-488d-9eac-c65f14fa44c9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, o=org1, o=org2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7da3c3c7-efa8-4ebb-a474-9fe97684c18a"/><con:assertion type="XPath Match" name="XPath Match" id="2c4f08de-7cdc-4a56-9913-8f0332d012b0"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, o=org1, o=org2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleSerialNumber [syn]" id="8afc0791-15da-435e-92f2-94a4821fc1af"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleSerialNumber [syn]" id="96e63c64-f844-4ae3-b009-64609fd7da6b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, serialNumber=111, serialNumber=222</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f3b5ffaf-c01b-4bb8-b060-3a1aaa4a6573"/><con:assertion type="XPath Match" name="XPath Match" id="4ceb0fee-1e40-45ae-8970-c74c66f9a43b"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, serialNumber=111, serialNumber=222' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MultipleST [syn]" id="9c16d441-c15d-404b-953a-819c147c04de"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MultipleST [syn]" id="11e68371-1d70-40d3-94a1-4a8d6270ced0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, st=st1, st=st2</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="329bab69-2bce-40aa-abb6-3b9bdde93103"/><con:assertion type="XPath Match" name="XPath Match" id="c151491d-8cc6-414a-aef8-69a1badf1320"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name 'cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, st=st1, st=st2' must not contain duplicate RDNs</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV DN DontMatch [syn]" id="a85e127f-797b-4a25-9c85-dba031e0ac40"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV DN DontMatch [syn]" id="3a3aac53-d5cf-4473-8eea-f11b3fc0f4b4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Philipp Haupt, o=Swisscom (NON-Switzerland) AG, c=CH, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="5a212d9c-027b-4e0e-a0a8-73b841c31afa"/><con:assertion type="XPath Match" name="XPath Match" id="b46cf76e-98d5-4f4e-9065-4e7bb54287a7"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">invalid &lt;DistinguishedName> in &lt;CertificateRequest></ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="09 RESTful OnDemand" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="216ef3ee-55a8-4ba8-80d7-03a10929360e"><con:settings/><con:testStep type="restrequest" name="XML OnDemand ADV [syn]" id="f1e41673-5316-4af2-a23d-8edec9a6adb3"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV [syn]" mediaType="application/xml" postQueryString="false" accept="" id="7c91724d-9125-4d5e-a657-ee910f86db37"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="7ad040e8-9f90-4c55-815c-f51275b7b742"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f93b2b05-c4c9-4c03-a38c-5b814ddb683d"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV [syn]" id="a5ebbaa7-90c3-495b-889c-a57fea6750a6"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV [syn]" mediaType="application/json" postQueryString="false" accept="" id="f2badd41-5cda-448c-88cc-b7d04f5c16a2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0538d61f-6fa5-4dcc-b52f-029c50c3654f"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="83c6c375-1668-4a2a-a079-435ee0f41d9d"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON OnDemand ADV [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV Batch [asyn]" id="15fae70a-aae9-42b7-aed2-98f6bf13cba2"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="9e3c8408-0033-40d5-a148-69451838a7e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2ae4b9bf-76f0-42e6-8ae8-892301ba7352"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d5c507d4-3431-4967-b1f8-9343ca2624a2"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="6be6b4f7-80b2-4d20-8981-5df37eec9782"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="305047a8-a62e-47f1-855a-2822c25d8522"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="e127811f-9669-4bc0-9c8a-c894099d17a8"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="21e3e929-a126-4d42-8666-655b102c5b6e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>9ea4ce46-0e5c-40a6-a120-a9761364e462</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="0af3d6c6-c7ec-4f64-bba4-0442d9ae831c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="f923a381-31c6-490b-8e18-f1cbc835eb1b"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="17e46450-0824-4db3-b8a4-f124dd96dec6"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="576fd72a-07cc-4f5d-b98d-5bee1c68267b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>9ea4ce46-0e5c-40a6-a120-a9761364e462</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="96eb5cd3-5224-40c4-9250-b75b399bc9f3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="aa44cb6f-2fee-4482-8711-8b0b56d7ea00"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV Batch [asyn]" id="33849829-e8c1-4ad0-b295-5fb8198a07f9"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="923d951c-137f-4891-82fd-d833a2805768"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8c832f1f-076a-4e9b-ac20-71026b27ff6a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3ae7f38d-f9d3-4ded-93a9-b87bfa57d5ed" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="6ddf75ad-1765-41b5-9714-7610d908048e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="ea85bd16-c136-4443-9783-575bc032f931"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="b47c79dc-5e69-4e7a-9714-60dbecfbb544"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="58afd9ea-9cb9-4e73-b6c6-ca5fcc377f2e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2d6cbe77-ed7b-4b53-b136-0fb0ea5daac9"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="c4774423-d2c1-4a02-9f25-1da53d7a5fc6"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("Validate JSON Response 2")</script></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="c82a2ade-4515-45af-91f1-8c839380b12c"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="11 RESTful Static PKCS#1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="41a5f924-ccb5-4542-a130-1a7b80dc938b"><con:settings/><con:testStep type="restrequest" name="XML Static [syn]" id="8ff6c56b-2469-486d-83a9-f34d6d38a994"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static [syn]" mediaType="application/xml" postQueryString="false" accept="" id="9cc8e161-7dcb-4f6f-acc6-d668a32d77d7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/plainsignature</AdditionalProfile>
      <SignatureType>http://ais.swisscom.ch/1.1/signaturetype/plain</SignatureType>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="PLAIN"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_PKCS1}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="afb82d2c-aa36-4f21-acc3-8c0ba64e38be"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="799deddb-9439-4f63-8a35-da2346fb09a1"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <dsig:KeyInfo>
      <dsig:X509Data>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
      </dsig:X509Data>
    </dsig:KeyInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="http://ais.swisscom.ch/1.1/signaturetype/plain">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static [syn]" id="295f6853-17ea-4162-bf0e-c6b167cd214f"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static [syn]" mediaType="application/json" postQueryString="false" accept="" id="9fb199e5-08a0-4ef7-b455-dbad6a53b217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "AdditionalProfile": "http://ais.swisscom.ch/1.1/profiles/plainsignature", 
      "SignatureType": "http://ais.swisscom.ch/1.1/signaturetype/plain",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "PLAIN"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_PKCS1}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3513dbf7-7035-484c-945a-9e9e8571d9f2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="dc7f60a0-f301-4425-8c72-b06cc8c8100a"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Static [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "http://ais.swisscom.ch/1.1/signaturetype/plain" ) {
	testRunner.fail("Signature type invalid")
	return
}

if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /Uo.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML Static Batch [asyn]" id="c3495381-d992-4ab9-9c04-33d13ac91cd5"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static Batch [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="008cf739-110e-4c57-aa99-776b89723759"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>http://ais.swisscom.ch/1.1/signaturetype/plain</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/plainsignature</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="PLAIN"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_PKCS1}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_PKCS1}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="a73987c9-7eb2-4910-ab95-f52462969119"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="197ce675-eb48-43d9-aa29-47d942bb0361"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="2a7aab18-2c97-405c-ab3c-38782c82d600"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="2331148d-050b-4405-a452-cf9d4f78669e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="da49a71e-dae4-4d1a-bba4-c0dad3ccba2b"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d5006f36-aed5-48c6-826a-6a7502cb10d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>c601ac18-0ced-4c97-9744-0e319d389c86</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="f2b519f0-5b30-48f4-8d37-00cbfe698c2e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="9fc71628-f7b1-4e0e-ac65-2d64ced7332b" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <dsig:KeyInfo>
      <dsig:X509Data>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
      </dsig:X509Data>
    </dsig:KeyInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="http://ais.swisscom.ch/1.1/signaturetype/plain">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="256_2">
          <Base64Signature Type="http://ais.swisscom.ch/1.1/signaturetype/plain">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="1d35e67b-e156-4093-b9b3-8f5a9752616e"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="1af31323-45d4-4814-9679-daa37ee0104c"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="efb2c5e8-aa5f-41fb-84db-0189dc4b1c89"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>c601ac18-0ced-4c97-9744-0e319d389c86</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="18a3a157-3293-449f-bd6a-aa1383ed15a2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1de0b6f6-7c06-42b9-87b1-f9f0efff5f67"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <dsig:KeyInfo>
      <dsig:X509Data>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
        <dsig:X509Certificate>*</dsig:X509Certificate>
      </dsig:X509Data>
    </dsig:KeyInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="http://ais.swisscom.ch/1.1/signaturetype/plain">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="256_2">
          <Base64Signature Type="http://ais.swisscom.ch/1.1/signaturetype/plain">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static Batch [asyn]" id="c43538e5-e488-4f21-8915-be19678ebf32"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static Batch [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c96a1f8a-cb47-4e53-8586-dae3accd861f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "http://ais.swisscom.ch/1.1/signaturetype/plain",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "PLAIN"},
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "http://ais.swisscom.ch/1.1/profiles/plainsignature"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_PKCS1}"
      },
     "DocumentHash": {
       "@ID": "256_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_PKCS1}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="30f94fbb-ae11-4076-a667-ccdc3a107de2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="afdc2a07-b16a-483e-8409-4eab7fb1e7be" name="JsonPath Match"><con:configuration><path>$</path><content>{"SignResponse":{"@RequestID":"*","@Profile":"http://ais.swisscom.ch/1.1","Result":{"ResultMajor":"urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending"},"OptionalOutputs":{"async.ResponseID":"*"}}}</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="cb52b6f9-22bd-46f1-8b33-9e1623547da5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON Static Batch [asyn]</con:sourceStep><con:sourcePath>$..['async.ResponseID'][0]</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="ab6a732e-8b53-4c0d-a7a7-f8bf156c34b0"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="603ceb71-fc19-4e14-b11e-caf526229dbe"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="e3f9bc6d-c707-42c1-a447-509db3fc800b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe9f5390-affb-47f2-9af3-6781173fb166"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="bb57f6b3-48a5-4e5f-9fca-0a5b665fa8b2"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("Validate JSON Response 2")</script></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="d8c5a69e-3a01-4f96-9361-c9b918b9488f"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[0] != "http://ais.swisscom.ch/1.1/signaturetype/plain" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[0] ==~ /Uo.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>BASEURL</con:name><con:value>https://ais.swisscom.com</con:value></con:property><con:property><con:name>PATH_SOAP</con:name><con:value>/AIS-Server/ws</con:value></con:property><con:property><con:name>PATH_REST</con:name><con:value>/AIS-Server/rs/v1.0</con:value></con:property><con:property><con:name>AP_ID</con:name><con:value>IAM-Test</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp1-iam-signer</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>41797973649</con:value></con:property><con:property><con:name>OnDemand_CN</con:name><con:value>Eva Ramon</con:value></con:property><con:property><con:name>OnDemand_O</con:name><con:value>Swisscom (Schweiz) AG</con:value></con:property><con:property><con:name>OnDemand_C</con:name><con:value>CH</con:value></con:property><con:property><con:name>USER_ALERT</con:name><con:value>true</con:value></con:property><con:property><con:name>SHA1</con:name><con:value>http://www.w3.org/2000/09/xmldsig#sha1</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_1</con:name><con:value>C+7Hteo/D9vJXQ3UfzxbwnXaijM=</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>DIGEST_PKCS1</con:name><con:value>BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwc=</con:value></con:property><con:property><con:name>_tmp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">61577372-e08b-48a6-a1f3-ccd50f69da39</con:value></con:property><con:property><con:name>_tmp_MIDSerialNumber</con:name><con:value>MIDCHEH18OIVVWM8</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="862d94b0-ec10-4847-88e2-185bb28ff926" name="Regression Test Suite (Step-Up Profile 1.1)"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6701de43-aece-4b78-9e67-2ecca95a28dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 SOAP OnDemand MID" searchProperties="true"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="16352b70-a427-44ff-881d-176b089e42ee"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID QUA [asyn]" id="08f4a5dd-c648-43ab-a1f3-42f2cc38c84e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Test 01: OnDemand QUA MID [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="792392fb-d942-49e8-9409-8e3d79d64ea7" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ResponseID" id="14ef08f6-3708-4481-a129-dcf62a4deb96"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="99d3ffb8-5429-4a6f-9849-5b1fd3fa9bb4"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="1373a9e2-6b97-49c1-9f8c-5d83b333ec6d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending)" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>33ab5881-0bb0-4f9a-a165-6dd2173f42e5</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="82e07840-a6b9-4415-9bbc-64d93f06f68f" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns3:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="47e9139d-74ae-42c8-bbfc-6ced367407cf"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="7d4607d6-1e3c-4388-9f96-280f892b8467"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final)" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>33ab5881-0bb0-4f9a-a165-6dd2173f42e5</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="76b6a9dd-7b41-4545-a6c0-794d95209a02" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SerialNumber" id="b791baee-5838-4d91-8b7a-181c082997c3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>SerialNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Poll RequestID (Final)</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:SNofDN</con:sourcePath><con:targetType>_tmp_MIDSerialNumber</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2" id="55c6cd7a-eea1-4a92-8c37-25c469e2d737"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID QUA [asyn] SN" id="e31190f3-5bda-4013-96ea-bc33479252da"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA [asyn] SN" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, SerialNumber=57358</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Test 01: OnDemand QUA MID [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                        <sc:SerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:SerialNumber>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="2e1a6f7e-91b1-428a-8ba8-c88e8611eabb" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ResponseID 2" id="6ba93b07-d194-4471-a676-573ca2d3c2c0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn] SN</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending) SN</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn] SN</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final) SN</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="da623761-38ad-4713-9f93-154158599c0b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending) SN" id="34c29ff6-362b-4aea-9b63-e2aa097966e0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending) SN" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>f3bedf32-2301-4bba-9c0b-3289098a3737</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="6425517a-9f04-4949-ad05-729c06ee2959" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns5:ResponseID xmlns:ns5="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://sas.swisscom.ch/1.0/schema" xmlns:ns2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns3="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:ns6="http://ais.swisscom.ch/1.0/schema">*</ns5:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="b136ffdf-86bd-486d-b2fb-96ee76767cac"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final) SN" id="583fdb54-d494-489e-8560-1c5600580d03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final) SN" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>f3bedf32-2301-4bba-9c0b-3289098a3737</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="e9c37de0-3f9a-462f-b72d-97240536926b" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6af98d71-e024-4d04-b476-84a031ec9bbe" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="02 SOAP OnDemand PwdOTP" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand QUA PwdOTP [asyn]" id="351fe3c5-97f7-4d10-ae84-929993c83eef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA PwdOTP [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
	xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
	xmlns:ais="http://service.ais.swisscom.com/" 
	xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest 
         		RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
         		Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
                        <sc:Message>Test 02: OnDemand QUA PwdOTP [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="574a7a6a-f32f-41a8-83cf-36422031ebb5" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" id="41779559-8276-4071-a517-ee5259b68bec" name="Schema Compliance" disabled="true"><con:configuration/></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending)" id="7166826c-83e2-459f-982b-61a7129d061b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath>
</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (pending)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 1" id="5e788834-42c0-493d-807d-574f09c8e7bc"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"
	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	// log.debug("ConsentURL is: $consentURL")

	if (consentURL != null) {
		
		def alert = com.eviware.soapui.support.UISupport;
		if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {

			if (consentURL.contains("Reset")) {
				def password1 = "Password1"
				def password2 = "Password2"

				while (password1 != password2) {
					password1 = alert.prompt("Password1","Enter Password:")
					password2 = alert.prompt("Password2","Confirm Password:")
				}
				testRunner.testCase.setPropertyValue("password", password1)

					
			} else if (consentURL.contains("Consent")) {
				password1 = alert.prompt("Password","Enter Password:")
				testRunner.testCase.setPropertyValue("password", password1)
			}
			// log.debug("Password: " + testRunner.testCase.getPropertyValue("password"))
		
		} else {
			testRunner.testCase.setPropertyValue("password", "Muellerstrasse16")
		}

		// Define POST parameters, depending on whether this is a first registration or a password change
		if (consentURL.contains("Reset")) {
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", consentURL)
			// log.debug(httpPostStep.getPropertyValue("Endpoint - Reset"))
				 
		} else if (consentURL.contains("Consent")) {
				
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", '${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check')
			// log.debug("Consent set to Endpoint: " + httpPostStep.getPropertyValue("Endpoint"))
			def baseurl_consent =  testRunner.testCase.testSuite.getPropertyValue("BASEURL_CONSENT")
			// log.debug(baseurl_consent)
		}
			
	} else {
		log.error("ConsentURL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL" id="07dad1c5-a4f2-4965-8c65-d8ff0e510ada"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username" id="c99b4e13-1939-400f-8b9a-ba11fa8ca82b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST password</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST password</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password" id="8301e60b-5b52-4d69-8309-f90d6707b49a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="cb0520d2-25f7-432f-ad7a-94497ea137aa" name="Valid HTTP Status Codes" disabled="true"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e70a12d0-efef-45d1-a38a-f9625052e923" name="Contains" disabled="true"><con:configuration><token>We just sent you</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>df331b9a-66a0-43f6-80f4-816f186e861f</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>e944c3bf-d2b9-4a4e-ad8d-3a4dacbbf195</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 0" id="976e8b67-daf8-44a5-9940-3031e0ab716a"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 2" id="1d60e942-830c-4342-88f4-75e5d21fc37c"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		//log.debug("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			// english 66-72
			// def otp = text.substring(66, 72)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			log.info("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP" id="e989f5b1-07a6-4424-834d-d83d4b671ce1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP" id="543ce23d-69bd-4dc0-8899-e8f598f32295"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d407e902-564a-4ca3-8562-75871a062f61" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="32896c63-408f-446b-88e2-f58307124dbc" name="Contains"><con:configuration><token>The Authentication Succeeded.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>535922</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>df331b9a-66a0-43f6-80f4-816f186e861f</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>7459ba90-8502-4ffd-a431-2925ad68c66f</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="4e8294d6-a826-49e8-a382-c05356eba394"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="7af0336d-bf14-410f-a1e1-952b5ca7ea7e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending)" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>fba78435-ffdb-427b-9194-10f2ee913fdd</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="09b993e3-1d4c-43c2-8051-b5e9fb754257" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://sas.swisscom.ch/1.0/schema" xmlns:ns5="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns6="http://ais.swisscom.ch/1.0/schema">*</ns3:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="83cbe8f7-fde7-4229-ae8b-f64fd12a6fd4"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="4c253be6-6546-487b-9ed5-5a7e85a32b18"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final)" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>fba78435-ffdb-427b-9194-10f2ee913fdd</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="f4e87d76-4104-4ebb-8900-954363c602d8" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV PwdOTP 2 [asyn]" id="8bda1532-7d22-4f32-9be3-256f6a2fd45b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV PwdOTP 2 [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
	xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
	xmlns:ais="http://service.ais.swisscom.com/" 
	xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest 
         		RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
         		Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
                        <sc:Message>Test 02: OnDemand ADV PwdOTP [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="Schema Compliance" id="db36792b-8348-4324-8c56-6e2b94f862cf" name="Schema Compliance" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="XPath Match" id="574a7a6a-f32f-41a8-83cf-36422031ebb5" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending) 2" id="78e395e7-1098-48cb-9da3-b943a0217f00"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV PwdOTP 2 [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath>
</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV PwdOTP 2 [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final) 2</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (pending)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV PwdOTP 2 [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending) 2</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 3" id="80cc81b0-ee54-4338-92a6-56e1f50ed48b"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"
	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	// log.debug("ConsentURL is: $consentURL")

	if (consentURL != null) {
		
		def alert = com.eviware.soapui.support.UISupport;
		if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {

			def password1 = "Password1"
			def password2 = "Password2"

			while (password1 != password2) {
				password1 = alert.prompt("Password1","Enter Password:")
				password2 = alert.prompt("Password2","Confirm Password:")
			}
			testRunner.testCase.setPropertyValue("password", password1)
	
		} else {
			// New password to be set
			testRunner.testCase.setPropertyValue("password", "Muellerstrasse16")
		}

		// We want to test the password change
		// The endpoint needs to be set accordingly
		def httpPostStep = testRunner.testCase.getTestStepAt(22)
		httpPostStep.setPropertyValue("Endpoint", consentURL)
		log.info(consentURL)
			
			
	} else {
		log.error("ConsentURL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL 2" id="e5729d05-9b67-466d-9336-b08606e9fa01"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL 2" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand ADV PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 2" id="da5e70d6-dc8e-410c-92dc-046ece3add04"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>forgotPasswordURL</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/div/a/@href</con:sourcePath><con:targetType>tmpForgotenPassword</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Set Endpoint" id="2a5d8843-87c0-431c-9dff-d980fdf0f17d"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"

	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	def resetURL = consentURL.replace("Consent", "Reset")
	// log.debug(resetURL)
		
	if (resetURL != null) {
		
		// The endpoint of "GET ForgotPassword" needs to be set accordingly
		def httpGetForgotPasswordStep = testRunner.testCase.getTestStepAt(20)
		httpGetForgotPasswordStep.setPropertyValue("Endpoint", resetURL)

		def postNewPasswordStep = testRunner.testCase.getTestStepAt(22)
		postNewPasswordStep.setPropertyValue("Endpoint", resetURL)

			
	} else {
		log.error("Forgotten Password URL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ForgotPassword?" id="8d4774ba-15fe-4041-8901-7150a5581754"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ForgotPassword?" downloadIncludedResources="false" postQueryString="false" mediaType="application/xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>https://ais-sas.pre.swissdigicert.ch/sas/web/ResetURL/2205c32f-8465-41bc-8681-8dff3f3ab295</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand ADV PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 3" id="b49d38ae-f61a-456c-8951-dfd6fd356ca1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ForgotPassword?</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST NEW password</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ForgotPassword?</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST NEW password</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST NEW password" id="d6ee3f70-35fd-4799-be13-73a0454d1d32"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST NEW password" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>https://ais-sas.pre.swissdigicert.ch/sas/web/ResetURL/2205c32f-8465-41bc-8681-8dff3f3ab295</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="cb0520d2-25f7-432f-ad7a-94497ea137aa" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e70a12d0-efef-45d1-a38a-f9625052e923" name="Contains"><con:configuration><token>We just sent you a SMS</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>a9546de0-bdea-4c78-972e-3419cb4360c4</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="8d1b43e6-298a-4a5c-a093-6661d8ed79d4"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 4" id="836b50a2-b582-4f5f-ab3d-04d1a38f3c81"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		//log.debug("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			// english 66-72
			// def otp = text.substring(66, 72)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			//log.debug("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP 2" id="df8c372d-08cb-4a50-a068-9d0299704e19"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST NEW password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST NEW password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP 2" id="eb55c864-401b-4e56-af17-1ef20f0b7183"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d407e902-564a-4ca3-8562-75871a062f61" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="32896c63-408f-446b-88e2-f58307124dbc" name="Contains"><con:configuration><token>The Authentication Succeeded.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>613377</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>2205c32f-8465-41bc-8681-8dff3f3ab295</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>a9546de0-bdea-4c78-972e-3419cb4360c4</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 3" id="a50a6f2b-807e-4c28-aaac-357cdd4e8d93"><con:settings/><con:config><delay>500</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending) 2" id="f378b999-99f1-4857-bfd9-b0baf624a0a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending) 2" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>4e64e2e0-cb11-4463-8a0e-cca91011f95c</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="09b993e3-1d4c-43c2-8051-b5e9fb754257" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://sas.swisscom.ch/1.0/schema" xmlns:ns5="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns6="http://ais.swisscom.ch/1.0/schema">*</ns3:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="3e45807b-e68e-4319-9bc8-d9a2117554c3"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 3</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final) 2" id="31b58c39-3a90-46f0-91a9-536aa758c92d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final) 2" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>4e64e2e0-cb11-4463-8a0e-cca91011f95c</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="f4e87d76-4104-4ebb-8900-954363c602d8" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="SNofDN Changed" id="f7ade469-d6b3-4d8a-b94f-0ce3354dd5f3"><con:settings/><con:config><script>import com.eviware.soapui.support.*

	// Check the SNofDN from the first signature is different from the one of the second, since we changed the password in between.
	def response1 = testRunner.testCase.getTestStepByName("Poll RequestID (Final)").getPropertyValue("response")
	def response2 = testRunner.testCase.getTestStepByName("Poll RequestID (Final) 2").getPropertyValue("response")

	def SNofDN1 = new XmlSlurper().parseText(response1).Body.pendingResponse.SignResponse.OptionalOutputs.StepUpAuthorisationInfo.Result.SerialNumber
	def SNofDN2 = new XmlSlurper().parseText(response2).Body.pendingResponse.SignResponse.OptionalOutputs.StepUpAuthorisationInfo.Result.SerialNumber
		
	log.debug(SNofDN1)
	log.debug(SNofDN2)

	assert SNofDN1 != SNofDN2: "ERROR: the SNofDNs must be different!"</script></con:config></con:testStep><con:properties><con:property><con:name>tmpConsentURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://ais-sas.pre.swissdigicert.ch/sas/web/ConsentURL/6ef71e41-9c61-4575-9740-eed3a0e3ba3f</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Muellerstrasse16</con:value></con:property><con:property><con:name>tmpOtp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tmpTransactionID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>jsessionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tmpForgotenPassword</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="03 RESTful OnDemand MID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="481da42a-2a35-4a97-96a8-bceee9831d92"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="31dba0b8-57f3-4fb0-8d7c-7d3ef9bb9af4"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV MID [asyn]" id="f820d2cb-b55c-4eab-b4c3-b339ac4cc1b3"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV MID [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>Test 03: XML OnDemand ADV MID [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="f7f016c9-f469-4c93-888c-37f47fe88dd7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="09f85d03-e756-48da-b2df-97e3899d6a55"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="43ece6ba-e966-4214-8a29-09ece36504b7"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>ebc480e4-239c-4605-bca3-60cb273585e0</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="dbd94f1f-2a53-4af5-9f6d-d0e77e9e83f0"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="b11b02be-8c1d-446c-8377-29309b392f32"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="3dc4ba53-6b99-47fe-be27-4bfad841f029"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>ebc480e4-239c-4605-bca3-60cb273585e0</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b9bb6d8b-37e3-4952-8072-3b6b533b68fc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9f2e9274-a3ba-4389-9161-0070d15b0d35"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
      <sc:RevocationInformation>
         <sc:CRLs>
            <sc:CRL>*</sc:CRL>
         </sc:CRLs>
         <sc:OCSPs>
            <sc:OCSP>*</sc:OCSP>
         </sc:OCSPs>
      </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject>
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 4" id="433fa6de-9252-4570-bcce-dd280b2a2f40"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand QUA MID [asyn]" id="487d40c6-8c87-49eb-b74e-d6c63cfb906b"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand QUA MID [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c3cdfec3-57ad-412f-9deb-ad82212fea5d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}",
        "sc.StepUpAuthorisation": {
          "sc.Phone": {
            "sc.MSISDN": "${#TestSuite#MSISDN}",
            "sc.Message": "Test 03: JSON OnDemand Qualified MID [asyn]",
            "sc.Language": "DE"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe8b1a37-5e76-4372-a796-57ffbd3b780e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="00b7d79a-555f-47bd-9f45-5f1e348145f7" disabled="true"><con:configuration><path>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="http://ais.swisscom.ch/1.1" RequestID="*" xmlns="${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2" id="f5e43312-1c3c-4ab2-9cc1-5b24bbc17cdb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand QUA MID [asyn]</con:sourceStep><con:sourcePath>$.SignResponse.OptionalOutputs.['async.ResponseID']</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="7c0300b5-4ba9-4d78-b5a7-6964ae000fb4"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="21a453fb-49c1-4f4f-ba25-559750a99689"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Check if success" id="5b44fb5d-6674-44a4-b892-b01567b3ff59"><con:settings/><con:config><script>import static com.jayway.jsonpath.JsonPath.parse

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' )

def result = parse(response).read('$..ResultMajor[0]')
log.info result
if (result == 'urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending') 
	testRunner.gotoStepByName("Poll Delay 2")
else testRunner.gotoStepByName("JSON Poll RequestID (Final)")</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)" id="f324fbf1-5a89-4e2d-b6df-46acb8ee3f77"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="36ce3c10-ac12-44df-8e02-541cf3f9a160"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Final)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="04 RESTful OnDemand PwdOTP" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="17b7f23f-1b2d-49eb-b2ac-70b3b30374cf"><con:settings/><con:testStep type="restrequest" name="XML OnDemand QUA PwdOTP [asyn]" id="059f7b58-6cef-4464-87c1-02e93583bbff"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand QUA PwdOTP [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>   
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
               <sc:Message>Test 04: XML OnDemand QUA PwdOTP [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending)" id="b7ebf36f-a0a0-4338-9305-03781bc900b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:type>XPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 1" id="00a25fe9-7879-4081-9b5f-da1f61ee8766"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"
	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	log.info("ConsentURL is: $consentURL")

	if (consentURL != null) {
		
		def alert = com.eviware.soapui.support.UISupport;
		if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {

			if (consentURL.contains("Reset")) {
				def password1 = "Password1"
				def password2 = "Password2"

				while (password1 != password2) {
					password1 = alert.prompt("Password1","Enter Password:")
					password2 = alert.prompt("Password2","Confirm Password:")
				}
				testRunner.testCase.setPropertyValue("password", password1)

					
			} else if (consentURL.contains("Consent")) {
				password1 = alert.prompt("Password","Enter Password:")
				testRunner.testCase.setPropertyValue("password", password1)
			}
			log.info("Password: " + testRunner.testCase.getPropertyValue("password"))
		
		} 

		// Define POST parameters, depending on whether this is a first registration or a password change
		if (consentURL.contains("Reset")) {
			// If it's a registration, we need a password confirm
			testRunner.testCase.setPropertyValue("tmpPostParam", "password_confirm")
			log.info(testRunner.testCase.getPropertyValue("tmpPostParam"))

			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", consentURL)
			log.info(httpPostStep.getPropertyValue("Endpoint"))
			
			 
		} else if (consentURL.contains("Consent")) {
			// If it's a password change, we need a username
			testRunner.testCase.setPropertyValue("tmpPostParam", "username")
			log.info(testRunner.testCase.getPropertyValue("tmpPostParam"))
		
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", '${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check')
			log.info(httpPostStep.getPropertyValue("Endpoint"))
			def baseurl_consent =  testRunner.testCase.testSuite.getPropertyValue("BASEURL_CONSENT")
			log.info(baseurl_consent)
		}
			
	} else {
		log.error("ConsentURL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL" id="7783b89c-e418-4f2b-b5d6-8880fb32e784"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username" id="cb9eef27-4fff-421a-a955-e511813fbeea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST password</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST password</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password" id="f1ffce5f-63ef-4dd4-84b6-9d1c8e7604cc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continuer</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>3ceb316c-5929-4646-8bff-1aec13da9388</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>00c8ee99-ab1c-4d03-87cd-906b3c47dd1a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 0" id="768920ce-0000-4f40-8354-e6cd0806a5df"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 2" id="9e3bf1bd-13de-40e1-a04c-3b2da98f0e50"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		log.info("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			log.info(text)
			// French, German 68-74 English 67-73
			// def otp = text.substring(67, 73)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			log.info("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP" id="8fa913c9-4480-47c2-8cc7-ef9f922ccdc5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP" id="99ec75dc-2c5c-4692-a3ec-d88debc75fc5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:request><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continuer</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="96370c5b-c4e2-4ebb-a3bd-b5153954e0df"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="18eb041a-a9e5-407e-bf87-3bed9cb91ee0"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>d9dc78c5-3ada-4338-b0ab-b0ab71fe5263</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="a8e295b0-8742-433b-8c8b-ede066e11711"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="b4b1ff18-ebd6-4374-92f6-118daf71fbbf"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="3dc4ba53-6b99-47fe-be27-4bfad841f029"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>d9dc78c5-3ada-4338-b0ab-b0ab71fe5263</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b9bb6d8b-37e3-4952-8072-3b6b533b68fc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9f2e9274-a3ba-4389-9161-0070d15b0d35" disabled="true"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content>&lt;SignResponse>
*
&lt;/SignResponse></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="SerialNumber" id="f0fdab9f-ed7f-4ad9-a32b-e76fe2959471"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>SerialNumber</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Poll RequestID (Final)</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:SerialNumber</con:sourcePath><con:targetType>tmpSerialNumber</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand QUA PwdOTP SN [asyn]" id="c5f7454d-1f4a-4274-9849-f4926f5d6c4e"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand QUA PwdOTP SN [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c3cdfec3-57ad-412f-9deb-ad82212fea5d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate",
      "AdditionalProfile": "http://ais.swisscom.ch/1.1/profiles/redirect", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}",
        "sc.StepUpAuthorisation": {
          "sc.Phone": {
            "sc.MSISDN": "${#TestSuite#MSISDN_non_MID}",
            "sc.Message": "Test 04: JSON OnDemand Qualified MID [asyn]",
            "sc.Language": "DE",
            "sc.SerialNumber": "${#TestCase#tmpSerialNumber}"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe8b1a37-5e76-4372-a796-57ffbd3b780e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="00b7d79a-555f-47bd-9f45-5f1e348145f7" disabled="true"><con:configuration><path>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="http://ais.swisscom.ch/1.1" RequestID="*" xmlns="${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending) 2" id="76886205-ea90-4496-8750-161c353bd3cd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand QUA PwdOTP SN [asyn]</con:sourceStep><con:sourcePath>$.SignResponse.OptionalOutputs.['async.ResponseID']</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand QUA PwdOTP SN [asyn]</con:sourceStep><con:sourcePath>$.SignResponse.OptionalOutputs.['sc.StepUpAuthorisationInfo'].['sc.Result'].['sc.ConsentURL']</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL 2" id="f485e229-d8ba-4762-a3d2-d0476b8700bd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL 2" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>Test 04: JSON OnDemand Qualified MID [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="ac385f7e-04ad-4f9d-a4d1-b043d44c52c6" name="XPath Match" disabled="true"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 2" id="fb95815e-356d-4dba-99ef-8cd740964326"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST password 2</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST password 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password 2" id="d3223281-12eb-45aa-a546-29fcd815c84d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Weiter</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>5bc4f19c-0462-44cf-b355-f943369ca683</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>9ff1e814-5c23-4ab9-b817-4469d6d8987d</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="f9271756-084f-41b2-8989-04782ec052bf"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 3" id="7c4091ff-d54e-4b33-b1e3-b92af9ed1790"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		log.info("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			// German and French 68-74
			// def otp = text.substring(67, 73)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			log.info("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP 2" id="6e73e610-4db7-4025-af19-a63ee4ebbf86"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP 2" id="f2e4a4b8-a621-4873-b765-80b6ae9674a7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>655935</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>5bc4f19c-0462-44cf-b355-f943369ca683</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>1636ebac-4d0a-4ae4-a1d1-49ee206f502d</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 3" id="021fafa6-df96-482d-b5ab-a3f3240b2a39"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="817effca-d6a5-4707-a830-ddc7293ab2ed"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="9f721b4c-ae6e-496d-9ae8-264e9b80c85b"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 3</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)" id="be6e8ac9-2316-4b83-9d6a-3f14cf03f66c"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1" id="1e4b0fb9-630a-4c10-8fd5-72be599a1d94"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}

if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$" ==~ /MI.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tmpConsentURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://ais-sas.pre.swissdigicert.ch/sas/web/ConsentURL/a139e88c-8850-4d86-a52d-f9b6254736fd</con:value></con:property><con:property><con:name>tmpSerialNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAS011h0siydzyx</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Muellerstrasse16</con:value></con:property><con:property><con:name>tmpOTP</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tmpPostParam</con:name><con:value>username</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="6f74d5f5-2e6a-40f7-a2e2-556059092fd3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="05 SOAP OnDemand MID (Error)" searchProperties="true"><con:settings/><con:testStep type="request" name="OnDemand MID QUA [syn]" id="69777de6-b643-4f79-82ca-c521825e6cc8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA [syn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Test 05: OnDemand QUA MID [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="18c7aa60-1078-4eb7-acce-b4fc29e4174e" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="4300bebc-c447-4da7-b7f8-02efd07c5519" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.0/resultminor/InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand MID QUA BLOCKED" id="a14a14f0-851e-4e75-a886-58a1f7e4cf5f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA BLOCKED" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>41000092402</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="18c7aa60-1078-4eb7-acce-b4fc29e4174e" name="Not SOAP Fault"/><con:assertion type="XPath Match" id="4300bebc-c447-4da7-b7f8-02efd07c5519" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ResponseID" id="a40ce63f-2696-46c6-9105-a6baab93248b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA BLOCKED</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Failed)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="f8d541f3-58ab-4c9a-902b-af3ef7a55c49"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Failed)" id="cc343654-4f79-4c15-924f-53d014c38dcd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Failed)" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>b7c985ec-2e5c-4a89-ae7e-16660bc519af</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="82e07840-a6b9-4415-9bbc-64d93f06f68f" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.1/resultminor/subsystem/StepUp/service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_402</ResultMessage>
  </Result>
  <OptionalOutputs>
  <sc:StepUpAuthorisationInfo>
  <sc:Result>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_402</sc:Subcode>
      <sc:Reason>PIN_NR_BLOCKED</sc:Reason>
      <sc:Detail>
        <ns1:detail xmlns:ns1="http://kiuru.methics.fi/mssp">PIN of the mobile user is blocked</ns1:detail>
        <ns2:UserAssistance xmlns:ns2="http://www.swisscom.ch/TS102204/ext/v1.0.0">
          <ns2:PortalUrl xmlns="http://www.swisscom.ch/TS102204/ext/v1.0.0">https://www1.swisscom.ch/registration/online/app/MobileId?resetPin=true&amp;msisdn=41000092402</ns2:PortalUrl>
        </ns2:UserAssistance>
      </sc:Detail>
    </sc:MobileIDFault>
    </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f9365109-5a64-4a57-b8d5-dd9e7b7a0323" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="06 SOAP OnDemand PwdOTP (Error)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand QUA PwdOTP Invalid Pwd [asyn]" id="4438b0e8-17c8-42a9-8e39-7b71045e83f7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA PwdOTP Invalid Pwd [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
	xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
	xmlns:ais="http://service.ais.swisscom.com/" 
	xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest 
         		RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
         		Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
                        <sc:Message>Test 06: OnDemand QUA PwdOTP [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="7b55cf57-87cc-4819-9b60-b095c9bed64f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending)" id="6520e385-03c4-4c05-909c-31fc7068b8cf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP Invalid Pwd [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP Invalid Pwd [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pwd Error)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL" id="42948e73-3b59-4122-8c63-1d5d050502be"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Set Cookies" id="eeb7f2df-1f59-4401-91ad-dc07035e7957"><con:settings/><con:config><script>// You can get http "Set-Cookie"-header of the previous call
def setCookie = testRunner.testCase.testSteps["GET ConsentURL"].testRequest.response.responseHeaders["Set-Cookie"]
def re = /(JSESSIONID=.*)/ 
def matcher = ( setCookie =~ re ) 
def cookie = matcher[0][0]
 
// Iterate through all test steps and add the session cookie to the headers.
for ( tstep in testRunner.testCase.testSteps ) {
  testStepName = ( tstep.key )
  log.info testStepName  
  if (testRunner.testCase.testSteps[testStepName].name.startsWith("POST")) {	
  	testRunner.testCase.testSteps[testStepName].testRequest.requestHeaders["Cookie"] = cookie  
  } 
}</script></con:config></con:testStep><con:testStep type="transfer" name="Username" id="3a4a729c-6686-44c2-a96c-ea7c49acbb17"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>_tmpUsername</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_tmpCsrf</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Repeat POST wrong password 2 times" id="e802db9e-38a9-4fc2-aaa5-998350ff5a68"><con:settings/><con:config><script>testRunner.testCase.setPropertyValue("_tmpLoginErrorText","Remaining attempts")
for (i in 1..2) {	
	testRunner.runTestStepByName("POST WRONG password")	
}
testRunner.testCase.setPropertyValue("_tmpLoginErrorText","authentication failed")
</script></con:config></con:testStep><con:testStep type="httprequest" name="POST WRONG password" id="133a3908-c14d-4702-ae65-26035d7deeb4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST WRONG password" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:request><con:assertion type="Valid HTTP Status Codes" id="389f0e89-11d9-467c-b18f-af989476e81f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="538485e9-c6aa-40d0-8ffe-7a26525e707c" name="Script Assertion"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def response = new XmlSlurper().parseText(messageExchange.responseContentAsXml)
def expectedErrorText = messageExchange.modelItem.testStep.testCase.getPropertyValue("_tmpLoginErrorText")
log.info(response)
log.info(expectedErrorText)
if (response != null)
	assert response.toString().contains(expectedErrorText)
else
	testRunner.fail("No response received")</scriptText></con:configuration></con:assertion><con:credentials><con:password/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#wrong_password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${#TestSuite#_tmpUsername}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>${#TestSuite#_tmpCsrf}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pwd Error)" id="a818c57a-f599-4eea-bffc-81c881b4a2b1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pwd Error)" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>05c6e98e-7b78-48ab-a895-cdacb5ed7b21</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="401a2cd5-213e-4699-8dea-be44713c588a" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.1/resultminor/subsystem/StepUp/service</ResultMinor>
    <ResultMessage xml:lang="en">urn:swisscom:names:sas:1.0:status:InvalidPassword</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <ns7:StatusMessage xmlns:ns7="urn:oasis:names:tc:SAML:2.0:protocol" xmlns="http://sas.swisscom.ch/1.0/schema" xmlns:ns2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns3="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:ns5="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns6="http://ais.swisscom.ch/1.0/schema">The principal entered an invalid password too many times</ns7:StatusMessage>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA PwdOTP Invalid OTP [asyn]" id="ed140e9e-062e-490e-ae86-39ba52c128b8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA PwdOTP Invalid OTP [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
	xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
	xmlns:ais="http://service.ais.swisscom.com/" 
	xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest 
         		RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
         		Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
                        <sc:Message>Test:06 OnDemand QUA PwdOTP [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="7b55cf57-87cc-4819-9b60-b095c9bed64f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SignResponse 2 (pending)" id="844bb32f-1304-4432-bddf-97e43355fedf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP Invalid OTP [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP Invalid OTP [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (OTP Error)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 2" id="ed662293-54ae-4fa5-8df6-4f13c73b2558"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"
	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	log.info("ConsentURL is: $consentURL")

	if (consentURL != null) {
		
		def alert = com.eviware.soapui.support.UISupport;
		if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {

			if (consentURL.contains("Reset")) {
				def password1 = "Password1"
				def password2 = "Password2"

				while (password1 != password2) {
					password1 = alert.prompt("Password1","Enter Password:")
					password2 = alert.prompt("Password2","Confirm Password:")
				}
				testRunner.testCase.setPropertyValue("password", password1)

					
			} else if (consentURL.contains("Consent")) {
				password1 = alert.prompt("Password","Enter Password:")
				testRunner.testCase.setPropertyValue("password", password1)
			}
		} 

		// Define POST parameters, depending on whether this is a first registration or a password change
		if (consentURL.contains("Reset")) {
			
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(13)
			httpPostStep.setPropertyValue("Endpoint", consentURL)
			log.info(httpPostStep.getPropertyValue("Endpoint"))
			
			 
		} else if (consentURL.contains("Consent")) {
			
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(13)
			httpPostStep.setPropertyValue("Endpoint", '${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check')
			log.info(httpPostStep.getPropertyValue("Endpoint"))
		}

		//log.info("Password: " + testRunner.testCase.getPropertyValue("password"))
			
	} else {
		log.error("ConsentURL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL 2" id="d83f4c69-13a9-480f-87f0-dcd87300217e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL 2" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 2" id="1f143733-702d-4669-92c6-24e3eb44cc6e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>_tmpUsername</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_tmpCsrf</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password" id="a68cc485-e8a5-4554-a173-a95278981ab8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="389f0e89-11d9-467c-b18f-af989476e81f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e1e0ccb9-d748-4cc6-960f-540ea86ea891" name="Contains"><con:configuration><token>We just sent you a SMS with a one-time code</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${#TestSuite#_tmpUsername}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>${#TestSuite#_tmpCsrf}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 0" id="eb2c51a5-d13d-4778-81dc-2ecaa56e8f9a"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="transfer" name="OTP" id="0c4e724c-0fab-45b8-9d21-eae07a223977"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_tmpCsrf</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>_tmpUsername</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST Wrong OTP 1" id="2ebc89f0-79e8-4865-adca-fadcda140617"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST Wrong OTP 1" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d407e902-564a-4ca3-8562-75871a062f61" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="32896c63-408f-446b-88e2-f58307124dbc" name="Contains"><con:configuration><token>Remaining attempts: 2
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>000000</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${#TestSuite#_tmpUsername}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>${#TestSuite#_tmpCsrf}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST Wrong OTP 2" id="a338342c-062e-49d7-83be-2ada1adfd3f6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST Wrong OTP 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d407e902-564a-4ca3-8562-75871a062f61" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="32896c63-408f-446b-88e2-f58307124dbc" name="Contains"><con:configuration><token>Remaining attempts: 1
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>000000</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${#TestSuite#_tmpUsername}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>${#TestSuite#_tmpCsrf}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="POST Wrong OTP 3" id="4bb5ba0b-1db4-4a33-9ad0-ea4e2784f11f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST Wrong OTP 3" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="d407e902-564a-4ca3-8562-75871a062f61" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="32896c63-408f-446b-88e2-f58307124dbc" name="Contains"><con:configuration><token>The authentication failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>000000</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continue</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>${#TestSuite#_tmpUsername}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>${#TestSuite#_tmpCsrf}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (OTP Error)" id="6ffe22f0-c585-4b70-b5f5-0e67875d571d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (OTP Error)" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>a755f095-b831-4db5-8729-bfe99f79460e</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="401a2cd5-213e-4699-8dea-be44713c588a" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.1/resultminor/subsystem/StepUp/service</ResultMinor>
    <ResultMessage xml:lang="en">urn:swisscom:names:sas:1.0:status:InvalidOtp</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <ns7:StatusMessage xmlns:ns7="urn:oasis:names:tc:SAML:2.0:protocol" xmlns="http://sas.swisscom.ch/1.0/schema" xmlns:ns2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns5="http://ais.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">The principal submitted an invalid otp too many times</ns7:StatusMessage>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="httprequest" name="Invalid ConsentURL" id="5cdd2656-2318-4e03-a651-c61a35956c76"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="Invalid ConsentURL" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>Error: Invalid Transaction</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="79ca3b0a-2e65-40e9-8c3e-0d748bcdcad2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA PwdOTP Cancel [asyn]" id="578fe539-184e-4063-91f5-fb9e5bde85f4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA PwdOTP Cancel [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope 
	xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" 
	xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
	xmlns:ais="http://service.ais.swisscom.com/" 
	xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest 
         		RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" 
         		Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
			<AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
                        <sc:Message>Test 06: OnDemand QUA PwdOTP [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="7b55cf57-87cc-4819-9b60-b095c9bed64f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml="urn:oasis:names:tc:SAML:2.0:assertion";
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SignResponse 3 (pending)" id="d163a015-ef2f-4d60-b45b-709e95de2b87"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand QUA PwdOTP Cancel [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL 3" id="e77011ca-9a19-4aa9-96d7-2db2f8a1dfb6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL 3" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 3" id="17db9993-c31b-4442-9e11-cd4005186140"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 3</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_tmpCsrf</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 3</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>_tmpUsername</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GET User-Cancel" id="e0771828-c04e-4333-b883-d659bef3cf6e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="310b02f2-7e41-452c-9e67-2ab886050a01" name="GET User-Cancel" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/user-canceled/${#TestSuite#_tmpUsername}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="2d058326-319b-4a2e-9f2e-5d3090f3cc75" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:setupScript>com.eviware.soapui.impl.wsdl.support.http.HttpClientSupport.httpClient.params.setParameter( "http.protocol.allow-circular-redirects", true )</con:setupScript><con:properties><con:property><con:name>tmpConsentURL</con:name><con:value>https://ais-sas.pre.swissdigicert.ch/sas/web/ConsentURL/9126c668-b6bf-42d1-8029-59c785e74d7f</con:value></con:property><con:property><con:name>tmpOtp</con:name><con:value>218903</con:value></con:property><con:property><con:name>password</con:name><con:value>Muellerstrasse16</con:value></con:property><con:property><con:name>wrong_password</con:name><con:value>Wrong123456</con:value></con:property><con:property><con:name>username</con:name><con:value/></con:property><con:property><con:name>_tmpLoginErrorText</con:name><con:value>authentication failed</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="3c4f7cba-22c8-4b9e-85e1-4f2cd2ff6aad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="07 RESTful OnDemand MID (Error)" searchProperties="true"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID (Cancel)" id="58971395-83e5-48a2-860a-8e35490440eb"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then CANCEL the Mobile ID Request on your Mobile $myMSISDN")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand QUA MID Cancel [asyn]" id="74a38245-b4a6-4492-ba25-ee63b9b055d9"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand QUA MID Cancel [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>Test 07: XML OnDemand ADV MID Cancel [asyn] - Please CANCEL this message!</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="65e9ee4f-3a7e-410f-8663-1cbee5867351"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA MID Cancel [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Error)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA MID Cancel [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="2a6bdebc-64f6-4c40-9d26-638711d02876"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="90dbeda3-627f-4172-b098-d2380e73d28b"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>66119d40-41ab-49ed-a507-7cc57222af1a</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="b3b3326b-b78f-4fdf-837c-346d7d8815b5"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Error)" id="3e8ac761-5e27-455d-93ef-9c3fb34da161"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Error)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>66119d40-41ab-49ed-a507-7cc57222af1a</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="3db28a24-936c-4f8a-9d83-69cdfa83778f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>http://ais.swisscom.ch/1.0/resultmajor/SubsystemError</ResultMajor>
    <ResultMinor>http://ais.swisscom.ch/1.1/resultminor/subsystem/StepUp/cancel</ResultMinor>
    <ResultMessage xml:lang="en"/>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="08 RESTful OnDemand PwdOTP (Error)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cd9f68e6-c8e6-44f3-9b49-a1b0e0c390f8"><con:settings/><con:testStep type="restrequest" name="XML OnDemand QUA PwdOTP [asyn]" id="bd1adb77-01a8-4242-ae58-928170c05cde"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand QUA PwdOTP [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>   
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>${#TestSuite#MSISDN_non_MID}</sc:MSISDN>
               <sc:Message>Test 08: XML OnDemand QUA PwdOTP [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending)" id="78956300-f9b5-4cc2-adbf-57d3e0c44fc0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand QUA PwdOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';
declare namespace sas='http://sas.swisscom.ch/1.0/schema';
//xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:ConsentURL</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 1" id="5326920e-7355-4e00-9c8a-085d30800d67"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	// The TestCase property "tmpConsentURL" must be set by the test step Transfer "ConsentURL"
	def consentURL = testRunner.testCase.getPropertyValue("tmpConsentURL")
	log.info("ConsentURL is: $consentURL")

	if (consentURL != null) {
		
		def alert = com.eviware.soapui.support.UISupport;
		if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {

			if (consentURL.contains("Reset")) {
				def password1 = "Password1"
				def password2 = "Password2"

				while (password1 != password2) {
					password1 = alert.prompt("Password1","Enter Password:")
					password2 = alert.prompt("Password2","Confirm Password:")
				}
				testRunner.testCase.setPropertyValue("password", password1)

					
			} else if (consentURL.contains("Consent")) {
				password1 = alert.prompt("Password","Enter Password:")
				testRunner.testCase.setPropertyValue("password", password1)
			}
			log.info("Password: " + testRunner.testCase.getPropertyValue("password"))
		
		} 

		// Define POST parameters, depending on whether this is a first registration or a password change
		if (consentURL.contains("Reset")) {
			
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", consentURL)
			log.info(httpPostStep.getPropertyValue("Endpoint"))
			
			 
		} else if (consentURL.contains("Consent")) {
			
			// The endpoint needs to be set accordingly
			def httpPostStep = testRunner.testCase.getTestStepAt(5)
			httpPostStep.setPropertyValue("Endpoint", '${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check')
			log.info(httpPostStep.getPropertyValue("Endpoint"))
		}
			
	} else {
		log.error("ConsentURL is NULL!");		
	}

</script></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL" id="dffa1f49-d11d-480d-9699-1c6c5627d56a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>OnDemand QUA PwdOTP [asyn]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 1" id="76bcd72c-3417-4ddd-aea6-2a7bb7e6a9e7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST password 1</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST password 1</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password 1" id="c136856a-d237-4314-a092-f9edb63832f4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password 1" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="389f0e89-11d9-467c-b18f-af989476e81f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e1e0ccb9-d748-4cc6-960f-540ea86ea891" name="Contains"><con:configuration><token>Un SMS avec un code personnel vous a été envoyé</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continuer</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>abf56eda-603a-4212-86f9-af7acd6db5d2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>5070ebd0-ae7c-4b05-be68-601891611740</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 0" id="0848f90e-4fea-4c18-9071-8d14c9faf075"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 2" id="ae87158c-a208-46e7-9236-21b6a4b3e1e1"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		log.info("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			log.info(text)
			// French, German 68-74 English 67-73
			// def otp = text.substring(67, 73)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			log.info("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP 1" id="3b3bf711-c267-41b7-9cde-bcae38ef5848"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 1</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 1</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP" id="165d63f1-0df8-4196-a878-f9bb19185c48"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="da7044c9-d9c1-4096-a831-8be9ed67268b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c6e23d12-8327-40fc-86b1-134bfa44c544" name="Contains"><con:configuration><token>L'authentification a r</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>869475</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Continuer</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>abf56eda-603a-4212-86f9-af7acd6db5d2</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>fe27e2cb-1d05-4216-87c9-c0802abcae03</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="df986686-f473-44a2-b232-28bdffb3c3de"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)" id="30dadd2a-8943-49e3-80a7-b5088f3c9ba5"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>4fb8bcc0-42e7-4cb1-bc17-c7b56be56668</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="a76f5c19-b6a6-46be-87c0-d15c93a1138d" name="XPath Match" disabled="true"><con:configuration/></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="ccfe9dc2-6863-49a4-9df6-c6e690575cd7"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)" id="a02c3533-95b7-4cf7-92f7-2ab4b6043c2a"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept="" id="3dc4ba53-6b99-47fe-be27-4bfad841f029"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>4fb8bcc0-42e7-4cb1-bc17-c7b56be56668</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b9bb6d8b-37e3-4952-8072-3b6b533b68fc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="9f2e9274-a3ba-4389-9161-0070d15b0d35" disabled="true"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID=* Profile="http://ais.swisscom.ch/1.1" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject>
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand QUA PwdOTP WRONG SN [asyn]" id="9ae0c18a-498a-41b6-a540-ea8803b8c1f9"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand QUA PwdOTP WRONG SN [asyn]" mediaType="application/json" postQueryString="false" accept="" id="c3cdfec3-57ad-412f-9deb-ad82212fea5d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "http://ais.swisscom.ch/1.0/profiles/ondemandcertificate",
      "AdditionalProfile": "http://ais.swisscom.ch/1.1/profiles/redirect", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}",
        "sc.StepUpAuthorisation": {
          "sc.Phone": {
            "sc.MSISDN": "${#TestSuite#MSISDN_non_MID}",
            "sc.Message": "Test 08: JSON OnDemand Qualified PwdOTP [asyn]",
            "sc.Language": "DE",
            "sc.SerialNumber": "WRONG"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddRevocationInformation": {"@Type": "BOTH"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="fe8b1a37-5e76-4372-a796-57ffbd3b780e"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="00b7d79a-555f-47bd-9f45-5f1e348145f7" disabled="true"><con:configuration><path>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="http://ais.swisscom.ch/1.1" RequestID="*" xmlns="${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="SignResponse (pending) 2" id="dfda34d9-804e-484f-9bfc-edcf4ed5e121"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand QUA PwdOTP WRONG SN [asyn]</con:sourceStep><con:sourcePath>$.SignResponse.OptionalOutputs.['async.ResponseID']</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ConsentURL</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>JSON OnDemand QUA PwdOTP WRONG SN [asyn]</con:sourceStep><con:sourcePath>$.SignResponse.OptionalOutputs.['sc.StepUpAuthorisationInfo'].['sc.Result'].['sc.ConsentURL']</con:sourcePath><con:targetType>tmpConsentURL</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="GET ConsentURL 2" id="38edbcb4-d3ed-4196-b275-09bc7f3f0b27"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="2f5fd793-a368-4a36-b26f-8cd374574053" name="GET ConsentURL 2" downloadIncludedResources="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#tmpConsentURL}</con:endpoint><con:request/><con:assertion type="Simple Contains" id="f32a2b25-f9ad-4556-8b4b-3b92dfb11313" name="Contains"><con:configuration><token>JSON OnDemand Qualified PwdOTP</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="297bab94-48f9-42a9-be8e-f03959052ef1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Username 2" id="719ba475-c9fa-4f22-89eb-d75cb092c016"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST password 2</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET ConsentURL 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST password 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST password 2" id="b0a0cfc2-4c9a-4ed6-a224-5b66d287828a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST password 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/ConsentURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="389f0e89-11d9-467c-b18f-af989476e81f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="e1e0ccb9-d748-4cc6-960f-540ea86ea891" name="Contains"><con:configuration><token>Wir haben Ihnen soeben per SMS einen Einmal-Code gesendet</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Weiter</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>02b22552-bfe5-41c2-a920-5e0fa9d71cc4</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>1d9207c5-f084-4844-af3d-41606319913c</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>password-confirm</con:name><con:value>${#TestCase#password}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="f929d8aa-6599-4184-a66f-d9a78bde1820"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="User Alert PwdOTP 3" id="400ef4da-ec5b-4e9b-b4f6-aabce9f4585e"><con:settings/><con:config><script>import com.eviware.soapui.support.*

			
	def alert = com.eviware.soapui.support.UISupport;
	
	if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT_PwdOTP") == "true" ) {
		def password = alert.prompt("OTP","Enter OTP:")
		testRunner.testCase.setPropertyValue("tmpOTP", password)
		log.info("Password: " + testRunner.testCase.getPropertyValue("tmpOTP"))
	
	} else {

		// Get user's desktop
		String desktop = System.getProperty("user.home") + "/Desktop"
		String filepath = desktop + "/otp.txt"
	
		def file = new File(filepath)
		
		if (file.exists()) {
			def text = file.text
			log.info(text)
			// French, German 68-74 English 67-73
			// def otp = text.substring(67, 73)
			def otp = text
			testRunner.testCase.setPropertyValue("tmpOtp", otp)
			log.info("OTP=" + otp)
	
		} else {
			log.error("File does not exist!")
		}
	}
</script></con:config></con:testStep><con:testStep type="transfer" name="OTP 2" id="1e6e6ee3-2812-470b-903f-72e55913a943"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>csrf</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="_csrf"]/@value</con:sourcePath><con:targetType>_csrf</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST password 2</con:sourceStep><con:sourcePath>//html/body/div/form[@name="loginForm"]/input[@name="username"]/@value</con:sourcePath><con:targetType>username</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>otp</con:name><con:sourceType>tmpOtp</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:sourcePath/><con:targetType>password</con:targetType><con:targetStep>POST OTP 2</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="POST OTP 2" id="a24e27f6-bce9-4aa2-b0f0-d5ac79a7f257"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="0f1d0cfa-bf28-44ba-b32f-ff176a0e0ee2" name="POST OTP 2" postQueryString="true" mediaType="application/x-www-form-urlencoded" downloadIncludedResources="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#TestSuite#BASEURL_CONSENT}/sas/web/OtpURL/j_spring_security_check</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="da7044c9-d9c1-4096-a831-8be9ed67268b" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="c6e23d12-8327-40fc-86b1-134bfa44c544" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>062596</con:value><con:style>QUERY</con:style><con:default>${#TestCase#password}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>submit</con:name><con:value>Weiter</con:value><con:style>QUERY</con:style><con:default>Continue</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>username</con:name><con:value>02b22552-bfe5-41c2-a920-5e0fa9d71cc4</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>_csrf</con:name><con:value>c16b2fd0-cdfd-4031-8d4d-0fdae9f2d02e</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 3" id="b8227875-3f2b-4bc2-9502-5b01da617f20"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)" id="8824eafc-3684-4eb9-a8a2-30ad5557015e"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="a72b3568-3380-44d0-8242-b5fab1409bbe"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='${#TestSuite#BASEURL}${#TestSuite#PATH_REST}/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 3</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)" id="500d1c8b-4497-4131-81c2-d7df8da7c712"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="${#TestSuite#PATH_REST}/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept="" id="69a09e12-9778-4674-901e-f10de4c1ecd0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Cookie" value="AL_ENV_SSL_CLIENT_CERT=${#TestSuite#AL_ENV_SSL_CLIENT_CERT}"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "http://ais.swisscom.ch/1.1",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="198bb45d-ffce-4245-a01f-5ad4cd01301b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2" id="7de2dc2f-e4fc-412e-83c1-3adf2571aaee"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Final)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

def resultMajor = 'http://ais.swisscom.ch/1.0/resultmajor/SubsystemError'
def resultMinor = 'http://ais.swisscom.ch/1.1/resultminor/subsystem/StepUp/SerialNumberMismatch'

if ( json."SignResponse"."Result"."ResultMajor" != resultMajor ) {
	testRunner.fail("ResultMajor was not successful")
	return
} else {
	log.info("ResultMajor check succeeded.")
}


if ( json."SignResponse"."Result"."ResultMinor" != resultMinor ) {
	testRunner.fail("ResultMinor was not successful")
	return
} else {
	log.info("ResultMinor check succeeded.")
}


</script></con:config></con:testStep><con:properties><con:property><con:name>tmpConsentURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://ais-sas.pre.swissdigicert.ch/sas/web/ConsentURL/02b22552-bfe5-41c2-a920-5e0fa9d71cc4</con:value></con:property><con:property><con:name>password</con:name><con:value>Muellerstrasse16</con:value></con:property><con:property><con:name>tmpOtp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">062596</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase id="0f2155c7-35c1-4fad-acb2-f0fb93dd95a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="09 RESTful OnDemand MID Error Fallback to OTP" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="XML OnDemand 1 MID PinNrBlocked [asyn]" id="4171b694-b460-4244-ac2a-ff289d23dc20"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand 1 MID PinNrBlocked [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>41000092402</sc:MSISDN>
               <sc:Message>Test 09: XML OnDemand ADV MID PinNrBlocked [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="c8a3d8de-69af-420b-9775-7fd16d62405b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand 1 MID PinNrBlocked [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID 1 (IsValidConsentURL)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="0e86a684-f02d-42ec-9e21-763d98e51b04"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID 1 (IsValidConsentURL)" id="3f9445d1-9364-421a-8f04-62f0fa88cf83"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID 1 (IsValidConsentURL)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>92e40e9c-5995-45ee-95e1-9ebad822d214</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="3db28a24-936c-4f8a-9d83-69cdfa83778f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns4:ResponseID xmlns:ns4="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://www.w3.org/2000/09/xmldsig#" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns3="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns4:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand 2 MID CardBlocked [asyn]" id="61315541-8978-459c-a8ee-1e96a126eab4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand 2 MID CardBlocked [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>41000092403</sc:MSISDN>
               <sc:Message>Test 09: XML OnDemand ADV MID CardBlocked [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 2" id="ebccd8b8-04dd-4ad7-9a77-45a25d47f35e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand 2 MID CardBlocked [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID 2 (IsValidConsentURL)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="4eeb3e13-ec43-402c-a51b-f08d2d13c98e"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID 2 (IsValidConsentURL)" id="ca324697-895f-4189-9173-8810e0fac9d4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID 2 (IsValidConsentURL)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>9343cdbc-29c1-4f3e-a3f2-de43672a4c01</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="3db28a24-936c-4f8a-9d83-69cdfa83778f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns4:ResponseID xmlns:ns4="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://www.w3.org/2000/09/xmldsig#" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns3="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns4:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand 3 MID NoKeyFound [asyn]" id="0822f9fd-906b-4066-bcc8-4f04b57dd56b"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand 3 MID NoKeyFound [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>41000092404</sc:MSISDN>
               <sc:Message>Test 09: XML OnDemand ADV MID NoKeyFound [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 3" id="c944d122-d580-4e15-a28c-3ec2061c99b3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand 3 MID NoKeyFound [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID 3 (IsValidConsentURL)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 3" id="26745c76-2079-4db9-a81f-2f5041999244"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID 3 (IsValidConsentURL)" id="268af49c-571b-45c1-8b85-2c07b9e112ac"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID 3 (IsValidConsentURL)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>15e7a38d-9fa6-4cd8-8ecb-031ab14f5ddf</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="3db28a24-936c-4f8a-9d83-69cdfa83778f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns4:ResponseID xmlns:ns4="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://www.w3.org/2000/09/xmldsig#" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns3="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns4:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="108f0649-5ea8-4a2d-bf77-7234ad772cbe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="10 RESTful OnDemand Only PWDOTP with MID-active (no MID)" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="XML OnDemand PWDOTP [asyn]" id="694acb0a-501e-4d34-9866-dd6af8e8b7ea"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand PWDOTP [asyn]" mediaType="application/xml" postQueryString="false" accept="" id="c729b9f2-c24f-411d-a112-8b4d63398d8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>IAM-Test-PWDOTP:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.1/profiles/redirect</AdditionalProfile> 
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:Phone>
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>Test 10: XML OnDemand Only PWDOTP with MID-active (no MID) [asyn]</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:Phone>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
     <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="44e15d5d-b2ef-48c7-af45-1494c07dc1cc"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="429b6e59-6417-412d-bbde-05e520f835e9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="e209d03d-cea2-442b-a56d-0e2101954a5e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand PWDOTP [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID 1 (IsValidConsentURL)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://ais.swisscom.ch/1.0/schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="353b44e8-de64-464d-97a7-94cb177a2027"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID 1 (IsValidConsentURL)" id="a7da9f2b-9633-4366-a44e-ea5c619db251"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID 1 (IsValidConsentURL)" mediaType="application/xml" postQueryString="false" accept="" id="d54a620f-092c-45e5-a212-9a8e2db9abe4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>IAM-Test-PWDOTP</Name>
        </ClaimedIdentity>
        <async:ResponseID>1d174948-f53a-4b3e-a2ba-06877350b208</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/pending</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="435bfc39-e5a8-4070-bbc3-3a31b38fdef1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" id="3db28a24-936c-4f8a-9d83-69cdfa83778f" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns4:ResponseID xmlns:ns4="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://www.w3.org/2000/09/xmldsig#" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns3="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns4:ResponseID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:ConsentURL>*</sc:ConsentURL>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>BASEURL</con:name><con:value>https://ais.pre.swissdigicert.ch</con:value></con:property><con:property><con:name>PATH_SOAP</con:name><con:value>/AIS-Server/ws</con:value></con:property><con:property><con:name>PATH_REST</con:name><con:value>/AIS-Server/rs/v1.0</con:value></con:property><con:property><con:name>AP_ID</con:name><con:value>IAM-Test</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp1-iam-signer</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>OnDemand-Qualified</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>41797973649</con:value></con:property><con:property><con:name>MSISDN_non_MID</con:name><con:value>41794372986</con:value></con:property><con:property><con:name>OnDemand_CN</con:name><con:value>Robert van Haarlem</con:value></con:property><con:property><con:name>OnDemand_O</con:name><con:value>Swisscom (Schweiz) AG</con:value></con:property><con:property><con:name>OnDemand_C</con:name><con:value>CH</con:value></con:property><con:property><con:name>USER_ALERT</con:name><con:value>true</con:value></con:property><con:property><con:name>SHA1</con:name><con:value>http://www.w3.org/2000/09/xmldsig#sha1</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_1</con:name><con:value>C+7Hteo/D9vJXQ3UfzxbwnXaijM=</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>_tmp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">36919658-d377-4869-a51f-30044978194b</con:value></con:property><con:property><con:name>_tmp_MIDSerialNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>USER_ALERT_PwdOTP</con:name><con:value>true</con:value></con:property><con:property><con:name>BASEURL_CONSENT</con:name><con:value>https://ais-sas.pre.swissdigicert.ch</con:value></con:property><con:property><con:name>_tmpUsername</con:name><con:value/></con:property><con:property><con:name>_tmpCsrf</con:name><con:value/></con:property><con:property><con:name>_tmpLoginErrorText</con:name><con:value>Remaining attempts: 1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="ff18b131-5507-4879-8d36-d1cce13cb3b3" name="Regression Test Suite (eIDAS)"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 SOAP OnDemand-ADV-EU" searchProperties="true" id="9c5448ad-6dbf-4f4d-a387-1541d5d37db9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand ADV SHA1 [syn]" id="76003955-df52-48d2-a889-493569cd7a0e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV SHA1 [syn]" id="c59b98b0-3697-4952-bd18-dfa39dfb2652"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA1}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_1}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f37d7c24-f52f-4655-b579-d46296a69631"/><con:assertion type="XPath Match" name="XPath Match" id="49c34bb3-5431-4968-be36-3c6866920d41"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="1c4da229-3700-4cec-86c1-64a22f1275e4"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV [syn]" id="71ae6cbc-01d1-40a8-883d-51690ef17609"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV [syn]" id="6a776ff1-d613-4204-86dc-5ec36165947c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="6f5a0990-7a31-49c4-8579-ec62bc473584"/><con:assertion type="XPath Match" name="XPath Match" id="d58c5218-e900-4b9a-8ffc-ff33e44506ba"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="ae68dc05-8bf0-4bf7-b589-82635847d074"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [syn]" id="6367252c-38db-45f6-a37d-f24bfa2b805d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [syn]" id="be3210bf-844e-4b59-ac0e-8167ce1b9cb4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2c00b5ec-f01e-4a31-b45c-2ce9994b078f"/><con:assertion type="XPath Match" name="XPath Match" id="96090e95-84a9-49f1-b6c1-c35601454bbf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" id="4c671810-8f49-40d9-80e2-baf439139aec" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [asyn]" id="eb5a4b22-6d23-4460-81bc-963321c6972b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [asyn]" id="d2c8a179-ccd9-442c-885d-0ce323748bbd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9d1ab4a4-85a1-40f1-ad77-7a2bc9c2d50d"/><con:assertion type="XPath Match" name="XPath Match" id="fdac1ee2-cf26-4207-a390-f5806bf12ebf"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="4a6f64e2-c464-421a-ba23-339a05e49c2a"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="0e8098ea-b5aa-41c8-9114-b7cfbb94d223"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="ebf63dc8-a9e9-4305-af79-307a7485b007"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="0a8a697e-18e2-491a-a001-e897ebd3380a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)" id="399d3567-6424-4e38-9553-2ff3f05eb048"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>7f346703-b73b-4f58-b491-aaa100318046</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a4b31209-9338-46f3-af4b-e133ea0bbe9f"/><con:assertion type="Schema Compliance" name="Schema Compliance" id="be64ab8c-4c6b-45bd-9f1f-4bca9b87fb0b" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="453008c9-af3e-4014-bec8-0a927db9fe5a"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="a6f2c307-1505-44e2-83ad-a238fc237428"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)" id="18c5097e-96f3-44a0-9c3a-46dc2f7efeda"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>7f346703-b73b-4f58-b491-aaa100318046</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bd75482c-f09c-4ff2-aee1-ce9f68fba634"/><con:assertion type="XPath Match" name="XPath Match" id="4e2afc9f-73f7-4219-bac4-3de16cbdfac4"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="e19877bf-b058-40f0-878c-77c43c899fb4"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV DN-Special-Chars [syn]" id="87df60e5-7e03-4813-8cca-3bd25bff14e1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV DN-Special-Chars [syn]" id="82b3dcb9-7565-4272-a62d-a186c5b44665"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ôèùçæ, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="77f6654b-c26c-4783-a3fa-547cbeafa4dc"/><con:assertion type="XPath Match" name="XPath Match" id="bad7279f-f179-4708-ba6e-fd85b2bc1a0c"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true" id="06ae628b-0912-426d-8781-ff9ec065a68e"><con:configuration><definition/></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9e1aa311-fba6-46b7-90d8-f24ac754561b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="02 SOAP OnDemand-QUAL-EU" searchProperties="true"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1" id="13e142ab-11a1-4208-b5c3-6c8a2082cef6"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID QUA [asyn]" id="d1276f98-f158-4f8c-a5c1-948ba5ae4681"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA [asyn]" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Test 01: OnDemand QUA MID [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="792392fb-d942-49e8-9409-8e3d79d64ea7" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ResponseID" id="6a5beddb-23ee-4a93-823b-93ee9aeabdd1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="04e44511-bd53-4d64-9cf0-564d1c51caeb"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="1de62086-3aa0-47f8-9775-4ce4ff23e749"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending)" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>77bf09ad-d6a5-4f5c-8b10-62845c3eb4a1</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="82e07840-a6b9-4415-9bbc-64d93f06f68f" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://ais.swisscom.ch/1.0/schema" xmlns:ns5="http://sas.swisscom.ch/1.0/schema" xmlns:ns6="urn:oasis:names:tc:SAML:2.0:assertion">*</ns3:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="f99c45b7-d70b-4a52-a5ef-b5bc40ebaae3"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="ac7c98fe-fbc2-47eb-afd4-6c2a22af756a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final)" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>77bf09ad-d6a5-4f5c-8b10-62845c3eb4a1</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="76b6a9dd-7b41-4545-a6c0-794d95209a02" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="SerialNumber" id="22476de7-202b-4176-b41f-b77556ac3bc7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>SerialNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Poll RequestID (Final)</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse/xmlns:OptionalOutputs/sc:StepUpAuthorisationInfo/sc:Result/sc:SNofDN</con:sourcePath><con:targetType>_tmp_MIDSerialNumber</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2" id="d878538d-8963-44d9-9740-5c1d805c86ce"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
if (testRunner.testCase.testSuite.getPropertyValue("USER_ALERT") == "true" ) {
	def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
	alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")
}

</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID QUA [asyn] SN" id="a737d6e3-37b1-4c77-8ffe-a19a3c179a93"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID QUA [asyn] SN" id="784d7c44-bcda-4ae5-8882-f1acc5be316a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.1">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED_EU}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
			<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN}, o=${#TestSuite#OnDemand_O}, ou=Certificate and signatures for test purpose only, c=${#TestSuite#OnDemand_C}, SerialNumber=57358</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:Phone>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Test 01: OnDemand QUA MID [asyn]</sc:Message>
                        <sc:Language>en</sc:Language>
                        <sc:SerialNumber>${#TestSuite#_tmp_MIDSerialNumber}</sc:SerialNumber>
                     </sc:Phone>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddRevocationInformation Type="BOTH"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c13f11bf-2096-4d82-923f-6824e505035c"/><con:assertion type="Schema Compliance" id="f45069c2-be74-4ad7-ac77-62af251b06c7" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="7afd394b-77a0-4761-894c-9e51255ba020"/><con:assertion type="XPath Match" id="2e1a6f7e-91b1-428a-8ba8-c88e8611eabb" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="ResponseID 2" id="1dba88fd-21ba-40fd-ade7-89161ffde351"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn] SN</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending) SN</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ResponseID (final)</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID QUA [asyn] SN</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final) SN</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2" id="6045751a-0fda-4301-8eee-d893189d51e7"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending) SN" id="b7e7a105-eabb-4cb6-9503-2e9d323e7d25"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Pending) SN" id="1397e4c1-6690-45b2-afe3-e701b48a3b8a" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>14dc7f74-7772-4b19-b662-21ad2336194d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="3e4c7327-629d-4682-a9b8-fcb1b9d1dd46"/><con:assertion type="Schema Compliance" id="1d64735f-1fdb-4291-9aaa-789cd56b452d" disabled="true"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion" id="e1798293-ebff-4667-ae9b-8e8e944d3248"/><con:assertion type="XPath Match" id="6425517a-9f04-4949-ad05-729c06ee2959" name="XPath Match" disabled="true"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns5:ResponseID xmlns:ns5="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="http://sas.swisscom.ch/1.0/schema" xmlns:ns2="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:ns3="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#" xmlns:ns6="http://ais.swisscom.ch/1.0/schema">*</ns5:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2" id="9ef2934a-7152-464e-83dc-64f3bd7bc21a"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final) SN" id="f275e8d2-a7e6-43b0-96ac-949cfa1591bf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AisServiceSoapBinding</con:interface><con:operation>pending</con:operation><con:request name="Poll RequestID (Final) SN" id="31ffb218-c9ad-4217-9add-876912f97337" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}${#TestSuite#PATH_SOAP}</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="http://ais.swisscom.ch/1.1" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>14dc7f74-7772-4b19-b662-21ad2336194d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c96748d7-2c72-4e84-acf8-5b1a8731f21a"/><con:assertion type="Schema Compliance" id="5b2034e1-abdf-4972-817b-5d1372770e87" disabled="true"><con:configuration><definition>C:\Users\TAARAEV1\dev\ais\AIS-master\services\pwdotp\wsdl\aisService-compact.wsdl</definition></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion" id="7bd04419-7d2d-4218-abc7-2d9cf3cda46c"/><con:assertion type="XPath Match" id="e9c37de0-3f9a-462f-b72d-97240536926b" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
declare namespace sas="http://sas.swisscom.ch/1.0/schema";
declare namespace saml='urn:oasis:names:tc:SAML:2.0:assertion'

//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.1" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="http://ais.swisscom.ch/1.0/schema" xmlns:sas="http://sas.swisscom.ch/1.0/schema" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:APTransID>*</sc:APTransID>
    <sc:StepUpAuthorisationInfo>
      <sc:Result>
        <sc:SerialNumber>*</sc:SerialNumber>
      </sc:Result>
    </sc:StepUpAuthorisationInfo>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>NTLM</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>NTLM</con:addedBasicAuthenticationTypes><con:authType>NTLM</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>AP_ID</con:name><con:value>AIS-qcEUesign</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>BASEURL</con:name><con:value>https://ais.pre.swissdigicert.ch</con:value></con:property><con:property><con:name>PATH_SOAP</con:name><con:value>/AIS-Server/ws</con:value></con:property><con:property><con:name>PATH_REST</con:name><con:value>/AIS-Server/rs/v1.0</con:value></con:property><con:property><con:name>AP_ID</con:name><con:value>IAM-Test</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp1-iam-signer</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>OnDemand-Qualified</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED_EU</con:name><con:value>OnDemand-Advanced-EU</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED_EU</con:name><con:value>OnDemand-Qualified-EU</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>41797973649</con:value></con:property><con:property><con:name>MSISDN_non_MID</con:name><con:value>41794372986</con:value></con:property><con:property><con:name>OnDemand_CN</con:name><con:value>Robert van Haarlem</con:value></con:property><con:property><con:name>OnDemand_O</con:name><con:value>Swisscom (Schweiz) AG</con:value></con:property><con:property><con:name>OnDemand_C</con:name><con:value>CH</con:value></con:property><con:property><con:name>USER_ALERT</con:name><con:value>true</con:value></con:property><con:property><con:name>SHA1</con:name><con:value>http://www.w3.org/2000/09/xmldsig#sha1</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_1</con:name><con:value>C+7Hteo/D9vJXQ3UfzxbwnXaijM=</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>_tmp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">038625f2-6aff-4a73-b06a-af336588884c</con:value></con:property><con:property><con:name>_tmp_MIDSerialNumber</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>USER_ALERT_PwdOTP</con:name><con:value>true</con:value></con:property><con:property><con:name>BASEURL_CONSENT</con:name><con:value>https://ais-sas.pre.swissdigicert.ch</con:value></con:property><con:property><con:name>_tmpUsername</con:name><con:value>9126c668-b6bf-42d1-8029-59c785e74d7f</con:value></con:property><con:property><con:name>_tmpCsrf</con:name><con:value>d52dab5f-2a61-4692-9e7e-77a310ef7d96</con:value></con:property><con:property><con:name>_tmpLoginErrorText</con:name><con:value>Remaining attempts: 1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Regression Test Suite Loop" id="b644b4b9-d3e0-4a5e-a058-57163dec9ecc"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Run TestSuite" searchProperties="true" id="ea2dfa5b-352d-44ac-ae3a-f7ba5b58218b"><con:settings/><con:testStep type="groovy" name="Run TestSuite" id="7bea5a02-4b87-469a-8a92-cddca2ef3269"><con:settings/><con:config><script>import com.eviware.soapui.support.types.StringToObjectMap;
def targetTestSuite = "Regression Test Suite"

log.info "When we execute "+targetTestSuite
project = testRunner.getTestCase().testSuite.getProject()
contextMap = new StringToObjectMap( context )
project.getTestSuiteByName(targetTestSuite).run( contextMap, false )</script></con:config></con:testStep><con:loadTest name="Loop" id="3387cc9d-2b98-4739-939d-3105ae5dd490"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Benchmark" id="15d99308-bc24-48a4-9a76-c3d70965262d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 Timestamp" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3fdb13ca-7a68-4e66-8324-c0060e2cdf6d"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Timestamp" id="9b1ebf1b-680a-4e3d-b2fa-71e6c41cb2c5"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Timestamp" mediaType="application/xml" postQueryString="false" accept="" id="700cb59b-16e7-4a36-bbcd-0eb3aa1c15af"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSSZ')}${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="6bf91c01-c4f6-4b02-8295-883e06477f3a"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d91a6bdf-d24f-4b3a-b1a8-645a2b888a27"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0b96f811-3d7a-4895-be5d-204c13140316"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}
  </scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="01 Timestamp 1T100" id="51997aba-c605-4263-bc88-fd9d372dcc82"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>100</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="01 Timestamp 1T1000" id="c144fe1c-d7e4-4757-969d-3a7d2ccbb2e8"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="01 Timestamp 1T10000" id="e32494a6-2e8f-4bd1-a3f1-206f80b2aeb9"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="01 Timestamp 10T10" id="41e913b3-4c4b-47e0-ab40-5ba2575210bd"><con:settings><con:setting id="HttpSettings@close-connections">false</con:setting><con:setting id="HttpSettings@include_request_in_time_taken">false</con:setting><con:setting id="HttpSettings@include_response_in_time_taken">false</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>false</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="01 Timestamp 100T10" id="979422b5-068d-4c81-b261-54b67cf7818c"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="01 Timestamp 500T20" id="6e1a061a-7b5c-453e-b018-21f2f15d4013"><con:settings/><con:threadCount>500</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="02 Timestamp Batch10" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1df7c65b-637c-4382-898f-a3000ac07c58"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Timestamp Batch10" id="12cfc56f-5654-47f4-ad1f-4554ad60e1d8"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Timestamp Batch10" mediaType="application/xml" postQueryString="false" accept="" id="0a5a7f2c-0b2a-4cf0-8338-9b03cc1ea118"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSSZ')}${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3a58dfab-3408-4e3c-bfa8-def45a06f031"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="844934d8-2cc7-47ed-aef0-9460c0fa6f87"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="49e77025-d21d-48e7-8332-5194ca44ed6a"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="02 Timestamp 1T10" id="36a302fb-486c-4559-bd06-4a9eaa850209"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="02 Timestamp 10T10" id="dd82648c-20d1-4318-b06d-b4db53b8cce4"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="03 Timestamp Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="93f5a5cc-10b1-4603-aa72-d62b2625f1d6"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Timestamp Batch100" id="247dfd0d-1630-4c97-b49b-ffd6fd771a75"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Timestamp Batch100" mediaType="application/xml" postQueryString="false" accept="" id="77bc745f-05b9-4c8e-a926-272a0eb352a7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSSZ')}${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="cad70109-a195-4443-a86a-c4cbfb14a526"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a724166b-fda1-4268-96f2-6c2d03706a5e"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="92e1cdba-c972-44dd-93bd-962101ba768c"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="03 Timestamp 1T10" id="10451f21-db38-4b71-bf1d-3e3eec02fbb3"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="03 Timestamp 10T10" id="375fcf50-df28-4564-9874-f485f9596fff"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="04 Timestamp Batch1000" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="66552493-9b14-43b9-acbb-01f48ff25029"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Timestamp Batch1000" id="99acca53-0c8e-4ef6-8dff-b2caa5f01bc9"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Timestamp Batch1000" mediaType="application/xml" postQueryString="false" accept="" id="c8849883-6832-4f93-b1bc-b4c46baf0d56"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSSZ')}${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0101">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0102">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0103">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0104">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0105">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0106">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0107">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0108">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0109">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0110">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0111">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0112">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0113">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0114">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0115">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0116">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0117">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0118">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0119">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0120">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0121">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0122">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0123">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0124">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0125">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0126">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0127">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0128">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0129">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0130">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0131">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0132">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0133">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0134">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0135">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0136">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0137">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0138">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0139">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0140">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0141">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0142">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0143">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0144">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0145">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0146">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0147">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0148">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0149">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0150">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0151">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0152">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0153">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0154">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0155">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0156">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0157">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0158">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0159">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0160">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0161">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0162">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0163">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0164">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0165">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0166">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0167">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0168">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0169">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0170">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0171">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0172">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0173">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0174">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0175">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0176">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0177">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0178">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0179">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0180">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0181">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0182">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0183">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0184">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0185">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0186">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0187">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0188">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0189">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0190">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0191">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0192">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0193">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0194">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0195">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0196">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0197">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0198">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0199">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0200">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0201">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0202">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0203">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0204">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0205">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0206">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0207">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0208">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0209">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0210">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0211">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0212">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0213">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0214">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0215">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0216">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0217">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0218">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0219">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0220">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0221">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0222">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0223">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0224">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0225">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0226">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0227">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0228">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0229">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0230">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0231">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0232">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0233">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0234">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0235">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0236">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0237">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0238">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0239">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0240">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0241">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0242">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0243">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0244">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0245">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0246">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0247">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0248">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0249">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0250">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0251">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0252">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0253">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0254">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0255">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0257">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0258">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0259">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0260">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0261">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0262">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0263">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0264">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0265">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0266">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0267">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0268">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0269">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0270">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0271">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0272">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0273">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0274">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0275">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0276">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0277">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0278">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0279">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0280">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0281">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0282">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0283">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0284">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0285">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0286">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0287">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0288">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0289">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0290">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0291">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0292">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0293">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0294">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0295">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0296">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0297">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0298">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0299">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0300">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0301">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0302">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0303">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0304">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0305">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0306">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0307">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0308">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0309">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0310">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0311">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0312">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0313">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0314">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0315">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0316">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0317">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0318">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0319">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0320">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0321">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0322">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0323">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0324">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0325">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0326">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0327">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0328">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0329">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0330">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0331">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0332">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0333">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0334">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0335">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0336">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0337">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0338">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0339">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0340">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0341">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0342">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0343">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0344">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0345">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0346">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0347">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0348">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0349">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0350">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0351">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0352">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0353">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0354">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0355">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0356">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0357">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0358">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0359">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0360">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0361">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0362">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0363">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0364">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0365">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0366">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0367">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0368">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0369">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0370">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0371">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0372">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0373">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0374">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0375">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0376">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0377">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0378">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0379">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0380">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0381">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0382">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0383">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0385">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0386">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0387">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0388">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0389">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0390">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0391">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0392">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0393">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0394">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0395">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0396">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0397">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0398">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0399">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0400">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0401">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0402">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0403">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0404">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0405">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0406">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0407">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0408">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0409">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0410">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0411">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0412">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0413">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0414">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0415">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0416">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0417">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0418">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0419">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0420">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0421">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0422">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0423">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0424">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0425">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0426">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0427">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0428">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0429">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0430">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0431">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0432">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0433">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0434">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0435">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0436">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0437">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0438">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0439">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0440">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0441">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0442">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0443">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0444">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0445">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0446">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0447">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0448">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0449">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0450">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0451">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0452">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0453">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0454">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0455">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0456">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0457">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0458">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0459">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0460">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0461">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0462">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0463">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0464">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0465">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0466">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0467">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0468">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0469">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0470">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0471">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0472">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0473">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0474">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0475">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0476">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0477">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0478">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0479">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0480">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0481">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0482">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0483">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0484">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0485">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0486">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0487">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0488">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0489">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0490">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0491">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0492">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0493">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0494">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0495">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0496">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0497">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0498">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0499">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0500">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0501">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0502">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0503">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0504">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0505">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0506">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0507">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0508">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0509">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0510">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0511">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0513">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0514">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0515">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0516">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0517">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0518">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0519">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0520">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0521">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0522">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0523">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0524">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0525">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0526">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0527">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0528">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0529">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0530">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0531">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0532">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0533">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0534">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0535">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0536">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0537">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0538">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0539">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0540">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0541">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0542">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0543">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0544">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0545">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0546">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0547">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0548">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0549">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0550">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0551">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0552">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0553">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0554">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0555">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0556">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0557">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0558">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0559">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0560">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0561">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0562">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0563">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0564">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0565">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0566">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0567">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0568">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0569">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0570">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0571">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0572">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0573">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0574">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0575">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0576">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0577">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0578">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0579">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0580">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0581">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0582">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0583">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0584">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0585">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0586">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0587">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0588">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0589">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0590">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0591">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0592">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0593">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0594">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0595">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0596">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0597">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0598">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0599">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0600">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0601">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0602">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0603">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0604">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0605">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0606">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0607">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0608">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0609">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0610">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0611">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0612">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0613">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0614">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0615">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0616">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0617">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0618">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0619">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0620">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0621">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0622">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0623">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0624">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0625">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0626">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0627">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0628">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0629">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0630">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0631">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0632">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0633">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0634">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0635">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0636">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0637">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0638">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0639">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0640">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0641">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0642">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0643">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0644">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0645">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0646">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0647">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0648">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0649">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0650">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0651">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0652">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0653">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0654">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0655">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0656">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0657">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0658">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0659">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0660">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0661">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0662">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0663">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0664">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0665">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0666">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0667">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0668">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0669">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0670">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0671">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0672">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0673">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0674">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0675">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0676">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0677">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0678">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0679">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0680">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0681">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0682">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0683">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0684">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0685">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0686">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0687">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0688">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0689">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0690">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0691">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0692">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0693">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0694">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0695">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0696">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0697">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0698">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0699">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0700">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0701">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0702">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0703">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0704">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0705">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0706">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0707">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0708">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0709">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0710">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0711">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0712">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0713">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0714">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0715">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0716">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0717">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0718">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0719">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0720">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0721">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0722">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0723">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0724">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0725">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0726">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0727">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0728">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0729">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0730">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0731">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0732">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0733">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0734">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0735">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0736">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0737">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0738">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0739">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0740">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0741">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0742">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0743">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0744">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0745">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0746">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0747">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0748">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0749">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0750">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0751">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0752">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0753">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0754">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0755">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0756">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0757">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0758">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0759">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0760">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0761">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0762">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0763">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0764">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0765">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0766">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0767">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0768">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0769">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0770">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0771">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0772">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0773">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0774">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0775">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0776">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0777">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0778">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0779">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0780">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0781">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0782">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0783">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0784">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0785">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0786">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0787">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0788">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0789">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0790">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0791">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0792">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0793">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0794">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0795">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0796">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0797">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0798">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0799">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0800">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0801">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0802">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0803">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0804">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0805">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0806">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0807">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0808">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0809">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0810">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0811">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0812">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0813">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0814">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0815">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0816">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0817">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0818">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0819">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0820">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0821">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0822">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0823">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0824">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0825">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0826">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0827">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0828">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0829">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0830">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0831">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0832">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0833">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0834">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0835">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0836">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0837">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0838">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0839">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0840">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0841">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0842">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0843">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0844">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0845">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0846">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0847">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0848">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0849">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0850">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0851">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0852">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0853">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0854">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0855">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0856">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0857">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0858">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0859">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0860">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0861">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0862">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0863">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0864">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0865">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0866">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0867">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0868">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0869">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0870">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0871">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0872">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0873">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0874">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0875">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0876">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0877">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0878">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0879">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0880">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0881">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0882">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0883">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0884">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0885">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0886">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0887">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0888">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0889">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0890">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0891">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0892">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0893">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0894">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0895">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0896">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0897">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0898">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0899">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0900">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0901">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0902">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0903">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0904">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0905">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0906">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0907">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0908">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0909">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0910">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0911">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0912">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0913">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0914">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0915">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0916">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0917">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0918">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0919">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0920">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0921">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0922">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0923">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0924">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0925">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0926">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0927">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0928">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0929">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0930">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0931">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0932">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0933">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0934">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0935">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0936">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0937">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0938">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0939">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0940">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0941">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0942">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0943">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0944">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0945">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0946">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0947">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0948">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0949">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0950">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0951">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0952">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0953">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0954">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0955">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0956">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0957">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0958">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0959">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0960">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0961">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0962">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0963">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0964">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0965">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0966">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0967">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0968">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0969">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0970">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0971">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0972">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0973">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0974">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0975">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0976">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0977">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0978">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0979">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0980">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0981">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0982">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0983">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0984">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0985">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0986">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0987">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0988">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0989">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0990">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0991">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0992">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0993">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0994">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0995">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0996">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0997">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0998">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0999">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_1000">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9b9389c0-1833-4589-9f43-df805d4048ae"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="0ae11366-df33-4dd7-9354-c27049ae74b3"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="06f6ac41-2f7a-4b5c-8784-1c8dabb49a64"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="04 Timestamp 1T10" id="d9ee6af3-1f79-49d3-9153-3a0575245083"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="05 Static NoTSA NoOCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="829b59c2-b73f-4649-adef-3549dd35ff00"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA NoOCSP" id="b8c8ae92-f0d2-43d2-a856-a17d4b495de5"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA NoOCSP" mediaType="application/xml" postQueryString="false" accept="" id="6bfec3b0-7233-487f-a87a-7573a3884853"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="45b5fa0e-a021-42ec-a69a-6f499500ef49"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="dcf3851a-2fac-481c-b89c-769075db9233"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5239e27b-0f05-4eda-94e0-64ca5f794e77"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="05 Static 1T100" id="0ef957f1-6ed5-4afc-be2b-3ab5824b5924"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>100</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="05 Static 1T1000" id="6c5c46f6-45a2-42b2-a88f-c75d883cc3fc"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="05 Static 1T10000" id="bd017b33-4bc7-4cb6-8d58-8c8f0243123f"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="05 Static 10T10" id="e78c7fbd-d667-4135-89a9-252981c07be9"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="05 Static 100T10" id="976ff05f-f17c-4456-a6b1-f0949e51c998"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="05 Static 500T20" id="54046fa4-4aab-4f4a-8f66-dcb62b2d1cf0"><con:settings/><con:threadCount>500</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="06 Static NoTSA NoOCSP Batch10" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9b06bb15-3516-4028-9a8d-de0cc69b1014"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA NoOCSP Batch10" id="449f945b-8443-4884-881e-965991b89662"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA NoOCSP Batch10" mediaType="application/xml" postQueryString="false" accept="" id="1934d182-dfd7-4474-a572-1253ad67e901"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="872afcf5-a8ec-401c-8829-82113c89ebe2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="acf424ee-5921-4e41-9fd2-39e36c16df45"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d9f654e8-a49b-4fca-b34b-65a09987564c"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="06 Static 1T10" id="0f576831-abb4-4215-ba72-efe1932e921b"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="06 Static 10T10" id="acdac528-9747-4eb7-a038-b7ea8fffc864"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="07 Static NoTSA NoOCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2cfa6227-9511-4230-b878-bce0be9f5b97"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA NoOCSP Batch100" id="8527ce63-19c8-4159-84a0-2341098bb9e4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA NoOCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="6863b9a8-150e-4b1a-a35f-75e0f7f0562c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="125bb3e0-94c5-4750-9bf4-fe6ead361417"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="eabfa146-69e9-4887-91ce-c976b2edbec5"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="636cf42d-1e06-4fed-9232-43f561be2944"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="07 Static 1T10" id="9561ba35-cf55-44ff-b076-89661e184b5e"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="07 Static 10T10" id="6ad2a000-d20f-43c6-9d0a-c1057c85e311"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="08 Static NoTSA NoOCSP Batch1000" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="78bd2357-bfa1-49cb-9c24-14e90f163948"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA NoOCSP Batch1000" id="30b3286e-421f-45aa-b8cf-92a8402b98c4"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA NoOCSP Batch1000" mediaType="application/xml" postQueryString="false" accept="" id="6730b6fb-b662-485e-8c14-5965db3c21e1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0101">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0102">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0103">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0104">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0105">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0106">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0107">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0108">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0109">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0110">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0111">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0112">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0113">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0114">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0115">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0116">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0117">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0118">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0119">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0120">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0121">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0122">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0123">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0124">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0125">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0126">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0127">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0128">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0129">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0130">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0131">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0132">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0133">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0134">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0135">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0136">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0137">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0138">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0139">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0140">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0141">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0142">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0143">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0144">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0145">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0146">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0147">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0148">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0149">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0150">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0151">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0152">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0153">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0154">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0155">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0156">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0157">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0158">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0159">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0160">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0161">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0162">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0163">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0164">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0165">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0166">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0167">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0168">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0169">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0170">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0171">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0172">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0173">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0174">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0175">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0176">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0177">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0178">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0179">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0180">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0181">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0182">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0183">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0184">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0185">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0186">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0187">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0188">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0189">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0190">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0191">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0192">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0193">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0194">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0195">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0196">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0197">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0198">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0199">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0200">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0201">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0202">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0203">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0204">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0205">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0206">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0207">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0208">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0209">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0210">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0211">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0212">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0213">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0214">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0215">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0216">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0217">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0218">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0219">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0220">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0221">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0222">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0223">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0224">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0225">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0226">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0227">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0228">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0229">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0230">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0231">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0232">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0233">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0234">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0235">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0236">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0237">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0238">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0239">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0240">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0241">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0242">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0243">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0244">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0245">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0246">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0247">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0248">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0249">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0250">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0251">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0252">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0253">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0254">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0255">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0257">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0258">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0259">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0260">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0261">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0262">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0263">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0264">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0265">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0266">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0267">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0268">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0269">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0270">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0271">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0272">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0273">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0274">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0275">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0276">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0277">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0278">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0279">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0280">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0281">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0282">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0283">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0284">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0285">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0286">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0287">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0288">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0289">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0290">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0291">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0292">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0293">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0294">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0295">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0296">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0297">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0298">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0299">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0300">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0301">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0302">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0303">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0304">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0305">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0306">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0307">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0308">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0309">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0310">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0311">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0312">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0313">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0314">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0315">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0316">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0317">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0318">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0319">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0320">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0321">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0322">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0323">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0324">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0325">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0326">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0327">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0328">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0329">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0330">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0331">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0332">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0333">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0334">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0335">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0336">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0337">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0338">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0339">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0340">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0341">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0342">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0343">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0344">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0345">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0346">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0347">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0348">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0349">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0350">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0351">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0352">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0353">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0354">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0355">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0356">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0357">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0358">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0359">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0360">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0361">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0362">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0363">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0364">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0365">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0366">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0367">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0368">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0369">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0370">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0371">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0372">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0373">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0374">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0375">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0376">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0377">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0378">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0379">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0380">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0381">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0382">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0383">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0385">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0386">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0387">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0388">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0389">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0390">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0391">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0392">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0393">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0394">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0395">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0396">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0397">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0398">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0399">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0400">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0401">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0402">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0403">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0404">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0405">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0406">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0407">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0408">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0409">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0410">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0411">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0412">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0413">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0414">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0415">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0416">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0417">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0418">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0419">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0420">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0421">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0422">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0423">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0424">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0425">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0426">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0427">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0428">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0429">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0430">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0431">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0432">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0433">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0434">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0435">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0436">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0437">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0438">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0439">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0440">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0441">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0442">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0443">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0444">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0445">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0446">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0447">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0448">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0449">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0450">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0451">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0452">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0453">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0454">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0455">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0456">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0457">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0458">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0459">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0460">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0461">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0462">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0463">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0464">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0465">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0466">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0467">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0468">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0469">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0470">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0471">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0472">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0473">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0474">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0475">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0476">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0477">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0478">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0479">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0480">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0481">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0482">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0483">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0484">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0485">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0486">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0487">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0488">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0489">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0490">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0491">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0492">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0493">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0494">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0495">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0496">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0497">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0498">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0499">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0500">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0501">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0502">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0503">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0504">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0505">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0506">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0507">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0508">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0509">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0510">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0511">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0513">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0514">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0515">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0516">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0517">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0518">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0519">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0520">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0521">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0522">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0523">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0524">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0525">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0526">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0527">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0528">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0529">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0530">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0531">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0532">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0533">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0534">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0535">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0536">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0537">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0538">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0539">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0540">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0541">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0542">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0543">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0544">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0545">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0546">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0547">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0548">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0549">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0550">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0551">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0552">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0553">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0554">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0555">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0556">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0557">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0558">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0559">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0560">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0561">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0562">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0563">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0564">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0565">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0566">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0567">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0568">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0569">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0570">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0571">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0572">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0573">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0574">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0575">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0576">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0577">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0578">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0579">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0580">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0581">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0582">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0583">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0584">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0585">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0586">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0587">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0588">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0589">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0590">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0591">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0592">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0593">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0594">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0595">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0596">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0597">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0598">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0599">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0600">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0601">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0602">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0603">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0604">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0605">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0606">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0607">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0608">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0609">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0610">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0611">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0612">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0613">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0614">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0615">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0616">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0617">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0618">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0619">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0620">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0621">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0622">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0623">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0624">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0625">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0626">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0627">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0628">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0629">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0630">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0631">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0632">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0633">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0634">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0635">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0636">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0637">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0638">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0639">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0640">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0641">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0642">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0643">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0644">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0645">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0646">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0647">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0648">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0649">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0650">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0651">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0652">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0653">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0654">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0655">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0656">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0657">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0658">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0659">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0660">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0661">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0662">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0663">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0664">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0665">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0666">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0667">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0668">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0669">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0670">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0671">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0672">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0673">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0674">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0675">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0676">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0677">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0678">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0679">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0680">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0681">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0682">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0683">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0684">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0685">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0686">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0687">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0688">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0689">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0690">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0691">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0692">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0693">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0694">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0695">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0696">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0697">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0698">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0699">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0700">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0701">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0702">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0703">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0704">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0705">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0706">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0707">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0708">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0709">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0710">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0711">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0712">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0713">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0714">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0715">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0716">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0717">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0718">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0719">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0720">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0721">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0722">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0723">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0724">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0725">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0726">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0727">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0728">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0729">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0730">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0731">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0732">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0733">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0734">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0735">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0736">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0737">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0738">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0739">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0740">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0741">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0742">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0743">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0744">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0745">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0746">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0747">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0748">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0749">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0750">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0751">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0752">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0753">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0754">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0755">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0756">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0757">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0758">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0759">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0760">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0761">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0762">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0763">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0764">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0765">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0766">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0767">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0768">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0769">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0770">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0771">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0772">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0773">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0774">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0775">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0776">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0777">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0778">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0779">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0780">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0781">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0782">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0783">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0784">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0785">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0786">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0787">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0788">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0789">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0790">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0791">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0792">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0793">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0794">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0795">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0796">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0797">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0798">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0799">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0800">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0801">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0802">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0803">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0804">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0805">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0806">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0807">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0808">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0809">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0810">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0811">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0812">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0813">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0814">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0815">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0816">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0817">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0818">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0819">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0820">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0821">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0822">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0823">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0824">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0825">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0826">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0827">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0828">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0829">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0830">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0831">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0832">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0833">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0834">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0835">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0836">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0837">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0838">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0839">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0840">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0841">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0842">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0843">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0844">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0845">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0846">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0847">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0848">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0849">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0850">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0851">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0852">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0853">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0854">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0855">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0856">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0857">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0858">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0859">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0860">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0861">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0862">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0863">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0864">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0865">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0866">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0867">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0868">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0869">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0870">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0871">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0872">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0873">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0874">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0875">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0876">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0877">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0878">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0879">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0880">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0881">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0882">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0883">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0884">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0885">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0886">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0887">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0888">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0889">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0890">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0891">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0892">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0893">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0894">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0895">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0896">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0897">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0898">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0899">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0900">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0901">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0902">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0903">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0904">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0905">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0906">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0907">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0908">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0909">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0910">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0911">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0912">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0913">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0914">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0915">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0916">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0917">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0918">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0919">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0920">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0921">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0922">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0923">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0924">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0925">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0926">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0927">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0928">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0929">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0930">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0931">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0932">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0933">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0934">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0935">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0936">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0937">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0938">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0939">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0940">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0941">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0942">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0943">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0944">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0945">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0946">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0947">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0948">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0949">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0950">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0951">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0952">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0953">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0954">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0955">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0956">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0957">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0958">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0959">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0960">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0961">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0962">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0963">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0964">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0965">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0966">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0967">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0968">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0969">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0970">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0971">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0972">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0973">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0974">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0975">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0976">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0977">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0978">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0979">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0980">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0981">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0982">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0983">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0984">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0985">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0986">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0987">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0988">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0989">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0990">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0991">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0992">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0993">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0994">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0995">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0996">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0997">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0998">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0999">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_1000">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="63596b22-fb30-47e1-8558-e977ac347604"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="89457879-0bfe-41b6-9bdb-05587288842c"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="286f79cc-68fa-4cf8-b908-d0a94169a6a1"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="08 Static 1T10" id="bf6bc2a8-4d6a-4a6a-abec-0495c4f923e8"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="09 Static +TSA NoOCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6d8b5ef5-00dd-465b-a8cb-9a1cecddcbdf"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA NoOCSP" id="bd6a7a6b-cbd9-437c-8980-a180959e634e"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA NoOCSP" mediaType="application/xml" postQueryString="false" accept="" id="c6765e49-c2f9-49cf-9ee1-74bf9b06d902"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="b1964304-539d-4a36-8a58-6dff33fe6804"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="fd1fcaa5-b856-402f-b8eb-8fd4982b9b6e"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="4d17efd5-dd3b-44a7-a4bb-b0ed47aa8720"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="09 Static 1T1000" id="4f9c88d8-85f7-4f90-97f9-a7677768a73a"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="10 Static +TSA NoOCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e00f7c58-61a7-46e3-8db4-d596b23c505c"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA NoOCSP Batch100" id="3a6b13a9-43ae-4769-a226-83829db53ed1"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA NoOCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="c0b71182-46d4-4fc0-9fb4-9df886255f5f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="bb822a88-1161-46c9-8480-1c716658c29b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="7d92aaf4-d7f3-414c-95ae-05e1efd49aa3"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="07f01cd0-e3d4-4bb4-b7dd-e000e5b9736c"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="10 Static 1T10" id="65b93fec-131f-4c9e-b304-61ff3728de9d"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="10 Static 10T10" id="4e356a67-46fb-47fb-b7b8-d72e984506df"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="11 Static NoTSA +OCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0872834a-ec23-46e2-a2a3-d0694e55bfe0"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA +OCSP" id="671e6a3d-fb8f-443b-b715-30f00c9868dd"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA +OCSP" mediaType="application/xml" postQueryString="false" accept="" id="6d2b69ce-b167-4a06-ad60-d1b7faca40db"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="528d90f8-d8be-4701-8c57-bb486a0351d2"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="b6adf3f3-0776-4e27-952e-6cc336c142e3"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="e7a6638b-9bc3-4dcd-bf88-4cd54e9d6fb8"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="11 Static 1T1000" id="9518d355-897d-419a-be9e-e8dd563c237f"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="12 Static NoTSA +OCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5a3da435-b77e-4a22-862a-867ca3b0d3ba"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static NoTSA +OCSP Batch100" id="5cc5b32b-a406-4217-8efb-190b2eaf92a1"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static NoTSA +OCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="dd0b5119-bc4f-446b-af21-ea64bb7b2349"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <sc:AddRevocationInformation Type="BOTH"/>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="30aaa835-2db7-41cf-b8be-0adb03bcb2be"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2628c24c-dede-4d7e-b036-4f6ac8b21e62"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="c0d90517-15b3-4bab-b9df-9ee69672c94e"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="12 Static 1T10" id="61418687-cf3e-446f-ac9b-7254590d0f5e"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="12 Static 10T10" id="8cbd3946-096b-4192-b361-624a0c6a836a"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="13 Static +TSA +OCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="de0c32c3-b75c-486f-b785-11023b4b194d"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA +OCSP" id="8db533bc-05f2-4ad6-abf2-e9737498a604"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA +OCSP" mediaType="application/xml" postQueryString="false" accept="" id="a75b5998-9b13-495d-88a3-9152dfac911d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="993cc55a-5973-4f9f-b554-5772c2f2ebf5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="dc848c8f-e416-4863-bf0d-628095b7d175"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="bf5d36a7-1b05-4414-986a-860ecc4053f3"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="13 Static 1T100" id="84f0e641-8932-4fe6-9a13-1660dd1bc130"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>100</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="13 Static 1T1000" id="842f09e2-e816-4f44-8f7f-e4c1e0289459"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="13 Static 1T10000" id="9a7a9df5-7e49-4572-8013-99948011264b"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="13 Static 10T10" id="c1abe044-d11f-4448-afd7-9fcf493beb0c"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="13 Static 100T10" id="c17dd6cb-2f9e-40b0-bd94-f107e2ccb163"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="13 Static 500T20" id="01b7d138-9bcf-49ee-9ea7-453a0bbff384"><con:settings/><con:threadCount>500</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="14 Static +TSA +OCSP Batch10" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="53221bfa-6282-4c9f-bc85-3d7a21caa0eb"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA +OCSP Batch10" id="c754fe08-52a8-4b74-bad6-22d310a51e6f"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA +OCSP Batch10" mediaType="application/xml" postQueryString="false" accept="" id="1891c478-758a-4251-ad18-ff300312bd48"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <sc:AddRevocationInformation Type="BOTH"/>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="dca2a88d-2668-49a1-b7bc-a4e47eea3fb7"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="82d1a0d7-77d6-4001-bf7a-179aef5885a4"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="04a04141-a1d6-4d2b-88ae-8fa927a00b88"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="14 Static 1T10" id="d6b86d54-46c0-4eaf-8608-2d66fe03ff65"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="14 Static 10T10" id="9041d885-52b2-41d5-91f0-270a4d4c6882"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="15 Static +TSA +OCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="46f2a42c-0054-47fe-b226-25f0be09be73"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA +OCSP Batch100" id="e5847848-e60a-4edf-abca-36333426268a"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA +OCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="a8796a67-d7cb-4126-aed1-8992da027a5f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <sc:AddRevocationInformation Type="BOTH"/>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="90f88d67-f0d2-46a2-a76a-86b53401f7a1"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="a5f57dd0-d1b3-438d-b82e-6080153bb1db"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="dfa78e40-5595-49e9-9e40-b1ffbef4131a"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="15 Static 1T10" id="4b127f93-945f-43d1-9bb3-a5f3727de586"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="15 Static 10T10" id="19d0f041-ff31-484f-8391-3fdf9e4062ba"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="16 Static +TSA +OCSP Batch1000" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1659d012-76dd-4e74-9abe-ee51ad6db26f"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="Static +TSA +OCSP Batch1000" id="df48f471-dbd9-43cb-8940-0b9c1aac2251"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Static +TSA +OCSP Batch1000" mediaType="application/xml" postQueryString="false" accept="" id="fae65197-4fef-472e-8b22-8d48be05c343"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <sc:AddRevocationInformation Type="BOTH"/>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0101">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0102">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0103">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0104">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0105">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0106">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0107">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0108">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0109">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0110">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0111">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0112">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0113">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0114">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0115">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0116">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0117">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0118">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0119">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0120">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0121">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0122">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0123">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0124">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0125">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0126">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0127">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0128">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0129">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0130">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0131">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0132">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0133">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0134">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0135">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0136">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0137">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0138">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0139">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0140">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0141">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0142">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0143">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0144">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0145">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0146">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0147">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0148">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0149">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0150">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0151">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0152">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0153">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0154">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0155">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0156">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0157">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0158">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0159">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0160">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0161">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0162">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0163">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0164">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0165">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0166">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0167">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0168">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0169">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0170">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0171">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0172">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0173">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0174">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0175">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0176">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0177">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0178">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0179">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0180">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0181">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0182">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0183">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0184">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0185">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0186">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0187">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0188">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0189">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0190">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0191">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0192">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0193">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0194">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0195">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0196">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0197">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0198">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0199">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0200">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0201">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0202">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0203">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0204">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0205">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0206">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0207">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0208">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0209">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0210">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0211">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0212">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0213">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0214">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0215">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0216">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0217">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0218">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0219">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0220">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0221">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0222">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0223">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0224">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0225">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0226">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0227">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0228">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0229">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0230">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0231">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0232">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0233">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0234">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0235">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0236">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0237">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0238">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0239">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0240">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0241">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0242">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0243">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0244">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0245">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0246">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0247">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0248">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0249">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0250">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0251">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0252">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0253">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0254">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0255">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0257">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0258">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0259">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0260">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0261">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0262">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0263">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0264">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0265">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0266">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0267">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0268">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0269">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0270">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0271">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0272">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0273">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0274">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0275">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0276">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0277">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0278">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0279">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0280">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0281">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0282">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0283">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0284">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0285">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0286">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0287">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0288">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0289">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0290">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0291">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0292">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0293">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0294">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0295">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0296">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0297">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0298">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0299">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0300">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0301">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0302">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0303">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0304">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0305">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0306">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0307">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0308">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0309">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0310">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0311">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0312">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0313">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0314">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0315">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0316">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0317">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0318">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0319">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0320">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0321">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0322">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0323">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0324">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0325">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0326">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0327">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0328">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0329">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0330">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0331">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0332">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0333">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0334">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0335">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0336">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0337">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0338">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0339">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0340">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0341">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0342">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0343">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0344">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0345">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0346">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0347">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0348">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0349">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0350">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0351">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0352">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0353">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0354">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0355">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0356">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0357">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0358">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0359">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0360">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0361">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0362">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0363">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0364">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0365">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0366">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0367">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0368">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0369">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0370">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0371">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0372">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0373">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0374">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0375">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0376">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0377">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0378">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0379">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0380">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0381">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0382">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0383">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0385">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0386">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0387">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0388">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0389">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0390">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0391">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0392">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0393">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0394">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0395">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0396">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0397">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0398">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0399">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0400">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0401">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0402">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0403">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0404">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0405">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0406">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0407">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0408">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0409">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0410">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0411">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0412">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0413">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0414">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0415">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0416">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0417">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0418">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0419">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0420">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0421">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0422">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0423">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0424">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0425">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0426">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0427">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0428">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0429">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0430">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0431">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0432">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0433">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0434">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0435">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0436">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0437">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0438">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0439">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0440">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0441">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0442">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0443">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0444">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0445">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0446">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0447">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0448">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0449">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0450">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0451">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0452">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0453">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0454">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0455">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0456">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0457">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0458">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0459">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0460">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0461">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0462">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0463">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0464">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0465">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0466">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0467">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0468">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0469">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0470">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0471">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0472">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0473">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0474">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0475">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0476">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0477">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0478">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0479">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0480">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0481">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0482">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0483">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0484">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0485">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0486">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0487">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0488">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0489">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0490">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0491">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0492">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0493">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0494">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0495">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0496">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0497">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0498">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0499">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0500">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0501">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0502">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0503">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0504">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0505">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0506">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0507">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0508">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0509">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0510">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0511">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0513">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0514">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0515">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0516">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0517">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0518">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0519">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0520">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0521">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0522">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0523">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0524">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0525">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0526">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0527">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0528">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0529">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0530">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0531">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0532">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0533">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0534">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0535">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0536">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0537">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0538">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0539">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0540">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0541">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0542">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0543">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0544">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0545">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0546">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0547">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0548">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0549">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0550">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0551">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0552">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0553">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0554">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0555">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0556">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0557">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0558">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0559">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0560">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0561">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0562">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0563">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0564">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0565">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0566">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0567">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0568">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0569">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0570">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0571">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0572">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0573">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0574">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0575">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0576">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0577">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0578">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0579">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0580">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0581">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0582">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0583">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0584">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0585">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0586">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0587">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0588">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0589">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0590">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0591">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0592">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0593">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0594">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0595">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0596">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0597">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0598">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0599">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0600">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0601">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0602">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0603">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0604">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0605">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0606">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0607">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0608">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0609">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0610">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0611">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0612">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0613">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0614">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0615">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0616">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0617">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0618">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0619">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0620">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0621">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0622">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0623">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0624">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0625">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0626">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0627">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0628">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0629">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0630">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0631">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0632">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0633">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0634">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0635">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0636">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0637">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0638">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0639">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0640">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0641">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0642">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0643">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0644">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0645">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0646">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0647">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0648">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0649">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0650">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0651">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0652">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0653">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0654">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0655">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0656">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0657">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0658">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0659">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0660">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0661">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0662">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0663">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0664">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0665">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0666">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0667">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0668">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0669">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0670">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0671">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0672">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0673">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0674">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0675">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0676">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0677">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0678">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0679">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0680">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0681">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0682">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0683">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0684">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0685">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0686">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0687">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0688">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0689">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0690">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0691">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0692">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0693">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0694">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0695">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0696">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0697">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0698">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0699">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0700">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0701">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0702">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0703">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0704">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0705">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0706">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0707">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0708">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0709">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0710">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0711">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0712">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0713">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0714">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0715">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0716">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0717">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0718">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0719">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0720">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0721">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0722">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0723">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0724">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0725">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0726">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0727">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0728">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0729">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0730">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0731">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0732">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0733">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0734">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0735">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0736">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0737">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0738">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0739">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0740">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0741">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0742">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0743">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0744">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0745">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0746">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0747">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0748">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0749">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0750">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0751">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0752">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0753">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0754">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0755">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0756">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0757">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0758">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0759">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0760">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0761">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0762">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0763">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0764">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0765">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0766">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0767">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0768">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0769">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0770">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0771">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0772">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0773">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0774">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0775">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0776">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0777">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0778">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0779">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0780">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0781">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0782">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0783">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0784">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0785">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0786">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0787">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0788">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0789">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0790">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0791">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0792">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0793">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0794">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0795">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0796">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0797">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0798">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0799">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0800">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0801">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0802">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0803">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0804">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0805">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0806">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0807">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0808">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0809">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0810">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0811">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0812">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0813">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0814">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0815">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0816">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0817">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0818">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0819">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0820">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0821">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0822">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0823">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0824">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0825">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0826">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0827">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0828">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0829">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0830">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0831">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0832">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0833">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0834">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0835">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0836">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0837">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0838">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0839">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0840">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0841">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0842">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0843">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0844">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0845">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0846">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0847">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0848">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0849">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0850">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0851">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0852">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0853">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0854">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0855">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0856">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0857">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0858">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0859">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0860">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0861">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0862">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0863">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0864">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0865">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0866">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0867">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0868">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0869">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0870">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0871">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0872">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0873">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0874">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0875">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0876">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0877">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0878">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0879">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0880">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0881">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0882">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0883">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0884">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0885">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0886">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0887">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0888">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0889">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0890">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0891">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0892">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0893">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0894">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0895">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0896">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0897">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0898">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0899">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0900">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0901">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0902">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0903">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0904">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0905">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0906">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0907">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0908">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0909">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0910">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0911">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0912">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0913">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0914">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0915">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0916">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0917">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0918">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0919">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0920">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0921">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0922">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0923">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0924">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0925">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0926">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0927">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0928">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0929">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0930">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0931">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0932">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0933">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0934">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0935">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0936">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0937">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0938">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0939">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0940">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0941">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0942">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0943">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0944">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0945">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0946">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0947">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0948">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0949">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0950">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0951">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0952">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0953">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0954">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0955">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0956">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0957">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0958">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0959">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0960">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0961">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0962">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0963">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0964">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0965">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0966">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0967">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0968">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0969">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0970">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0971">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0972">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0973">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0974">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0975">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0976">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0977">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0978">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0979">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0980">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0981">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0982">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0983">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0984">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0985">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0986">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0987">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0988">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0989">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0990">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0991">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0992">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0993">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0994">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0995">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0996">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0997">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0998">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0999">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_1000">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="ee1b7ebe-0a9c-4c7d-bc14-8e5061b71546"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="59e1a7f5-25e7-416a-b39c-399fbfaaf199"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="538b7743-cf0e-45f7-bb5e-8f1003402353"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="16 Static 1T10" id="8e118dd9-92e9-4026-88e7-9e16bcc7db27"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="17 OnDemand NoTSA NoOCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2988cb50-d137-482c-848e-7b040812551a"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA NoOCSP" id="fcf0a9c4-ff36-4db6-81aa-57161cafe0ae"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA NoOCSP" mediaType="application/xml" postQueryString="false" accept="" id="9c91d2cf-b718-4fe0-bf2d-fea4d5b89fd4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="1bc80a61-2772-4570-b6c0-a7a5bcab4efe"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="2df6ff6e-f840-4494-9395-53ad8f3ea078"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="68eba1d9-5572-480c-92ea-1182e74ae3c9"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="17 OnDemand 1T100" id="c2beaddb-96f4-4ed9-928b-9b60821ee400"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>100</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="17 OnDemand 1T1000" id="ba7200e4-4cef-4680-932b-4164699ebd1a"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="17 OnDemand 1T10000" id="74074f8a-1172-4bbc-961a-626bdef1f790"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="17 OnDemand 10T10" id="f41155d6-601b-4c3a-be9a-4266eaf96ff6"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="17 OnDemand 100T10" id="31c79aaa-f37f-4084-8662-d6b38d074726"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="17 OnDemand 500T20" id="57c06d2e-8675-428b-aa8b-57c3bdef89ce"><con:settings/><con:threadCount>500</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="18 OnDemand NoTSA NoOCSP Batch10" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="96c1f9b0-846f-4223-801c-0605972c9002"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA NoOCSP Batch10" id="3f61b918-6d27-487a-8932-39e38014e5eb"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA NoOCSP Batch10" mediaType="application/xml" postQueryString="false" accept="" id="039bdd04-793e-4024-b61c-dbe8480b3293"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2e99f724-e5f7-4e9d-bf1d-ed3270e49345"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="122af434-2e9a-42b7-9f1b-3e5c0680a78a"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="7529d2f7-93b2-4364-8d72-7a1d84ff62d8"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="18 OnDemand 1T10" id="120e96eb-a822-4c22-bea4-87b3a5ec2848"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="18 OnDemand 10T10" id="21de38b1-7295-4c97-9d63-60c9cc405bca"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="19 OnDemand NoTSA NoOCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2b500b68-af2c-4751-81d2-7b2955991702"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA NoOCSP Batch100" id="3259411a-1b64-4760-879d-e82f5f6a0afc"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA NoOCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="c69854ce-1366-4a9d-8873-53f6517610b7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="2ad94ec6-edea-4d68-9b29-9ba1491d478b"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="4810b8c3-a297-4266-baba-30aad3c8759b"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="89ba6c9b-d237-4a3e-8278-300465ddc6ee"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="19 OnDemand 1T10" id="5d055d42-e112-4018-b05f-dd0a8865203f"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="19 OnDemand 10T10" id="5bdfd16a-da40-4aa7-9bad-952ac2d098c3"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="20 OnDemand NoTSA NoOCSP Batch1000" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="cd727e6e-71bb-4b75-bc52-0006edb0c333"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA NoOCSP Batch1000" id="683ba68f-8b8b-4cad-8591-ac5a72b30e5d"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA NoOCSP Batch1000" mediaType="application/xml" postQueryString="false" accept="" id="727b889b-7e29-4f01-b5c7-3908474a1c87"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0101">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0102">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0103">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0104">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0105">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0106">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0107">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0108">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0109">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0110">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0111">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0112">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0113">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0114">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0115">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0116">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0117">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0118">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0119">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0120">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0121">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0122">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0123">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0124">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0125">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0126">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0127">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0128">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0129">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0130">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0131">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0132">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0133">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0134">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0135">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0136">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0137">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0138">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0139">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0140">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0141">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0142">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0143">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0144">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0145">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0146">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0147">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0148">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0149">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0150">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0151">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0152">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0153">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0154">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0155">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0156">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0157">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0158">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0159">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0160">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0161">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0162">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0163">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0164">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0165">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0166">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0167">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0168">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0169">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0170">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0171">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0172">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0173">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0174">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0175">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0176">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0177">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0178">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0179">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0180">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0181">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0182">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0183">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0184">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0185">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0186">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0187">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0188">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0189">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0190">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0191">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0192">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0193">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0194">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0195">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0196">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0197">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0198">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0199">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0200">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0201">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0202">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0203">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0204">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0205">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0206">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0207">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0208">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0209">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0210">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0211">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0212">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0213">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0214">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0215">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0216">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0217">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0218">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0219">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0220">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0221">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0222">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0223">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0224">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0225">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0226">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0227">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0228">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0229">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0230">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0231">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0232">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0233">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0234">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0235">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0236">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0237">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0238">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0239">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0240">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0241">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0242">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0243">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0244">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0245">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0246">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0247">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0248">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0249">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0250">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0251">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0252">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0253">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0254">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0255">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0257">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0258">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0259">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0260">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0261">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0262">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0263">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0264">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0265">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0266">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0267">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0268">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0269">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0270">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0271">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0272">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0273">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0274">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0275">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0276">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0277">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0278">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0279">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0280">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0281">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0282">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0283">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0284">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0285">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0286">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0287">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0288">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0289">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0290">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0291">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0292">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0293">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0294">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0295">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0296">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0297">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0298">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0299">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0300">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0301">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0302">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0303">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0304">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0305">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0306">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0307">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0308">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0309">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0310">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0311">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0312">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0313">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0314">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0315">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0316">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0317">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0318">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0319">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0320">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0321">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0322">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0323">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0324">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0325">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0326">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0327">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0328">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0329">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0330">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0331">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0332">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0333">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0334">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0335">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0336">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0337">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0338">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0339">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0340">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0341">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0342">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0343">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0344">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0345">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0346">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0347">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0348">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0349">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0350">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0351">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0352">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0353">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0354">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0355">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0356">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0357">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0358">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0359">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0360">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0361">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0362">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0363">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0364">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0365">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0366">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0367">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0368">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0369">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0370">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0371">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0372">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0373">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0374">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0375">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0376">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0377">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0378">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0379">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0380">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0381">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0382">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0383">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0385">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0386">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0387">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0388">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0389">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0390">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0391">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0392">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0393">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0394">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0395">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0396">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0397">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0398">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0399">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0400">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0401">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0402">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0403">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0404">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0405">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0406">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0407">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0408">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0409">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0410">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0411">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0412">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0413">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0414">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0415">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0416">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0417">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0418">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0419">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0420">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0421">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0422">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0423">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0424">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0425">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0426">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0427">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0428">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0429">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0430">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0431">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0432">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0433">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0434">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0435">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0436">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0437">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0438">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0439">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0440">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0441">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0442">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0443">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0444">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0445">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0446">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0447">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0448">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0449">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0450">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0451">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0452">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0453">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0454">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0455">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0456">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0457">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0458">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0459">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0460">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0461">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0462">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0463">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0464">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0465">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0466">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0467">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0468">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0469">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0470">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0471">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0472">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0473">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0474">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0475">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0476">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0477">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0478">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0479">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0480">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0481">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0482">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0483">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0484">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0485">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0486">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0487">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0488">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0489">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0490">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0491">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0492">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0493">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0494">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0495">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0496">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0497">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0498">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0499">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0500">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0501">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0502">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0503">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0504">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0505">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0506">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0507">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0508">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0509">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0510">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0511">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0513">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0514">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0515">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0516">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0517">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0518">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0519">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0520">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0521">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0522">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0523">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0524">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0525">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0526">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0527">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0528">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0529">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0530">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0531">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0532">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0533">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0534">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0535">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0536">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0537">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0538">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0539">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0540">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0541">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0542">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0543">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0544">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0545">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0546">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0547">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0548">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0549">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0550">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0551">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0552">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0553">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0554">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0555">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0556">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0557">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0558">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0559">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0560">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0561">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0562">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0563">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0564">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0565">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0566">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0567">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0568">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0569">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0570">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0571">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0572">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0573">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0574">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0575">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0576">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0577">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0578">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0579">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0580">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0581">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0582">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0583">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0584">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0585">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0586">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0587">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0588">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0589">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0590">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0591">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0592">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0593">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0594">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0595">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0596">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0597">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0598">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0599">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0600">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0601">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0602">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0603">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0604">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0605">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0606">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0607">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0608">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0609">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0610">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0611">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0612">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0613">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0614">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0615">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0616">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0617">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0618">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0619">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0620">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0621">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0622">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0623">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0624">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0625">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0626">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0627">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0628">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0629">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0630">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0631">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0632">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0633">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0634">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0635">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0636">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0637">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0638">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0639">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0640">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0641">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0642">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0643">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0644">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0645">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0646">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0647">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0648">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0649">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0650">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0651">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0652">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0653">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0654">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0655">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0656">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0657">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0658">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0659">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0660">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0661">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0662">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0663">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0664">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0665">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0666">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0667">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0668">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0669">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0670">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0671">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0672">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0673">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0674">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0675">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0676">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0677">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0678">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0679">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0680">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0681">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0682">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0683">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0684">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0685">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0686">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0687">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0688">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0689">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0690">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0691">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0692">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0693">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0694">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0695">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0696">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0697">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0698">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0699">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0700">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0701">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0702">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0703">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0704">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0705">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0706">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0707">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0708">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0709">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0710">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0711">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0712">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0713">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0714">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0715">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0716">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0717">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0718">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0719">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0720">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0721">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0722">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0723">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0724">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0725">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0726">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0727">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0728">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0729">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0730">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0731">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0732">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0733">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0734">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0735">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0736">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0737">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0738">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0739">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0740">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0741">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0742">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0743">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0744">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0745">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0746">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0747">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0748">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0749">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0750">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0751">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0752">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0753">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0754">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0755">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0756">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0757">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0758">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0759">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0760">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0761">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0762">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0763">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0764">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0765">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0766">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0767">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0768">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0769">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0770">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0771">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0772">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0773">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0774">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0775">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0776">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0777">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0778">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0779">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0780">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0781">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0782">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0783">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0784">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0785">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0786">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0787">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0788">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0789">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0790">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0791">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0792">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0793">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0794">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0795">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0796">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0797">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0798">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0799">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0800">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0801">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0802">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0803">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0804">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0805">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0806">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0807">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0808">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0809">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0810">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0811">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0812">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0813">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0814">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0815">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0816">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0817">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0818">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0819">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0820">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0821">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0822">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0823">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0824">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0825">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0826">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0827">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0828">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0829">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0830">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0831">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0832">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0833">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0834">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0835">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0836">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0837">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0838">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0839">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0840">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0841">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0842">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0843">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0844">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0845">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0846">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0847">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0848">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0849">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0850">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0851">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0852">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0853">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0854">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0855">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0856">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0857">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0858">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0859">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0860">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0861">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0862">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0863">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0864">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0865">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0866">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0867">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0868">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0869">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0870">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0871">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0872">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0873">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0874">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0875">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0876">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0877">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0878">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0879">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0880">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0881">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0882">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0883">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0884">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0885">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0886">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0887">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0888">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0889">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0890">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0891">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0892">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0893">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0894">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0895">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0896">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0897">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0898">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0899">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0900">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0901">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0902">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0903">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0904">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0905">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0906">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0907">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0908">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0909">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0910">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0911">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0912">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0913">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0914">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0915">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0916">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0917">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0918">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0919">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0920">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0921">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0922">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0923">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0924">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0925">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0926">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0927">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0928">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0929">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0930">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0931">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0932">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0933">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0934">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0935">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0936">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0937">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0938">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0939">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0940">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0941">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0942">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0943">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0944">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0945">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0946">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0947">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0948">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0949">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0950">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0951">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0952">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0953">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0954">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0955">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0956">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0957">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0958">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0959">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0960">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0961">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0962">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0963">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0964">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0965">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0966">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0967">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0968">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0969">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0970">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0971">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0972">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0973">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0974">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0975">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0976">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0977">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0978">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0979">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0980">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0981">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0982">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0983">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0984">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0985">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0986">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0987">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0988">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0989">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0990">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0991">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0992">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0993">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0994">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0995">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0996">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0997">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0998">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0999">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_1000">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="3d265cb2-034a-4304-84a1-9ff1b26ff304"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="4acaaa3c-4fad-4433-a355-966526aa84a9"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="63a05570-3290-4197-b3d5-8195fb475410"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) )
  log.error( "ErrorResponse:=" + msg )</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="20 OnDemand 1T10" id="a786e543-ea38-4941-9abf-d8d0b5d3cb33"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="21 OnDemand +TSA NoOCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3c688dd5-cde6-4730-8a5b-103e23213d5c"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA NoOCSP" id="835e16a5-c710-4415-a060-fb109b2dfb2f"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA NoOCSP" mediaType="application/xml" postQueryString="false" accept="" id="676baf3c-1c29-46f6-a668-d91c2a7eefca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="82b1bf2e-80a7-40ce-bb78-5257042fbaa3"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="1b36aef1-635f-405c-9ddf-110b3d9f810a"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="72e8dfe9-b389-41b2-a6aa-7f73dfda3bf2"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="21 OnDemand 1T1000" id="c8f17a3b-053c-4c18-9a8b-02bb171386a1"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="22 OnDemand +TSA NoOCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e8390f6f-96d5-49af-aaae-3a2511179de9"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA NoOCSP Batch100" id="e1053f4a-213e-4e44-85b8-5be1e3829512"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA NoOCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="f055b36d-4791-4cfe-833e-e0c29f461f8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="c9ce7765-203b-4d6d-876f-57325bd2d3f5"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="f773802b-94d5-4a70-a48c-f3f293e316eb"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3daebcbc-b183-4b35-a7e1-f7482a0681cc"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="22 OnDemand 1T10" id="82011df7-9e55-4d74-8c48-84ff8c837b92"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="23 OnDemand NoTSA +OCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="db3074a6-f0a2-4115-a2d9-2510a482c438"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA +OCSP" id="0456aa33-fb48-41bf-9cba-00f1d24620f9"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA +OCSP" mediaType="application/xml" postQueryString="false" accept="" id="a7172341-44b7-494b-87f0-d272bd33a4e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="25ce53c2-aac2-409f-aef5-189bae8f3d59"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="89673efa-9c74-49be-aad6-d42c2af1fec3"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ec63f282-cd27-4e2c-9a8a-6bd63ac7de2d"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="23 OnDemand 1T1000" id="19363307-3500-4f6b-a732-46ee8cc7eb6f"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="24 OnDemand NoTSA +OCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1fe9f53b-2f38-47b9-ac06-557df0419dcc"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand NoTSA +OCSP Batch100" id="1fb19b2f-ac32-41b8-aaff-da01af84127f"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand NoTSA +OCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="2a6ab185-4577-40d4-a56c-35875e1ff445"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="495a5337-6196-42b5-8f37-9478f1096b3c"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="be161bfd-f261-40fa-ab19-2768d13db517"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ac2d207d-1ae8-41e3-b580-66d553dfc10c"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="24 OnDemand 1T10" id="7da39400-81ad-44a7-a0f2-cde66154daaa"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="25 OnDemand +TSA +OCSP" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6403a8ef-9a1e-4fb2-89b6-7f88df420a04"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA +OCSP" id="1f1533da-bab7-4a29-8084-1d636933bf5a"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA +OCSP" mediaType="application/xml" postQueryString="false" accept="" id="83d2e4e3-2706-4d39-b1a6-2ce92e82a9dc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="9cdb6640-16c9-49d1-9f3a-2df14e16cf99"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="10cb0166-e892-41f9-af6d-23d2afbe5543"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:RevocationInformation>
      <sc:CRLs>
        <sc:CRL>*</sc:CRL>
      </sc:CRLs>
      <sc:OCSPs>
        <sc:OCSP>*</sc:OCSP>
      </sc:OCSPs>
    </sc:RevocationInformation>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6da4371e-f2dd-48d6-bded-a00120bf3a0a"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="25 OnDemand 1T100" id="0a7aff75-87f2-4869-8391-601f08c9a232"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>100</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="25 OnDemand 1T1000" id="ff8a86f7-4a13-4053-8ad0-844a8a277851"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>1000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="25 OnDemand 1T10000" id="c61bdb6c-84d7-4bbf-a5e8-dc5e3aa0c5bb"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10000</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="25 OnDemand 10T10" id="f0d97f58-d1d2-4e3c-a3b9-3c6f8b13cb70"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="25 OnDemand 100T10" id="0490647a-93c2-40ec-b790-3699eb025840"><con:settings/><con:threadCount>100</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="25 OnDemand 500T20" id="8d6f2421-bb58-4ba2-bc23-141ea25b7f05"><con:settings/><con:threadCount>500</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>20</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="26 OnDemand +TSA +OCSP Batch10" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="15b432be-9c21-4656-8e19-9693d2953595"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA +OCSP Batch10" id="2817d62f-be87-4fea-b72d-dd25334d7161"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA +OCSP Batch10" mediaType="application/xml" postQueryString="false" accept="" id="b6af93c8-153a-4632-93fc-adf1f90d0161"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="d93cce4e-3cac-4f11-b7cc-e955cae6af38"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="18f72937-b675-405c-b2e2-741419cf0d9f"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0b39e694-00a2-470b-866a-7ba8fa55e57e"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="26 OnDemand 1T10" id="06634b47-1aad-4645-8514-3a1aaa02310e"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="26 OnDemand 10T10" id="6825faae-9bdd-41e9-9256-d985e040e486"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="27 OnDemand +TSA +OCSP Batch100" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d6b0ebee-bf33-406a-9e3a-686028797e2d"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA +OCSP Batch100" id="89e2fd59-75e3-49a6-babb-a74e97227532"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA +OCSP Batch100" mediaType="application/xml" postQueryString="false" accept="" id="14035ead-88f5-41e3-9fe8-4c1aa82dd530"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="8e4b9350-c400-4566-ae8b-c86a4e031873"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="6af13ade-c3ec-4337-aa05-3635d992d95e"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a008e886-d852-460a-af84-0dfe8c7ab782"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="27 OnDemand 1T10" id="12d6d65b-c189-432b-bbdd-49f713925eae"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:loadTest name="27 OnDemand 10T10" id="90bd6455-0d44-40be-b426-f0bbb49cd12e"><con:settings/><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="28 OnDemand +TSA +OCSP Batch1000" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b878cd4f-6437-4239-b585-746cb92cb2a9"><con:settings><con:setting id="HttpSettings@socket_timeout">600000</con:setting></con:settings><con:testStep type="restrequest" name="OnDemand +TSA +OCSP Batch1000" id="f6de9267-49b1-4dc7-9760-91365ab3b51b"><con:settings/><con:config service="AIS RESTful" resourcePath="${#TestSuite#PATH_REST}/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="OnDemand +TSA +OCSP Batch1000" mediaType="application/xml" postQueryString="false" accept="" id="44331f33-6df1-429e-9b2d-d098dc255982"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#TestSuite#BASEURL}</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="http://ais.swisscom.ch/1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>http://ais.swisscom.ch/1.0/profiles/batchprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=${#TestSuite#OnDemand_CN} ${=(int)(Math.random()*100000)}, o=${#TestSuite#OnDemand_O}, c=${#TestSuite#OnDemand_C}, ou=Certificate and signatures for test purpose only</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddRevocationInformation Type="BOTH"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256_0001">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0002">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0003">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0004">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0005">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0006">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0007">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0008">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0009">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0010">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0011">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0012">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0013">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0014">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0015">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0016">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0017">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0018">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0019">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0020">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0021">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0022">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0023">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0024">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0025">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0026">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0027">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0028">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0029">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0030">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0031">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0032">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0033">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0034">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0035">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0036">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0037">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0038">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0039">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0040">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0041">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0042">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0043">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0044">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0045">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0046">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0047">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0048">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0049">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0050">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0051">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0052">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0053">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0054">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0055">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0056">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0057">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0058">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0059">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0060">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0061">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0062">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0063">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0064">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0065">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0066">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0067">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0068">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0069">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0070">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0071">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0072">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0073">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0074">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0075">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0076">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0077">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0078">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0079">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0080">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0081">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0082">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0083">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0084">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0085">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0086">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0087">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0088">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0089">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0090">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0091">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0092">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0093">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0094">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0095">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0096">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0097">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0098">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0099">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0100">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0101">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0102">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0103">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0104">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0105">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0106">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0107">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0108">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0109">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0110">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0111">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0112">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0113">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0114">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0115">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0116">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0117">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0118">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0119">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0120">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0121">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0122">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0123">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0124">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0125">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0126">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0127">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0128">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0129">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0130">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0131">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0132">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0133">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0134">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0135">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0136">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0137">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0138">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0139">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0140">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0141">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0142">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0143">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0144">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0145">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0146">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0147">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0148">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0149">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0150">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0151">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0152">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0153">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0154">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0155">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0156">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0157">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0158">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0159">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0160">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0161">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0162">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0163">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0164">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0165">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0166">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0167">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0168">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0169">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0170">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0171">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0172">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0173">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0174">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0175">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0176">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0177">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0178">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0179">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0180">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0181">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0182">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0183">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0184">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0185">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0186">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0187">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0188">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0189">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0190">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0191">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0192">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0193">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0194">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0195">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0196">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0197">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0198">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0199">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0200">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0201">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0202">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0203">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0204">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0205">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0206">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0207">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0208">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0209">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0210">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0211">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0212">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0213">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0214">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0215">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0216">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0217">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0218">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0219">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0220">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0221">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0222">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0223">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0224">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0225">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0226">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0227">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0228">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0229">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0230">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0231">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0232">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0233">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0234">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0235">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0236">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0237">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0238">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0239">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0240">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0241">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0242">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0243">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0244">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0245">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0246">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0247">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0248">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0249">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0250">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0251">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0252">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0253">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0254">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0255">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0257">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0258">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0259">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0260">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0261">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0262">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0263">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0264">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0265">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0266">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0267">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0268">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0269">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0270">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0271">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0272">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0273">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0274">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0275">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0276">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0277">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0278">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0279">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0280">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0281">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0282">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0283">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0284">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0285">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0286">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0287">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0288">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0289">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0290">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0291">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0292">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0293">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0294">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0295">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0296">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0297">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0298">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0299">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0300">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0301">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0302">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0303">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0304">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0305">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0306">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0307">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0308">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0309">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0310">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0311">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0312">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0313">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0314">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0315">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0316">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0317">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0318">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0319">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0320">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0321">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0322">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0323">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0324">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0325">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0326">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0327">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0328">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0329">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0330">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0331">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0332">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0333">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0334">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0335">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0336">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0337">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0338">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0339">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0340">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0341">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0342">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0343">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0344">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0345">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0346">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0347">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0348">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0349">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0350">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0351">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0352">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0353">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0354">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0355">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0356">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0357">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0358">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0359">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0360">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0361">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0362">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0363">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0364">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0365">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0366">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0367">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0368">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0369">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0370">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0371">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0372">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0373">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0374">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0375">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0376">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0377">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0378">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0379">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0380">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0381">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0382">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0383">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0385">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0386">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0387">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0388">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0389">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0390">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0391">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0392">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0393">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0394">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0395">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0396">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0397">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0398">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0399">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0400">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0401">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0402">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0403">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0404">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0405">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0406">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0407">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0408">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0409">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0410">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0411">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0412">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0413">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0414">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0415">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0416">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0417">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0418">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0419">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0420">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0421">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0422">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0423">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0424">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0425">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0426">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0427">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0428">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0429">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0430">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0431">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0432">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0433">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0434">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0435">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0436">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0437">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0438">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0439">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0440">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0441">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0442">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0443">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0444">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0445">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0446">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0447">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0448">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0449">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0450">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0451">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0452">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0453">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0454">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0455">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0456">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0457">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0458">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0459">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0460">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0461">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0462">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0463">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0464">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0465">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0466">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0467">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0468">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0469">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0470">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0471">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0472">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0473">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0474">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0475">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0476">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0477">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0478">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0479">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0480">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0481">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0482">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0483">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0484">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0485">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0486">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0487">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0488">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0489">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0490">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0491">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0492">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0493">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0494">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0495">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0496">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0497">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0498">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0499">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0500">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0501">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0502">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0503">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0504">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0505">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0506">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0507">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0508">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0509">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0510">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0511">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0513">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0514">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0515">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0516">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0517">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0518">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0519">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0520">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0521">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0522">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0523">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0524">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0525">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0526">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0527">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0528">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0529">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0530">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0531">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0532">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0533">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0534">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0535">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0536">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0537">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0538">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0539">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0540">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0541">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0542">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0543">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0544">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0545">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0546">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0547">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0548">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0549">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0550">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0551">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0552">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0553">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0554">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0555">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0556">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0557">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0558">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0559">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0560">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0561">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0562">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0563">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0564">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0565">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0566">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0567">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0568">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0569">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0570">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0571">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0572">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0573">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0574">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0575">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0576">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0577">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0578">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0579">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0580">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0581">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0582">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0583">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0584">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0585">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0586">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0587">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0588">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0589">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0590">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0591">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0592">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0593">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0594">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0595">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0596">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0597">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0598">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0599">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0600">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0601">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0602">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0603">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0604">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0605">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0606">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0607">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0608">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0609">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0610">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0611">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0612">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0613">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0614">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0615">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0616">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0617">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0618">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0619">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0620">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0621">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0622">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0623">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0624">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0625">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0626">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0627">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0628">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0629">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0630">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0631">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0632">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0633">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0634">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0635">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0636">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0637">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0638">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0639">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0640">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0641">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0642">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0643">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0644">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0645">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0646">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0647">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0648">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0649">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0650">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0651">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0652">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0653">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0654">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0655">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0656">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0657">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0658">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0659">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0660">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0661">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0662">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0663">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0664">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0665">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0666">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0667">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0668">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0669">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0670">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0671">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0672">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0673">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0674">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0675">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0676">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0677">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0678">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0679">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0680">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0681">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0682">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0683">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0684">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0685">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0686">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0687">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0688">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0689">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0690">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0691">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0692">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0693">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0694">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0695">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0696">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0697">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0698">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0699">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0700">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0701">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0702">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0703">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0704">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0705">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0706">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0707">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0708">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0709">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0710">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0711">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0712">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0713">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0714">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0715">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0716">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0717">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0718">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0719">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0720">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0721">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0722">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0723">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0724">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0725">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0726">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0727">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0728">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0729">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0730">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0731">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0732">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0733">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0734">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0735">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0736">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0737">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0738">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0739">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0740">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0741">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0742">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0743">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0744">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0745">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0746">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0747">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0748">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0749">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0750">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0751">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0752">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0753">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0754">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0755">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0756">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0757">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0758">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0759">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0760">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0761">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0762">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0763">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0764">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0765">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0766">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0767">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0768">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0769">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0770">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0771">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0772">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0773">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0774">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0775">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0776">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0777">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0778">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0779">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0780">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0781">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0782">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0783">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0784">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0785">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0786">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0787">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0788">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0789">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0790">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0791">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0792">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0793">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0794">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0795">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0796">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0797">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0798">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0799">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0800">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0801">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0802">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0803">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0804">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0805">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0806">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0807">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0808">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0809">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0810">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0811">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0812">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0813">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0814">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0815">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0816">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0817">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0818">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0819">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0820">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0821">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0822">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0823">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0824">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0825">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0826">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0827">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0828">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0829">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0830">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0831">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0832">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0833">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0834">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0835">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0836">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0837">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0838">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0839">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0840">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0841">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0842">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0843">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0844">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0845">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0846">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0847">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0848">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0849">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0850">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0851">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0852">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0853">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0854">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0855">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0856">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0857">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0858">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0859">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0860">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0861">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0862">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0863">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0864">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0865">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0866">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0867">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0868">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0869">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0870">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0871">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0872">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0873">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0874">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0875">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0876">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0877">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0878">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0879">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0880">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0881">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0882">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0883">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0884">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0885">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0886">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0887">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0888">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0889">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0890">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0891">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0892">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0893">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0894">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0895">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0896">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0897">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0898">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0899">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0900">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0901">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0902">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0903">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0904">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0905">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0906">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0907">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0908">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0909">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0910">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0911">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0912">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0913">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0914">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0915">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0916">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0917">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0918">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0919">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0920">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0921">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0922">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0923">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0924">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0925">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0926">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0927">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0928">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0929">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0930">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0931">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0932">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0933">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0934">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0935">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0936">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0937">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0938">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0939">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0940">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0941">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0942">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0943">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0944">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0945">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0946">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0947">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0948">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0949">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0950">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0951">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0952">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0953">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0954">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0955">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0956">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0957">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0958">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0959">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0960">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0961">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0962">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0963">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0964">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0965">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0966">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0967">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0968">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0969">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0970">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0971">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0972">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0973">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0974">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0975">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0976">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0977">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0978">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0979">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0980">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0981">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0982">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0983">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0984">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0985">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0986">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0987">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0988">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0989">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0990">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0991">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0992">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0993">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0994">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0995">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0996">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0997">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0998">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_0999">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="256_1000">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:originalUri>https://ais.swisscom.com/AIS-Server/rs/v1.0/sign</con:originalUri><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" id="91902edc-4e0b-440a-94e9-888db2f5d871"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" id="d97422d9-cdea-4eab-a5cc-7e5f2975a186"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='http://ais.swisscom.ch/1.0/schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:Result</path><content>&lt;Result xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="http://ais.swisscom.ch/1.0/schema">
  &lt;ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success&lt;/ResultMajor>
&lt;/Result></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="46f7c1a3-1913-4f09-880c-e76bd3dc2d67"><con:configuration><scriptText>import org.apache.log4j.Logger 
def msg = messageExchange.getResponseContent()
if( ! (msg.contains('Success')) ) {
	log.error( messageExchange.modelItem.testCase.testSuite.getPropertyValue( "tmp_TestRunID" ) + messageExchange.getResponseStatusCode() + " ErrorResponse=" + msg )
}</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest name="28 OnDemand 1T10" id="0eca1a4a-be37-412f-8769-fb20c9c21673"><con:settings/><con:threadCount>1</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>0</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>0</testDelay><randomFactor>0.0</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"><con:configuration><name>Step Status</name><min-requests>0</min-requests><test-step>- Any -</test-step><max-errors>-1</max-errors></con:configuration></con:assertion><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:setupScript>loadTestRunner.getLoadTest().getTestCase().getTestSuite().setPropertyValue( "tmp_TestRunID", "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " )
def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "Sleep " + delayMs + "ms" )
sleep( delayMs.toInteger() )
log.info( "'" +loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + "STARTED")
</con:setupScript><con:tearDownScript>def delayMs = loadTestRunner.getLoadTest().getTestCase().getTestSuite().getPropertyValue( "Delay" )
log.info( "'" + loadTestRunner.getLoadTest().getTestCase().getName() + "' >> '" + loadTestRunner.getLoadTest().getName() + "' : " + loadTestRunner.getStatus() + " | " + "EndTime " + new Date().format("HH:mm:ss") + " | " + "TimeTaken (ms) " + loadTestRunner.getTimeTaken()-delayMs.toInteger() + " | " + "Errors " + loadTestRunner.getLoadTest().getLoadTestLog().getErrorCount(loadTestRunner.getLoadTest().getTestCase().getTestStepAt(0).getLabel()))</con:tearDownScript><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>BASEURL</con:name><con:value>https://ais.swisscom.com</con:value></con:property><con:property><con:name>PATH_SOAP</con:name><con:value>/AIS-Server/ws</con:value></con:property><con:property><con:name>PATH_REST</con:name><con:value>/AIS-Server/rs/v1.0</con:value></con:property><con:property><con:name>AP_ID</con:name><con:value>cartel.ch</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp2-cartel.ch</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>OnDemand_CN</con:name><con:value>Philipp Haupt</con:value></con:property><con:property><con:name>OnDemand_O</con:name><con:value>Swisscom (Schweiz) AG</con:value></con:property><con:property><con:name>OnDemand_C</con:name><con:value>CH</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>Delay</con:name><con:value>1000</con:value></con:property><con:property><con:name>tmp_TestRunID</con:name><con:value>'01 Timestamp' >> '01 Timestamp 1T100' : </con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:tags/></con:soapui-project>